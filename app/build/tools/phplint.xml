<?xml version="1.0" encoding="UTF-8"?>
<project name="phplint" basedir=".">

    <!--target name="run" description="Perform syntax check of sourcecode files">
        <apply executable="php" failonerror="true">
            <arg value="-l" />
            <fileset dir="${srcDir}">
                <include name="**/*.php" />
                <modified>
                    <param name="cache.cachefile" value="/dev/null" />
                </modified>
            </fileset>
            <fileset dir="${testsDir}">
                <include name="**/*.php" />
                <modified>
                    <param name="cache.cachefile" value="/dev/null" />
                </modified>
            </fileset>
        </apply>
    </target-->


    <!--
    ${buildDir}phplint/cache.cachefile
    More faster : lint only modified files
    We create a new target to retrieve a list of modified files
    If there is modified files, execute the lint target, else skip
    with the `if="modifiedFiles"` option.
    The list of modified files is stored in ${files.modified}, one file per line.
    Feel free to reuse the checkModified target to execute other tasks only on
    newly modified .php files

-->

    <!-- A new target to search for modified files -->
    <target name="checkModified" description="Check for modified php files">

        <echo message="Searching for newly modified files" />

        <path id="editedfiles">
            <fileset dir="${srcDir}">
                <modified />  <!-- Search only for modified files -->
                <include name="**/*.php" /> <!-- Search only for files with .php extension -->
            </fileset>
            <fileset dir="${testsDir}">
                <modified />  <!-- Search only for modified files -->
                <include name="**/*.php" /> <!-- Search only for files with .php extension -->
            </fileset>
        </path>

        <pathconvert pathsep="${line.separator}" property="files.modified" refid="editedfiles" />

        <condition property="modifiedFiles">
            <not>
                <equals arg1="${files.modified}" arg2="" />
            </not>
        </condition>

    </target>


    <!-- The Php Lint target -->
    <!-- Will only execute if and only if there is some modified files -->
    <target name="run" depends="checkModified" description="Perform syntax check of sourcecode files" if="modifiedFiles">
        <echo message="Linting php files" />
        <exec executable="bash" failonerror="true">
            <arg value="-c" />
            <arg value="echo '${files.modified}' | xargs -n 1 -P 4 php -l" />
        </exec>
    </target>


    <!--
      Just lint all files in parallel
      If you want to lint all files, not only on modified one

    -->
    <target name="parallel" description="Perform syntax check of sourcecode files">
        <exec executable="bash" failonerror="true">
            <arg value="-c" />
            <arg value="find -L ${srcDir} -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l" />
        </exec>
        <exec executable="bash" failonerror="true">
            <arg value="-c" />
            <arg value="find -L ${testsDir} -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l" />
        </exec>
    </target>

</project>



