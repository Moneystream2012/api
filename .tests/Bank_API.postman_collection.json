{
	"version": 1,
	"collections": [
		{
			"id": "143b5691-3600-2365-5fac-952625c1e9eb",
			"name": "CLI",
			"description": "",
			"order": [
				"a32d9b62-7d6d-6888-b2e5-b2f63d74f4a8",
				"ab75e58b-8e50-9f9f-87e4-b1b0c750479b"
			],
			"folders": [],
			"folders_order": [],
			"timestamp": 1508433827608,
			"synced": true,
			"remote_id": 0,
			"owner": "2799045",
			"sharedWithTeam": false,
			"subscribed": false,
			"public": false,
			"createdAt": 1509176386056,
			"updatedAt": 1509176386056,
			"write": true,
			"published": false,
			"favorite": false,
			"permissions": {},
			"syncedPermissions": {},
			"shared": false,
			"hasRequests": true,
			"requests": [
				{
					"id": "a32d9b62-7d6d-6888-b2e5-b2f63d74f4a8",
					"owner": "2799045",
					"headers": "content-type: text/plain;\n",
					"headerData": [
						{
							"key": "content-type",
							"value": "text/plain;",
							"enabled": true,
							"description": ""
						}
					],
					"url": "http://127.0.0.1:17786/",
					"queryParams": [],
					"pathVariables": {},
					"pathVariableData": [],
					"preRequestScript": "",
					"method": "POST",
					"collectionId": "143b5691-3600-2365-5fac-952625c1e9eb",
					"data": "{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getaccountaddress\", \"params\": [\"myaccount\"] }",
					"dataMode": "raw",
					"name": "http://127.0.0.1:83322/",
					"description": "Generated from a curl request: \ncurl --user myusername --data-binary '{\\\"jsonrpc\\\": \\\"1.0\\\", \\\"id\\\":\\\"curltest\\\", \\\"method\\\": \\\"getaccountaddress\\\", \\\"params\\\": [\\\"myaccount\\\"] }' -H 'content-type: text/plain;' http://127.0.0.1:83322/",
					"descriptionFormat": "html",
					"time": 1508433828935,
					"version": 2,
					"responses": [],
					"tests": "",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"collection_id": "143b5691-3600-2365-5fac-952625c1e9eb",
					"timestamp": null,
					"collection": "143b5691-3600-2365-5fac-952625c1e9eb"
				},
				{
					"id": "ab75e58b-8e50-9f9f-87e4-b1b0c750479b",
					"headers": "content-type: text/plain;\n",
					"headerData": [
						{
							"key": "content-type",
							"value": "text/plain;",
							"description": "",
							"enabled": true
						}
					],
					"url": "http://user:password@127.0.0.1:17786/",
					"queryParams": [],
					"preRequestScript": "",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": "{\"jsonrpc\":\"1.0\",\"id\":\"curltest\",\"method\":\"getinfo\",\"params\":[]}",
					"dataMode": "raw",
					"version": 2,
					"tests": "",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1509130240207,
					"name": "@",
					"description": "",
					"collectionId": "143b5691-3600-2365-5fac-952625c1e9eb",
					"responses": [],
					"owner": "2799045",
					"collection": "143b5691-3600-2365-5fac-952625c1e9eb",
					"collection_id": "143b5691-3600-2365-5fac-952625c1e9eb"
				}
			]
		},
		{
			"id": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
			"name": "API Explorer",
			"description": "",
			"order": [
				"cd2d1e9c-6727-4963-0dfb-1e9de3e937bb",
				"726ceff9-b480-1014-7ecb-0c0ff78a228d"
			],
			"folders": [
				{
					"collection": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collectionId": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collection_id": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"createdAt": "2017-09-21T16:13:12.000Z",
					"description": "",
					"folder": null,
					"folders_order": [],
					"id": "28e6eca1-97fe-edbb-1613-87a13256ff4e",
					"lastRevision": 2316749353,
					"lastUpdatedBy": "2799045",
					"name": "Private",
					"order": [
						"db055f1d-b7ea-5c74-3ce6-f48f9aee7d18",
						"a0ed127f-65b6-cba9-a2f7-d93326516ece",
						"468cd687-0f29-d540-eb3b-30bf51aac0a0",
						"8713aa5c-51df-9926-1150-803a2436c830",
						"093dd721-1d69-a80d-b89a-0891a3bcacc4",
						"1d99ccb7-5b1c-c5e0-0403-38252021114d",
						"04ab3203-31f8-55da-6661-0ed6aeaf6cd3"
					],
					"owner": "2799045",
					"updatedAt": "2017-10-03T10:18:34.000Z"
				},
				{
					"collection": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collectionId": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collection_id": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"createdAt": "2017-09-21T16:12:57.000Z",
					"description": "",
					"folder": null,
					"folders_order": [],
					"id": "4dbe03f8-dc72-b033-1911-2be481d7663d",
					"lastRevision": 2316749483,
					"lastUpdatedBy": "2799045",
					"name": "Public",
					"order": [
						"4d859692-8cc2-3c25-1696-e0d8b25accd9",
						"e8007289-3375-bde3-964d-1f8a8ecdf156",
						"91b36357-af7b-5967-d9f3-a9d54b5e43a0",
						"0fdced8c-dfd9-4f4b-60db-c31a6310099b",
						"be025cc5-5974-8486-4872-6fb6945d6ae4",
						"e5336b1d-8148-c19a-7622-83a50bfe604c",
						"eec91c61-69a9-2812-430f-5e89252cd2f6"
					],
					"owner": "2799045",
					"updatedAt": "2017-10-03T10:18:35.000Z"
				}
			],
			"folders_order": [
				"4dbe03f8-dc72-b033-1911-2be481d7663d",
				"28e6eca1-97fe-edbb-1613-87a13256ff4e"
			],
			"timestamp": 0,
			"synced": true,
			"remote_id": "0",
			"owner": "2799045",
			"sharedWithTeam": false,
			"subscribed": false,
			"remoteLink": "",
			"remoteLinkUpdatedAt": null,
			"public": false,
			"createdAt": 1509356269680,
			"updatedAt": 1509356269680,
			"write": true,
			"published": false,
			"favorite": false,
			"permissions": {},
			"syncedPermissions": {},
			"requests": [
				{
					"collection": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collectionId": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collection_id": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"createdAt": "2017-09-21T16:13:12.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"descriptionFormat": "html",
					"folder": "28e6eca1-97fe-edbb-1613-87a13256ff4e",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "04ab3203-31f8-55da-6661-0ed6aeaf6cd3",
					"lastRevision": 2285331225,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Single address details (private)",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": null,
					"updatedAt": "2017-09-27T09:14:56.000Z",
					"url": "{{url}}/private/address/detail/XVBcuktbPLr7QqFwBzEySjKFv5ZLwuBHhm"
				},
				{
					"collection": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collectionId": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collection_id": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"createdAt": "2017-09-27T11:59:24.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"descriptionFormat": null,
					"folder": "28e6eca1-97fe-edbb-1613-87a13256ff4e",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "093dd721-1d69-a80d-b89a-0891a3bcacc4",
					"lastRevision": 2316767190,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Single transaction (private)",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"tests": null,
					"updatedAt": "2017-10-03T10:20:45.000Z",
					"url": "{{url}}/public/transaction/343f92d2f8b104b96b6e9e1ff72236b1778026e11fb08279a443f5bb0f354b02",
					"write": true
				},
				{
					"collection": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collectionId": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collection_id": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "Метод возвращает список транзакций начиная",
					"folder": "4dbe03f8-dc72-b033-1911-2be481d7663d",
					"headerData": [],
					"headers": "",
					"helperAttributes": {},
					"id": "0fdced8c-dfd9-4f4b-60db-c31a6310099b",
					"method": "GET",
					"name": "Transaction list (public)",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": null,
					"time": 1507643712370,
					"url": "{{url}}/api/transaction"
				},
				{
					"collection": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collectionId": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collection_id": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"createdAt": "2017-09-21T16:13:12.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"descriptionFormat": "html",
					"folder": "28e6eca1-97fe-edbb-1613-87a13256ff4e",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "1d99ccb7-5b1c-c5e0-0403-38252021114d",
					"lastRevision": 2285339549,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Single address balance (private)",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": null,
					"updatedAt": "2017-09-27T09:15:42.000Z",
					"url": "{{url}}/private/address/get-balance/XVBcuktbPLr7QqFwBzEySjKFv5ZLwuBHhm"
				},
				{
					"collection": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collectionId": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collection_id": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"createdAt": "2017-09-21T16:13:12.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"descriptionFormat": "html",
					"folder": "28e6eca1-97fe-edbb-1613-87a13256ff4e",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "468cd687-0f29-d540-eb3b-30bf51aac0a0",
					"lastRevision": 2285336725,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Single block (private)",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": null,
					"updatedAt": "2017-09-27T09:15:31.000Z",
					"url": "{{url}}/private/block/0000000aad5caa3de3e3bae6c1a36d56e2745e71a3f04df035e5f6769c4f56fa"
				},
				{
					"collection": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collectionId": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collection_id": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "Возвращает массив данных о блоках начиная с 0 общее количество 20\nПараметры ?page=\nВ заголовках ответа:\n• X-Pagination-Total-Count - общее количество блоков\n• X-Pagination-Page-Count - общее количество страниц",
					"folder": "4dbe03f8-dc72-b033-1911-2be481d7663d",
					"headerData": [],
					"headers": "",
					"helperAttributes": {},
					"id": "4d859692-8cc2-3c25-1696-e0d8b25accd9",
					"method": "GET",
					"name": "Block list",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"tests": null,
					"time": 1507643710481,
					"url": "{{url}}/api/block"
				},
				{
					"owner": "2799045",
					"lastUpdatedBy": "2799045",
					"lastRevision": 2399027781,
					"folder": null,
					"id": "726ceff9-b480-1014-7ecb-0c0ff78a228d",
					"name": "Дективация ключа",
					"dataMode": "params",
					"data": null,
					"rawModeData": null,
					"descriptionFormat": null,
					"description": "",
					"headers": "",
					"method": "GET",
					"pathVariables": {},
					"url": "https://test.minexexplorer.com/api-key/decline?accessToken=",
					"preRequestScript": null,
					"tests": null,
					"currentHelper": "normal",
					"helperAttributes": {},
					"queryParams": [
						{
							"key": "accessToken",
							"value": "",
							"equals": true,
							"description": "",
							"enabled": true
						}
					],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-10-17T06:36:09.000Z",
					"updatedAt": "2017-10-17T06:36:09.000Z",
					"collectionId": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"write": true,
					"collection_id": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collection": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902"
				},
				{
					"collection": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collectionId": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collection_id": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"createdAt": "2017-09-21T16:13:12.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"descriptionFormat": "html",
					"folder": "28e6eca1-97fe-edbb-1613-87a13256ff4e",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "8713aa5c-51df-9926-1150-803a2436c830",
					"lastRevision": 2286779575,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Transaction list (private)",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": null,
					"updatedAt": "2017-09-27T11:57:35.000Z",
					"url": "{{url}}/private/transaction"
				},
				{
					"collection": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collectionId": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collection_id": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "4dbe03f8-dc72-b033-1911-2be481d7663d",
					"headerData": [],
					"headers": "",
					"helperAttributes": {},
					"id": "91b36357-af7b-5967-d9f3-a9d54b5e43a0",
					"method": "GET",
					"name": "Single block (public)",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": null,
					"time": 1507643711702,
					"url": "{{url}}/api/block/0000001b49261cd458a38fa5836b62ff3434d64d1ffc13148a50a232520ee5fd"
				},
				{
					"collection": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collectionId": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collection_id": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"createdAt": "2017-10-03T10:18:29.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "Возвращает массив данных о блоках начиная с 0 общее количество 20\nПараметры ?page=\nВ заголовках ответа:\n• X-Pagination-Total-Count - общее количество блоков\n• X-Pagination-Page-Count - общее количество страниц",
					"descriptionFormat": null,
					"folder": "28e6eca1-97fe-edbb-1613-87a13256ff4e",
					"headerData": [],
					"headers": "",
					"helperAttributes": {},
					"id": "a0ed127f-65b6-cba9-a2f7-d93326516ece",
					"isLastRequest": true,
					"lastRevision": 2316751691,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Block list & min confirmation",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [
						{
							"description": "",
							"enabled": true,
							"equals": true,
							"key": "minConfirmations",
							"value": "10000"
						}
					],
					"rawModeData": null,
					"tests": null,
					"updatedAt": "2017-10-03T10:18:51.000Z",
					"url": "{{url}}/private/block?minConfirmations=10000",
					"write": true
				},
				{
					"collection": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collectionId": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collection_id": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "4dbe03f8-dc72-b033-1911-2be481d7663d",
					"headerData": [],
					"headers": "",
					"helperAttributes": {},
					"id": "be025cc5-5974-8486-4872-6fb6945d6ae4",
					"method": "GET",
					"name": "Single transaction (public)",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"tests": null,
					"time": 1507643713084,
					"url": "{{url}}/api/transaction/88084a2a61f32463e8090ba20f40e0a488622693b541f9bb76fe83f05c02e199"
				},
				{
					"owner": "2799045",
					"lastUpdatedBy": "2799045",
					"lastRevision": 2399027355,
					"folder": null,
					"id": "cd2d1e9c-6727-4963-0dfb-1e9de3e937bb",
					"name": "Активация ключа",
					"dataMode": "params",
					"data": null,
					"rawModeData": null,
					"descriptionFormat": null,
					"description": "",
					"headers": "",
					"method": "PATCH",
					"pathVariables": {},
					"url": "https://test.minexexplorer.com/api-key/approve?accessToken=",
					"preRequestScript": null,
					"tests": null,
					"currentHelper": "normal",
					"helperAttributes": {},
					"queryParams": [
						{
							"key": "accessToken",
							"value": "",
							"equals": true,
							"description": "",
							"enabled": true
						}
					],
					"headerData": [],
					"pathVariableData": [],
					"createdAt": "2017-10-17T06:36:05.000Z",
					"updatedAt": "2017-10-17T06:36:05.000Z",
					"collectionId": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"write": true,
					"collection_id": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collection": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902"
				},
				{
					"collection": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collectionId": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collection_id": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"createdAt": "2017-09-27T11:54:54.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"descriptionFormat": null,
					"folder": "28e6eca1-97fe-edbb-1613-87a13256ff4e",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "db055f1d-b7ea-5c74-3ce6-f48f9aee7d18",
					"lastRevision": 2316839677,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Block list",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [
						{
							"description": "",
							"enabled": true,
							"equals": true,
							"key": "access-token",
							"value": "9Pw_Hlo1IHdfEQWOhX4Rc8xrIHwAsMRs"
						}
					],
					"rawModeData": null,
					"tests": null,
					"updatedAt": "2017-10-03T10:30:39.000Z",
					"url": "{{url}}/private/block?access-token=9Pw_Hlo1IHdfEQWOhX4Rc8xrIHwAsMRs",
					"write": true
				},
				{
					"collection": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collectionId": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collection_id": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "Метод возвращает",
					"folder": "4dbe03f8-dc72-b033-1911-2be481d7663d",
					"headerData": [],
					"headers": "",
					"helperAttributes": {},
					"id": "e5336b1d-8148-c19a-7622-83a50bfe604c",
					"method": "GET",
					"name": "Single address balance (public)",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": null,
					"time": 1507911826704,
					"url": "{{url}}/api/address/XD4wkmsh6VB2J12zrRZS5SGYjQdWfVMvAz/get-balance"
				},
				{
					"collection": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collectionId": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collection_id": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"createdAt": "2017-10-02T08:54:26.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "Возвращает массив данных о блоках начиная с 0 общее количество 20\nПараметры ?page=\nВ заголовках ответа:\n• X-Pagination-Total-Count - общее количество блоков\n• X-Pagination-Page-Count - общее количество страниц",
					"descriptionFormat": null,
					"folder": "4dbe03f8-dc72-b033-1911-2be481d7663d",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "e8007289-3375-bde3-964d-1f8a8ecdf156",
					"lastRevision": 2311879794,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Block list & min confirmation",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [
						{
							"description": "",
							"enabled": true,
							"equals": true,
							"key": "minConfirmations",
							"value": "10000"
						}
					],
					"rawModeData": null,
					"tests": null,
					"time": 1506934723586,
					"updatedAt": "2017-10-02T14:29:41.000Z",
					"url": "{{url}}/api/block?minConfirmations=10000"
				},
				{
					"collection": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collectionId": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"collection_id": "f621537a-5c31-b7e2-a5d3-b8fd0cd2f902",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "4dbe03f8-dc72-b033-1911-2be481d7663d",
					"headerData": [],
					"headers": "",
					"helperAttributes": {},
					"id": "eec91c61-69a9-2812-430f-5e89252cd2f6",
					"method": "GET",
					"name": "Single address details (public)",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": null,
					"time": 1507642426252,
					"url": "{{url}}/api/address/XCy9gDN2m29qJFbkb4hHLMFkfqf4yt6dcx"
				}
			]
		},
		{
			"id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
			"name": "API BANK Admin",
			"description": "",
			"order": [],
			"folders": [
				{
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"createdAt": "2017-10-13T13:12:11.000Z",
					"description": "",
					"folder": null,
					"folders_order": [
						"3398654c-b153-facf-f3c0-6f01edaa9fb3",
						"405997bb-fb83-4b9d-3687-66405ffb6260"
					],
					"id": "d65b42a5-a932-f070-9988-2bf2549e42e2",
					"lastRevision": 2383651702,
					"lastUpdatedBy": "2799045",
					"name": "ADMIN",
					"order": [
						"f897ecf1-3e97-e889-11a4-7445668209b4",
						"e2a50ce7-dda9-5b92-a68e-987434c5305e",
						"d2cd897d-dd02-44fc-c455-c82432b364be",
						"cf87fb75-bd83-0740-4764-6c8076605490"
					],
					"owner": "2799045",
					"updatedAt": "2017-10-13T15:52:14.000Z"
				},
				{
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"createdAt": 1509126413099,
					"description": "",
					"folder": "d65b42a5-a932-f070-9988-2bf2549e42e2",
					"folders_order": [],
					"id": "3398654c-b153-facf-f3c0-6f01edaa9fb3",
					"name": "Statistic",
					"order": [
						"d55f28ff-b936-303f-fd80-07c53988ac9b",
						"f294cb93-1237-f0eb-324f-5b76f2b9c13b",
						"509e6d3f-716c-1b12-f2cf-b1ec4fb62b17",
						"35880109-d49c-b6d0-de61-de5f63034bbd",
						"3d124750-47c7-e994-93a7-c00c01f7add8",
						"8e9bd518-5096-869e-440f-04ec428be41c",
						"8a2726cd-66f6-2c1a-ee42-b7c880f0788e",
						"49929444-8c25-38e3-5ad6-807c743de79d",
						"65902786-59d2-c976-ff88-7fd1f4f1d995",
						"fb704f2d-3630-d51e-7bfc-b8b63c30ac92",
						"66ef5633-0079-e3c3-e364-150e677ed3f7",
						"465cb14e-fbae-a5f9-1459-16fc1ec219b6",
						"1465b7ab-9e5c-ccd6-2372-bb1309069461"
					],
					"owner": "2799045",
					"updatedAt": 1509126413099
				},
				{
					"name": "Create parking type",
					"description": "",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"order": [
						"b00efa66-9348-bfd3-e289-ee9e6cbe646d",
						"70ade594-87f5-e0cc-8fc2-b3304effd399",
						"6f6dbb27-0ba5-c994-51c8-a631afc07773",
						"9492f837-f4f7-4daa-82b1-b563fe973ce1"
					],
					"owner": "2799045",
					"folder": "d65b42a5-a932-f070-9988-2bf2549e42e2",
					"folders_order": [],
					"createdAt": 1509363801819,
					"updatedAt": 1509363801819,
					"id": "405997bb-fb83-4b9d-3687-66405ffb6260",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3"
				}
			],
			"folders_order": [
				"d65b42a5-a932-f070-9988-2bf2549e42e2"
			],
			"timestamp": 0,
			"synced": true,
			"remote_id": "0",
			"owner": "2799045",
			"sharedWithTeam": false,
			"subscribed": false,
			"remoteLink": "https://www.getpostman.com/collections/b7f62c91d5a78ee358f5",
			"remoteLinkUpdatedAt": 1509351759064,
			"public": false,
			"createdAt": 1509356281480,
			"updatedAt": 1509362550044,
			"write": true,
			"published": false,
			"favorite": false,
			"permissions": {},
			"syncedPermissions": {},
			"requests": [
				{
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "3398654c-b153-facf-f3c0-6f01edaa9fb3",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "{{app/json}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: {{app/json}}\n",
					"helperAttributes": {},
					"id": "1465b7ab-9e5c-ccd6-2372-bb1309069461",
					"method": "GET",
					"name": "Total users",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": null,
					"time": 1509127033222,
					"url": "{{url}}/statistic/action/total-users"
				},
				{
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "3398654c-b153-facf-f3c0-6f01edaa9fb3",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "{{app/json}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: {{app/json}}\n",
					"helperAttributes": {},
					"id": "35880109-d49c-b6d0-de61-de5f63034bbd",
					"isLastRequest": true,
					"method": "GET",
					"name": "Freezing",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": null,
					"time": 1509126785195,
					"url": "{{url}}/statistic/action/freezing"
				},
				{
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "3398654c-b153-facf-f3c0-6f01edaa9fb3",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "{{app/json}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: {{app/json}}\n",
					"helperAttributes": {},
					"id": "3d124750-47c7-e994-93a7-c00c01f7add8",
					"method": "GET",
					"name": "Hot reserve",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": null,
					"time": 1509126809774,
					"url": "{{url}}/statistic/action/hot-reserve"
				},
				{
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "3398654c-b153-facf-f3c0-6f01edaa9fb3",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "{{app/json}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: {{app/json}}\n",
					"helperAttributes": {},
					"id": "465cb14e-fbae-a5f9-1459-16fc1ec219b6",
					"method": "GET",
					"name": "Total supply",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": null,
					"time": 1509127034953,
					"url": "{{url}}/statistic/action/total-supply"
				},
				{
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "3398654c-b153-facf-f3c0-6f01edaa9fb3",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "{{app/json}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: {{app/json}}\n",
					"helperAttributes": {},
					"id": "49929444-8c25-38e3-5ad6-807c743de79d",
					"method": "GET",
					"name": "Parking",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": null,
					"time": 1509126924654,
					"url": "{{url}}/statistic/action/parking"
				},
				{
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "3398654c-b153-facf-f3c0-6f01edaa9fb3",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "{{app/json}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: {{app/json}}\n",
					"helperAttributes": {},
					"id": "509e6d3f-716c-1b12-f2cf-b1ec4fb62b17",
					"method": "GET",
					"name": "Debts for this week",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": null,
					"time": 1509126765210,
					"url": "{{url}}/statistic/action/debts-for-this-week"
				},
				{
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "3398654c-b153-facf-f3c0-6f01edaa9fb3",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "{{app/json}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: {{app/json}}\n",
					"helperAttributes": {},
					"id": "65902786-59d2-c976-ff88-7fd1f4f1d995",
					"method": "GET",
					"name": "Parking users",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": null,
					"time": 1509126919657,
					"url": "{{url}}/statistic/action/parking-users"
				},
				{
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "3398654c-b153-facf-f3c0-6f01edaa9fb3",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "{{app/json}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: {{app/json}}\n",
					"helperAttributes": {},
					"id": "66ef5633-0079-e3c3-e364-150e677ed3f7",
					"method": "GET",
					"name": "Total parking amount",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": null,
					"time": 1509126988712,
					"url": "{{url}}/statistic/action/total-parking-amount"
				},
				{
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"currentHelper": "normal",
					"data": "{\n    \"name\":\"30 min\",\n    \"rate\":\"0.6\",\n    \"period\":\"1800\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "405997bb-fb83-4b9d-3687-66405ffb6260",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": {},
					"id": "6f6dbb27-0ba5-c994-51c8-a631afc07773",
					"method": "POST",
					"name": "Create parking type copy",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": null,
					"time": 1508921697485,
					"url": "{{url}}/finance/parking/type",
					"isFromCollection": true,
					"collectionRequestId": "6f6dbb27-0ba5-c994-51c8-a631afc07773"
				},
				{
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"currentHelper": "normal",
					"data": "{\n    \"name\":\"30 min\",\n    \"rate\":\"0.6\",\n    \"period\":\"1800\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "405997bb-fb83-4b9d-3687-66405ffb6260",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": {},
					"id": "70ade594-87f5-e0cc-8fc2-b3304effd399",
					"method": "POST",
					"name": "Create parking type copy",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": null,
					"time": 1508921697485,
					"url": "{{url}}/finance/parking/type",
					"isFromCollection": true,
					"collectionRequestId": "70ade594-87f5-e0cc-8fc2-b3304effd399",
					"folderId": "405997bb-fb83-4b9d-3687-66405ffb6260"
				},
				{
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "3398654c-b153-facf-f3c0-6f01edaa9fb3",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "{{app/json}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: {{app/json}}\n",
					"helperAttributes": {},
					"id": "8a2726cd-66f6-2c1a-ee42-b7c880f0788e",
					"method": "GET",
					"name": "On hand",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": null,
					"time": 1509126880410,
					"url": "{{url}}/statistic/action/on-hand"
				},
				{
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "3398654c-b153-facf-f3c0-6f01edaa9fb3",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "{{app/json}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: {{app/json}}\n",
					"helperAttributes": {},
					"id": "8e9bd518-5096-869e-440f-04ec428be41c",
					"method": "GET",
					"name": "Minexbank reserve",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": null,
					"time": 1509126829879,
					"url": "{{url}}/statistic/action/minexbank-reserve"
				},
				{
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"currentHelper": "normal",
					"data": "{\n    \"name\":\"30 min\",\n    \"rate\":\"0.6\",\n    \"period\":\"1800\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "405997bb-fb83-4b9d-3687-66405ffb6260",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": {},
					"id": "9492f837-f4f7-4daa-82b1-b563fe973ce1",
					"method": "POST",
					"name": "Create parking type copy",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": null,
					"time": 1508921697485,
					"url": "{{url}}/finance/parking/type",
					"isFromCollection": true,
					"collectionRequestId": "9492f837-f4f7-4daa-82b1-b563fe973ce1"
				},
				{
					"id": "b00efa66-9348-bfd3-e289-ee9e6cbe646d",
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"headerData": [
						{
							"key": "Access-Token",
							"value": "{{h.token}}",
							"description": "",
							"enabled": true
						},
						{
							"key": "Token-Type",
							"value": "{{h.tokenType}}",
							"description": "",
							"enabled": true
						},
						{
							"key": "Userid",
							"value": "{{h.userid}}",
							"description": "",
							"enabled": true
						},
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"enabled": true
						}
					],
					"url": "{{url}}/finance/parking/type",
					"folder": "405997bb-fb83-4b9d-3687-66405ffb6260",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": "{\n    \"name\":\"Daily\",\n    \"rate\": \"0.1\",\n    \"period\": \"86400\"\n}",
					"dataMode": "raw",
					"tests": null,
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1509362549998,
					"name": "Create parking type",
					"description": "",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"responses": [],
					"isFromCollection": true,
					"collectionRequestId": "b00efa66-9348-bfd3-e289-ee9e6cbe646d"
				},
				{
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"currentHelper": "normal",
					"data": "{\n\t\"title\":\"test2eeee\",\n\t\"content\":\"<p>1221212</p><p>1221212</p><p>1221212</p>\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "d65b42a5-a932-f070-9988-2bf2549e42e2",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": {},
					"id": "cf87fb75-bd83-0740-4764-6c8076605490",
					"method": "POST",
					"name": "Create notification",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": "",
					"queryParams": [],
					"responses": [],
					"tests": "",
					"time": 1509093060487,
					"url": "{{url}}/notification",
					"version": 2
				},
				{
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"createdAt": "2017-10-13T15:52:13.000Z",
					"currentHelper": "normal",
					"data": "{\n  \"email\": \"testmnx@p33.org\"\n}",
					"dataMode": "raw",
					"description": "",
					"descriptionFormat": null,
					"folder": "d65b42a5-a932-f070-9988-2bf2549e42e2",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": "{}",
					"id": "d2cd897d-dd02-44fc-c455-c82432b364be",
					"lastRevision": 2383651685,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Subscribe",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": "{\n  \"email\": \"testmnx@p33.org\"\n}",
					"responses": [],
					"tests": null,
					"updatedAt": "2017-10-13T15:52:13.000Z",
					"url": "{{url}}/subscriber"
				},
				{
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "3398654c-b153-facf-f3c0-6f01edaa9fb3",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "{{app/json}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: {{app/json}}\n",
					"helperAttributes": {},
					"id": "d55f28ff-b936-303f-fd80-07c53988ac9b",
					"method": "GET",
					"name": "Cold wallet",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": null,
					"time": 1509126696378,
					"url": "{{url}}/statistic/action/cold-wallet"
				},
				{
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"createdAt": "2017-10-13T13:12:12.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"descriptionFormat": null,
					"folder": "d65b42a5-a932-f070-9988-2bf2549e42e2",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "{{app/json}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: {{app/json}}\n",
					"helperAttributes": "{}",
					"id": "e2a50ce7-dda9-5b92-a68e-987434c5305e",
					"lastRevision": 2382707477,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Parking list",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": null,
					"updatedAt": "2017-10-13T13:24:45.000Z",
					"url": "{{url}}/finance/parking/admin-status"
				},
				{
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "3398654c-b153-facf-f3c0-6f01edaa9fb3",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "{{app/json}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: {{app/json}}\n",
					"helperAttributes": {},
					"id": "f294cb93-1237-f0eb-324f-5b76f2b9c13b",
					"method": "GET",
					"name": "Debts",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": null,
					"time": 1509126743058,
					"url": "{{url}}/statistic/action/debts"
				},
				{
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"currentHelper": "normal",
					"data": "{\n  \"address\":\"XVBcuktbPLr7QqFwBzEySjKFv5ZLwuBHhx\",\n  \"password\":\"kjashdakjsd832y0e9du3478\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "d65b42a5-a932-f070-9988-2bf2549e42e2",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Token",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Content-Type: application/json\n//Access-Token: {{h.token}}\n//Token: {{h.tokenType}}\n//Userid: {{h.userid}}\n",
					"helperAttributes": "{}",
					"id": "f897ecf1-3e97-e889-11a4-7445668209b4",
					"isFromCollection": true,
					"method": "POST",
					"name": "Sign-in",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": "",
					"queryParams": [],
					"responses": [],
					"tests": "var tokenType = postman.getResponseHeader(\"Token-Type\"); \n    postman.setEnvironmentVariable(\"h.tokenType\", tokenType);\nvar token = postman.getResponseHeader(\"Access-Token\");\n    postman.setEnvironmentVariable(\"h.token\", token); \nvar userid = JSON.parse(responseBody);\n    postman.setEnvironmentVariable(\"h.userid\", userid.data.id);\n",
					"time": 1508418526189,
					"timestamp": null,
					"url": "{{url}}/user/aaa/sign-in"
				},
				{
					"collection": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collectionId": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"collection_id": "50bb6aac-7278-5d15-7a63-96e2b64088d3",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "3398654c-b153-facf-f3c0-6f01edaa9fb3",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "{{app/json}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: {{app/json}}\n",
					"helperAttributes": {},
					"id": "fb704f2d-3630-d51e-7bfc-b8b63c30ac92",
					"method": "GET",
					"name": "Subscriber count",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": null,
					"time": 1509126963367,
					"url": "{{url}}/statistic/action/subscriber-count"
				}
			]
		},
		{
			"id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
			"name": "API BANK REGRESSION",
			"description": "",
			"order": [],
			"folders": [
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:31.000Z",
					"description": "",
					"folder": null,
					"folders_order": [],
					"id": "72f185fb-64db-a55f-b216-a3b3ecd56f3e",
					"lastRevision": 2398892439,
					"lastUpdatedBy": "2799045",
					"name": "Auth",
					"order": [
						"73dc00b9-6bb0-0895-4083-e4789d0464fe",
						"5772fd5c-a39c-0c57-9db1-764d5c0caa16",
						"62b3dc12-e8cd-e201-a80b-304b1e6acc3b"
					],
					"owner": "2799045",
					"updatedAt": "2017-10-17T06:18:34.000Z",
					"write": true
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:31.000Z",
					"description": "",
					"folder": null,
					"folders_order": [],
					"id": "acb31d00-f048-d7c2-61e4-8c1ac5a9bfad",
					"lastRevision": 2398892440,
					"lastUpdatedBy": "2799045",
					"name": "Dashboard",
					"order": [
						"98fcc7ce-3ba6-f9c2-d222-51345584b08e",
						"35ad7436-679c-b293-0f1f-a67976401264",
						"e39f3a1b-fab1-002e-7f5c-dc40fa63570c",
						"756564a3-a6b7-4b20-74d2-44d72711a6af"
					],
					"owner": "2799045",
					"updatedAt": "2017-10-17T06:18:34.000Z",
					"write": true
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:31.000Z",
					"description": "",
					"folder": null,
					"folders_order": [],
					"id": "01cb1f29-157e-ea02-4f48-d692b00cad9f",
					"lastRevision": 2398892442,
					"lastUpdatedBy": "2799045",
					"name": "Notifications",
					"order": [
						"9d8157c1-c318-f438-6f1a-61019d623a19"
					],
					"owner": "2799045",
					"updatedAt": "2017-10-17T06:18:34.000Z",
					"write": true
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:31.000Z",
					"description": "",
					"folder": null,
					"folders_order": [],
					"id": "ebbe779d-eaad-d387-fc6a-b80b20336958",
					"lastRevision": 2398892443,
					"lastUpdatedBy": "2799045",
					"name": "Parkings",
					"order": [
						"2b96ebbc-7cdd-aa54-9a41-41ef6557e62c",
						"6157f0e6-bcfa-9a5f-1db3-f33af7ce52a9",
						"92ff2447-9d15-fb93-052c-1da9193eb6ec",
						"f2ea62f6-b22a-0fdd-54b5-3f373fb28dbb",
						"c53f160e-2559-3b65-eeb2-99b1b99c2bec",
						"6a3a30cf-13a2-3df3-eeac-ea0d68afce5a",
						"f25a9ac3-8f24-337e-f1de-8794059df0b0",
						"1d05053e-7a44-482f-84e3-27379444921c"
					],
					"owner": "2799045",
					"updatedAt": "2017-10-17T06:18:34.000Z",
					"write": true
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:31.000Z",
					"description": "",
					"folder": null,
					"folders_order": [],
					"id": "61651130-0271-89ec-1f73-854cd78a8ccc",
					"lastRevision": 2398892445,
					"lastUpdatedBy": "2799045",
					"name": "Payouts",
					"order": [
						"faab2535-0509-831e-26a0-0d3ba514ce01"
					],
					"owner": "2799045",
					"updatedAt": "2017-10-17T06:18:34.000Z",
					"write": true
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:31.000Z",
					"description": "",
					"folder": null,
					"folders_order": [],
					"id": "2be007c1-c726-6e20-b66e-0dfa1e9bee75",
					"lastRevision": 2398892446,
					"lastUpdatedBy": "2799045",
					"name": "Settings",
					"order": [
						"091ca410-dde3-c1b8-0217-cca26b90ce74",
						"e428ae73-260f-22f5-2014-b5c01f821267",
						"0375593c-9e16-615a-baca-031e3f62996c"
					],
					"owner": "2799045",
					"updatedAt": "2017-10-17T06:18:34.000Z",
					"write": true
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:31.000Z",
					"description": "",
					"folder": null,
					"folders_order": [],
					"id": "d5d674d1-c7fa-6791-163f-b343f5d02927",
					"lastRevision": 2398892447,
					"lastUpdatedBy": "2799045",
					"name": "Support",
					"order": [
						"ccff200f-846d-37ca-5bcf-71c1a9b8c015",
						"195f6d8f-9291-01dd-abee-a9a853351931"
					],
					"owner": "2799045",
					"updatedAt": "2017-10-17T06:18:34.000Z",
					"write": true
				}
			],
			"folders_order": [
				"72f185fb-64db-a55f-b216-a3b3ecd56f3e",
				"acb31d00-f048-d7c2-61e4-8c1ac5a9bfad",
				"ebbe779d-eaad-d387-fc6a-b80b20336958",
				"61651130-0271-89ec-1f73-854cd78a8ccc",
				"01cb1f29-157e-ea02-4f48-d692b00cad9f",
				"d5d674d1-c7fa-6791-163f-b343f5d02927",
				"2be007c1-c726-6e20-b66e-0dfa1e9bee75"
			],
			"timestamp": 0,
			"synced": true,
			"remote_id": "0",
			"owner": "2799045",
			"sharedWithTeam": false,
			"subscribed": false,
			"remoteLink": "",
			"remoteLinkUpdatedAt": null,
			"public": false,
			"createdAt": 1509356284464,
			"updatedAt": 1509356284464,
			"write": true,
			"published": false,
			"favorite": false,
			"permissions": {},
			"syncedPermissions": {},
			"requests": [
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:32.000Z",
					"currentHelper": "normal",
					"data": [],
					"dataMode": "params",
					"description": "Generated from a curl request: \ncurl 'http://192.168.0.111:3031/user/aaa/sign-out' -X POST -H 'Origin: http://192.168.0.111:3040' -H 'Accept-Encoding: gzip, deflate' -H 'Accept-Language: en-US,en;q=0.8,ru;q=0.6' -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36' -H 'Accept: application/json, text/plain, */*' -H 'access-token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1c2VySWQiOjIsImFkZHJlc3MiOiJYRDR3a21zaDZWQjJKMTJ6clJaUzVTR1lqUWRXZlZNdkF6IiwiaXAiOiIxOTIuMTY4LjAuMjYiLCJ1c2VyQWdlbnQiOiJNb3ppbGxhXC81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXRcLzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZVwvNjEuMC4zMTYzLjEwMCBTYWZhcmlcLzUzNy4zNiIsInNlc3Npb25UaW1lIjozNjAwLCJkYXRlQ3JlYXRlZCI6MTUwNzIwNDg2MiwiZGF0ZUNsb3NlZCI6MTUwNzIwODU0Nn0.NAdTBdUJKMJ-j0HUJOoRUn5rty9XsgXgEyAAfBYYMuil8mr0-Tmr7CnXbxX5sxsQUZzjridUykUQsXqhiBvFyakAz_5G890NWK8xnYXo9MgZh1b1GIXnKhq3PRXh37Ho3FXTL1BOCWW9JImZQlq5yONqjuwzrSigs7mT8U3mRGS4BFaMjwGPp67VHA9dzBHN7NtkjjVFc7__hwmLJAXv75EuzOd0fFZ2AH9SZFqRwyXynnX0IBM8Q1Yks48v5y-_RsxPosKw-GD6L5L_6eBB7Oa3GxGDfnkQo8SwXnt9H-XeEvxFnoNr5R-f6te7-ro4RQbaI3VDTf_liqCADDpFQXVF5XZNaxjNWycLsOvm0c6Iu3At6yWg24MU7sWwxsHBsG6o42dgcpKW3mBDZHOkblQ0twc_dg5V8ib55C2I6-613Y4iYNwqz4Nds9A88_iYObdT9TCmvMQCJ-zNnce_aPlrarJW2v5KB4Ui20SWUSWCg3yrrFzSsAvWQuAf07_9VhyBEq5ExaxHuh62On8RrHkJQFxLoaBpkughDxkOGQ_VBy5xl_SYGc0siin6B2OpAx-uSOi4bCqReGuUDYuYSHL6QJ-Tq4EMnW5xDMaZjRnUV7CRSd1x-maeVT4C49bUrx0LxQBVFWpRRE8Q2TZX4xwm9i26lVYErSrWWtnb5w' -H 'Userid: 2' -H 'Referer: http://192.168.0.111:3040/office/parking' -H 'Connection: keep-alive' -H 'token-type: Bearer JWT' -H 'Content-Length: 0' -H 'DNT: 1' --compressed",
					"descriptionFormat": null,
					"folder": "2be007c1-c726-6e20-b66e-0dfa1e9bee75",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Access-token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Token-Type: {{h.tokenType}}\nAccess-token: {{h.token}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "0375593c-9e16-615a-baca-031e3f62996c",
					"lastRevision": 2398892266,
					"lastUpdatedBy": "2799045",
					"method": "POST",
					"name": "Sign-out",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": null,
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar success = JSON.parse(responseBody);\ntests[\"Response body has success: true\"] = success.success === true;",
					"updatedAt": "2017-10-17T06:18:32.000Z",
					"url": "{{url}}/user/aaa/sign-out",
					"write": true
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:32.000Z",
					"currentHelper": "normal",
					"data": "{\n  \"email\": \"testmnx@p33.org\"\n}",
					"dataMode": "raw",
					"description": "",
					"descriptionFormat": null,
					"folder": "2be007c1-c726-6e20-b66e-0dfa1e9bee75",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": "{}",
					"id": "091ca410-dde3-c1b8-0217-cca26b90ce74",
					"lastRevision": 2398892263,
					"lastUpdatedBy": "2799045",
					"method": "POST",
					"name": "Subscribe",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"tests": "// email = JSON.parse(responseBody)\n//tests[\"Status code is 422 - Email \"+email.email+\" has already been taken.\"] = responseCode.code === 422;\n\n\n\ntests[\"Status code is 201\"] = responseCode.code === 201;",
					"timestamp": null,
					"updatedAt": "2017-10-17T06:18:32.000Z",
					"url": "{{url}}/subscriber",
					"write": true
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:32.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"descriptionFormat": null,
					"folder": "d5d674d1-c7fa-6791-163f-b343f5d02927",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "{{app/json}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: {{app/json}}\n",
					"helperAttributes": {},
					"id": "195f6d8f-9291-01dd-abee-a9a853351931",
					"lastRevision": 2398892269,
					"lastUpdatedBy": "2799045",
					"method": "POST",
					"name": "Create message",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
					"updatedAt": "2017-10-17T06:18:32.000Z",
					"url": "{{url}}/chat/message",
					"write": true
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:32.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"descriptionFormat": null,
					"folder": "ebbe779d-eaad-d387-fc6a-b80b20336958",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "1d05053e-7a44-482f-84e3-27379444921c",
					"lastRevision": 2398892259,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Parking balance",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"tests": null,
					"updatedAt": "2017-10-17T06:18:32.000Z",
					"url": "{{url}}/finance/parking/balance",
					"write": true
				},
				{
					"id": "2b96ebbc-7cdd-aa54-9a41-41ef6557e62c",
					"owner": "2799045",
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"headerData": [
						{
							"key": "Access-Token",
							"value": "{{h.token}}",
							"enabled": true,
							"description": ""
						},
						{
							"key": "Token-Type",
							"value": "{{h.tokenType}}",
							"enabled": true,
							"description": ""
						},
						{
							"key": "Userid",
							"value": "{{h.userid}}",
							"enabled": true,
							"description": ""
						},
						{
							"key": "Content-Type",
							"value": "application/json",
							"enabled": true,
							"description": ""
						}
					],
					"url": "{{url}}/finance/parking",
					"folder": "ebbe779d-eaad-d387-fc6a-b80b20336958",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [
						"{\n  \"typeId\":2,\n  \"amount\":100\n}"
					],
					"dataMode": "raw",
					"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1509372503180,
					"name": "Create parking",
					"description": "",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"lastUpdatedBy": "2799045",
					"lastRevision": 2486086692,
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2017-10-30T09:38:11.000Z",
					"updatedAt": "2017-10-30T14:09:10.000Z"
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:32.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"descriptionFormat": null,
					"folder": "acb31d00-f048-d7c2-61e4-8c1ac5a9bfad",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "35ad7436-679c-b293-0f1f-a67976401264",
					"lastRevision": 2398892240,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Parking balance",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
					"updatedAt": "2017-10-17T06:18:32.000Z",
					"url": "{{url}}/finance/parking/balance",
					"write": true
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:32.000Z",
					"currentHelper": "normal",
					"data": "{\n  \"address\":\"XXUT5tyCd8vTk9Q5wKoQrD6RDCenzNXX3U\",\n  \"password\":\"123456\",\n  \"repeatPassword\":\"123456\",\n  \"word\":\"minexbank\",\n  \"sign\":\"H/zBYPsvTwagtj61eFOWDcEdwm1Te7xsTWa8ecd9gcgVPimq8S4hMqntXOKOvRhIUw7MNjc06VRBRz+0yeo6h4g=\"\n}",
					"dataMode": "raw",
					"description": "",
					"descriptionFormat": null,
					"folder": "72f185fb-64db-a55f-b216-a3b3ecd56f3e",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Content-Type: application/json\n//Access-Token: {{h.token}}\n//Token-Type: {{h.tokenType}}\n//Userid: {{h.userid}}\n",
					"helperAttributes": "{}",
					"id": "5772fd5c-a39c-0c57-9db1-764d5c0caa16",
					"lastRevision": 2398892236,
					"lastUpdatedBy": "2799045",
					"method": "POST",
					"name": "Sign-up",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"tests": null,
					"timestamp": null,
					"updatedAt": "2017-10-17T06:18:32.000Z",
					"url": "{{url}}/user/aaa/register",
					"write": true
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:32.000Z",
					"currentHelper": "normal",
					"data": "{\n  \"id\":2\n}  ",
					"dataMode": "raw",
					"description": "",
					"descriptionFormat": null,
					"folder": "ebbe779d-eaad-d387-fc6a-b80b20336958",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": "{}",
					"id": "6157f0e6-bcfa-9a5f-1db3-f33af7ce52a9",
					"lastRevision": 2398892247,
					"lastUpdatedBy": "2799045",
					"method": "POST",
					"name": "Cancel parking",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
					"timestamp": null,
					"updatedAt": "2017-10-17T06:18:32.000Z",
					"url": "{{url}}/finance/parking/cancel",
					"write": true
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:32.000Z",
					"currentHelper": "normal",
					"data": "{\n  \"oldPassword\":\"12345\",\n  \"password\":\"123456\",\n  \"repeatPassword\":\"123456\"\n}",
					"dataMode": "raw",
					"description": "",
					"descriptionFormat": null,
					"folder": "72f185fb-64db-a55f-b216-a3b3ecd56f3e",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Content-Type: application/json\nAccess-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": "{}",
					"id": "62b3dc12-e8cd-e201-a80b-304b1e6acc3b",
					"lastRevision": 2398892238,
					"lastUpdatedBy": "2799045",
					"method": "POST",
					"name": "Change-password",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"tests": null,
					"timestamp": null,
					"updatedAt": "2017-10-17T06:18:32.000Z",
					"url": "{{url}}/user/aaa/change-password",
					"write": true
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:32.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"descriptionFormat": null,
					"folder": "ebbe779d-eaad-d387-fc6a-b80b20336958",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "6a3a30cf-13a2-3df3-eeac-ea0d68afce5a",
					"lastRevision": 2398892256,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Parking canceled",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
					"updatedAt": "2017-10-17T06:18:32.000Z",
					"url": "{{url}}/finance/parking/status/canceled",
					"write": true
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"currentHelper": "normal",
					"data": "{\n  \"address\":\"{{wallet}}\",\n  \"password\":\"{{pass}}\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "72f185fb-64db-a55f-b216-a3b3ecd56f3e",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Token",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Content-Type: application/json\n//Access-Token: {{h.token}}\n//Token: {{h.tokenType}}\n//Userid: {{h.userid}}\n",
					"helperAttributes": "{}",
					"id": "73dc00b9-6bb0-0895-4083-e4789d0464fe",
					"method": "POST",
					"name": "Sign-in",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": "",
					"queryParams": [],
					"tests": "var tokenType = postman.getResponseHeader(\"Token-Type\"); \n    postman.setEnvironmentVariable(\"h.tokenType\", tokenType);\nvar token = postman.getResponseHeader(\"Access-Token\");\n    postman.setEnvironmentVariable(\"h.token\", token); \nvar userid = JSON.parse(responseBody);\n    postman.setEnvironmentVariable(\"h.userid\", userid.data.id);\n\n\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n    \n    postman.setNextRequest(\"Completed transaction\");",
					"time": 1508332974052,
					"timestamp": null,
					"url": "{{url}}/user/aaa/sign-in"
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "acb31d00-f048-d7c2-61e4-8c1ac5a9bfad",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "{{app/json}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: {{app/json}}\n",
					"helperAttributes": {},
					"id": "756564a3-a6b7-4b20-74d2-44d72711a6af",
					"method": "GET",
					"name": "Parking type",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\npm.test(\"Response time is less than 500ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(500);\n});\n\n\n\nvar body = JSON.parse(responseBody).id;\ntests[\"Valid response structure\"] = /^[a-z:a-z]+$/.test(body.id);\n\nconsole.log(responseBody);\n\n\n\n\n// pm.test(\"Your test name\", function () {\n//     var jsonData = pm.response.json();\n//     pm.expect(jsonData.value).to.eql(100);\n// });",
					"time": 1508319250350,
					"url": "{{url}}/finance/parking/type"
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:32.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"descriptionFormat": null,
					"folder": "ebbe779d-eaad-d387-fc6a-b80b20336958",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "{{app/json}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: {{app/json}}\n",
					"helperAttributes": {},
					"id": "92ff2447-9d15-fb93-052c-1da9193eb6ec",
					"lastRevision": 2398892249,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Parking  count",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
					"updatedAt": "2017-10-17T06:18:32.000Z",
					"url": "{{url}}/finance/parking/total-count",
					"write": true
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:32.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"descriptionFormat": null,
					"folder": "acb31d00-f048-d7c2-61e4-8c1ac5a9bfad",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "98fcc7ce-3ba6-f9c2-d222-51345584b08e",
					"lastRevision": 2398892239,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Completed transaction",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
					"updatedAt": "2017-10-17T06:18:32.000Z",
					"url": "{{url}}/finance/transaction/status/completed",
					"write": true
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:32.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"descriptionFormat": null,
					"folder": "01cb1f29-157e-ea02-4f48-d692b00cad9f",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "9d8157c1-c318-f438-6f1a-61019d623a19",
					"lastRevision": 2398892245,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "User notification X",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
					"updatedAt": "2017-10-17T06:18:32.000Z",
					"url": "{{url}}/notification/user",
					"write": true
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:32.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"descriptionFormat": null,
					"folder": "ebbe779d-eaad-d387-fc6a-b80b20336958",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "c53f160e-2559-3b65-eeb2-99b1b99c2bec",
					"isLastRequest": true,
					"lastRevision": 2398892253,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Parking completed",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
					"updatedAt": "2017-10-17T06:18:32.000Z",
					"url": "{{url}}/finance/parking/status/completed",
					"write": true
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:32.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"descriptionFormat": null,
					"folder": "d5d674d1-c7fa-6791-163f-b343f5d02927",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "ccff200f-846d-37ca-5bcf-71c1a9b8c015",
					"lastRevision": 2398892267,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Chat",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
					"updatedAt": "2017-10-17T06:18:32.000Z",
					"url": "{{url}}/chat",
					"write": true
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "acb31d00-f048-d7c2-61e4-8c1ac5a9bfad",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "e39f3a1b-fab1-002e-7f5c-dc40fa63570c",
					"method": "GET",
					"name": "User balance",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": "var getWalletBalanceURL = pm.variables.get(\"minexexplorer_prod_url\") + \"address/\" + pm.variables.get(\"wallet\") + \"/get-balance\";\npm.sendRequest(getWalletBalanceURL, function (err, response) {\n    console.log(response.json());\n});",
					"queryParams": [],
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar balance_bank = JSON.parse(responseBody);\ntests[\"Balance in bank is equal to balance in explorer\"] = balance_bank.balance === pm.environment.get(\"wallet_balance_from_explorer\");",
					"time": 1508310814739,
					"url": "{{url}}/finance/balance/user"
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:32.000Z",
					"currentHelper": "normal",
					"data": "{\r\n  \"email\": \"testmnx@p33.org\"\r\n}",
					"dataMode": "raw",
					"description": "",
					"descriptionFormat": null,
					"folder": "2be007c1-c726-6e20-b66e-0dfa1e9bee75",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": "{}",
					"id": "e428ae73-260f-22f5-2014-b5c01f821267",
					"lastRevision": 2398892265,
					"lastUpdatedBy": "2799045",
					"method": "DELETE",
					"name": "Unsubscribe",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Response body success TRUE\"] = jsonData.success === true;",
					"timestamp": null,
					"updatedAt": "2017-10-17T06:18:32.000Z",
					"url": "{{url}}/subscriber",
					"write": true
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:32.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"descriptionFormat": null,
					"folder": "ebbe779d-eaad-d387-fc6a-b80b20336958",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "f25a9ac3-8f24-337e-f1de-8794059df0b0",
					"lastRevision": 2398892257,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Parking status all",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
					"updatedAt": "2017-10-17T06:18:32.000Z",
					"url": "{{url}}/finance/parking/status",
					"write": true
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:32.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"descriptionFormat": null,
					"folder": "ebbe779d-eaad-d387-fc6a-b80b20336958",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "f2ea62f6-b22a-0fdd-54b5-3f373fb28dbb",
					"lastRevision": 2398892251,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Parking active/pending",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
					"updatedAt": "2017-10-17T06:18:32.000Z",
					"url": "{{url}}/finance/parking/status/active,pending",
					"write": true
				},
				{
					"collection": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collectionId": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"collection_id": "8e729b0b-c451-d8b7-c951-cb039c00ad74",
					"createdAt": "2017-10-17T06:18:32.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"descriptionFormat": null,
					"folder": "61651130-0271-89ec-1f73-854cd78a8ccc",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "faab2535-0509-831e-26a0-0d3ba514ce01",
					"lastRevision": 2398892262,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Transaction completed",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
					"updatedAt": "2017-10-17T06:18:32.000Z",
					"url": "{{url}}/finance/transaction/status/completed",
					"write": true
				}
			]
		},
		{
			"id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
			"name": "Postman Echo",
			"description": "Postman Echo is service you can use to test your REST clients and make sample API calls. It provides endpoints for `GET`, `POST`, `PUT`, various auth mechanisms and other utility endpoints.\n\nThe documentation for the endpoints as well as example responses can be found at [https://postman-echo.com](https://postman-echo.com/?source=echo-collection-app-onboarding)",
			"order": [],
			"folders": [
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:38.000Z",
					"description": "",
					"folder": null,
					"folders_order": [],
					"id": "995120cd-e87d-600b-ed9f-ac6cec6d3103",
					"lastRevision": 2243698876,
					"lastUpdatedBy": "2799045",
					"name": "Utilities / Postman Collection",
					"order": [
						"eb67525d-8bef-0863-4a40-7d25f79224e3",
						"95e5e10d-c88d-4f1c-7714-974770b37b2d"
					],
					"owner": "2799045",
					"updatedAt": "2017-09-20T14:12:47.000Z"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:38.000Z",
					"description": "Digest authentication protects an endpoint with a username and password without actually transmitting the password over network.\nOne has to apply a hash function (like MD5, etc) to the username and password before sending them over the network.\n\n> Username: `postman`\n>\n> Password: `password`\n\nUnlike Basic-Auth, authentication happens using two consecutive requests where the first request returns `401 Unauthorised` along with `WWW-Authenticate` header containing information that needs to be used to authenticate subsequent calls.\n\nTo know more about digest authentication, refer to the [Digest Access Authentication](https://en.wikipedia.org/wiki/Digest_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#digest-auth) elaborates how to use the same within the Postman app.",
					"folder": null,
					"folders_order": [],
					"id": "60415aa5-b36e-d46b-3850-ff6a842db725",
					"lastRevision": 2243698869,
					"lastUpdatedBy": "2799045",
					"name": "Auth: Digest",
					"order": [
						"02b30aef-e394-1d43-1ce7-695b386fa784",
						"e247bf59-db98-f965-360c-e0cce9ad1e77"
					],
					"owner": "2799045",
					"updatedAt": "2017-09-20T14:12:47.000Z"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:38.000Z",
					"description": "The cookie related endpoints allow one to get, set and delete simple cookies.\n\nCookies are small snippets of information that is stored in the browser and sent back to the server with every subsequent requests in order to store useful information between requests.\nIf you want to know more about cookies, read the [HTTP Cookie](https://en.wikipedia.org/wiki/HTTP_cookie) article on wikipedia.",
					"folder": null,
					"folders_order": [],
					"id": "1947770b-0773-7e44-4f57-492261de395d",
					"lastRevision": 2243698871,
					"lastUpdatedBy": "2799045",
					"name": "Cookies",
					"order": [
						"c17236fd-d7b1-2b3a-66b4-53fc95e10e84",
						"575c09ef-963d-ad13-c552-08325bb557b1",
						"2e2a3cf0-0e9a-88b8-0a9c-9a36b52747c8"
					],
					"owner": "2799045",
					"updatedAt": "2017-09-20T14:12:47.000Z"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:38.000Z",
					"description": "The following set of endpoints allow one to see the headers being sent as part of a request and to get a custom set of headers as part of response.\n\nHTTP header fields provide required information about the request or response, or about the object sent in the message body. Both request headers and response headers can be controlled using these endpoints.",
					"folder": null,
					"folders_order": [],
					"id": "f7beea4c-f8ef-6ee7-1ed1-201a3f07fc77",
					"lastRevision": 2243698872,
					"lastUpdatedBy": "2799045",
					"name": "Headers",
					"order": [
						"68a81715-ec53-b033-f503-06abd7b1506c",
						"1949b945-c12e-5908-a67c-d9a162df14e1"
					],
					"owner": "2799045",
					"updatedAt": "2017-09-20T14:12:47.000Z"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:38.000Z",
					"description": "A set of `/time/*` mounted requests to perform date-time manipulations, among other operations.\n",
					"folder": null,
					"folders_order": [],
					"id": "e32afeac-00fb-fc22-5228-4e2cf73f64a4",
					"lastRevision": 2243698875,
					"lastUpdatedBy": "2799045",
					"name": "Utilities / Date and Time",
					"order": [
						"874fedb4-b89f-df63-d2b0-86fd19de91cb",
						"214de795-b7de-d21e-27ec-ec3aaefb12d9",
						"bc151657-b5d2-504f-72c1-95ff8d5f57f5",
						"8986a9c6-a6fb-0722-6459-5503dc64567a",
						"413eeadb-6762-f4f9-1ca4-609e809a1629",
						"e6f06c77-caf3-5388-c496-dac7dcf0a015",
						"5b2f6d96-0034-9fc3-43d9-93d277ffde23",
						"98d8719b-2cc5-9cc7-8be2-aadb67d53083",
						"961cb6eb-fc52-48f3-9f06-51da5877edfc",
						"d49ee758-2b0d-364c-c76e-51281084d16e",
						"7c24ce07-d82c-b8fd-d2ca-e8317557a741",
						"2f89ec23-e921-59eb-1b88-e2285cc65173"
					],
					"owner": "2799045",
					"updatedAt": "2017-09-20T14:12:47.000Z"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:38.000Z",
					"description": "",
					"folder": null,
					"folders_order": [],
					"id": "acfa1751-98cb-846f-3eb1-0e292ba8fb19",
					"lastRevision": 2243698873,
					"lastUpdatedBy": "2799045",
					"name": "Utilities",
					"order": [
						"949d5edc-ca01-326d-8a8a-69be4471a74c",
						"c725e5c2-5031-1512-b817-04ae02aaa7b9",
						"eb9c9742-1ea0-048b-db8c-c55122df815c",
						"c12320b5-990f-b1ed-0503-155d87a732e8",
						"91313750-a1cb-f997-0665-f6f365ac63ef",
						"d458d9cc-ac67-7782-1b79-d3bfbf66db1d",
						"59f0f68c-ff6b-21ed-be05-c41bfa4ffbd2"
					],
					"owner": "2799045",
					"updatedAt": "2017-09-20T14:12:47.000Z"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:38.000Z",
					"description": "HTTP has multiple request \"verbs\", such as `GET`, `PUT`, `POST`, `DELETE`,\n`PATCH`, `HEAD`, etc. \n\nAn HTTP Method (verb) defines how a request should be interpreted by a server. \nThe endpoints in this section demonstrate various HTTP Verbs. Postman supports \nall the HTTP Verbs, including some rarely used ones, such as `PROPFIND`, `UNLINK`, \netc.\n\nFor details about HTTP Verbs, refer to [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9)\n",
					"folder": null,
					"folders_order": [],
					"id": "a8328e94-341e-c0e5-66a5-09fd5bd50e6e",
					"lastRevision": 2243698780,
					"lastUpdatedBy": "2799045",
					"name": "Request Methods",
					"order": [
						"0358cc7f-26c8-51fd-44d1-b7d8d0f2187b",
						"0aa4f1d1-5558-5e6b-210c-af2bf442729b",
						"bb9a9c44-7789-6243-9a13-9abeef50315c",
						"1db1309a-396d-0ab0-be83-f24176ce30de",
						"66db641c-4d7f-6edf-687a-3a4dc88b6933",
						"6707516e-9f1a-5aad-c916-dfa85edf7bf1"
					],
					"owner": "2799045",
					"updatedAt": "2017-09-20T14:12:46.000Z"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:38.000Z",
					"description": "",
					"folder": null,
					"folders_order": [],
					"id": "c1a0544f-18e9-be2a-0268-d2e100c8e6bb",
					"lastRevision": 2243698870,
					"lastUpdatedBy": "2799045",
					"name": "Auth: Others",
					"order": [
						"f7d095aa-7a60-ef92-1979-af0dcf227e38",
						"28b9228c-50d9-c666-856d-c373b5979b44",
						"b8f049aa-4833-f711-4fa8-8c79c6ed34c6"
					],
					"owner": "2799045",
					"updatedAt": "2017-09-20T14:12:47.000Z"
				}
			],
			"folders_order": [
				"60415aa5-b36e-d46b-3850-ff6a842db725",
				"c1a0544f-18e9-be2a-0268-d2e100c8e6bb",
				"1947770b-0773-7e44-4f57-492261de395d",
				"f7beea4c-f8ef-6ee7-1ed1-201a3f07fc77",
				"a8328e94-341e-c0e5-66a5-09fd5bd50e6e",
				"acfa1751-98cb-846f-3eb1-0e292ba8fb19",
				"e32afeac-00fb-fc22-5228-4e2cf73f64a4",
				"995120cd-e87d-600b-ed9f-ac6cec6d3103"
			],
			"timestamp": 0,
			"synced": true,
			"remote_id": "0",
			"owner": "2799045",
			"sharedWithTeam": false,
			"subscribed": false,
			"remoteLink": "",
			"remoteLinkUpdatedAt": null,
			"public": false,
			"createdAt": 1509356287824,
			"updatedAt": 1509356287824,
			"write": true,
			"published": false,
			"favorite": false,
			"permissions": {},
			"syncedPermissions": {},
			"requests": [
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": [
						{
							"enabled": true,
							"key": "code",
							"type": "text",
							"value": "xWnkliVQJURqB2x1"
						},
						{
							"enabled": true,
							"key": "grant_type",
							"type": "text",
							"value": "authorization_code"
						},
						{
							"enabled": true,
							"key": "redirect_uri",
							"type": "text",
							"value": "https://www.getpostman.com/oauth2/callback"
						},
						{
							"enabled": true,
							"key": "client_id",
							"type": "text",
							"value": "abc123"
						},
						{
							"enabled": true,
							"key": "client_secret",
							"type": "text",
							"value": "ssh-secret"
						}
					],
					"dataMode": "params",
					"description": "Performing a simple `GET` request to this endpoint returns status code `401 Unauthorized` with `WWW-Authenticate` header containing information to successfully authenticate subsequent requests.\nThe `WWW-Authenticate` header must be processed to extract `realm` and `nonce` values to hash subsequent requests.\n\nWhen this request is executed within Postman, the script attached with this request does the hard work of extracting realm and nonce from the header and set it as [global variables](https://www.getpostman.com/docs/environments#global-variables?source=echo-collection-app-onboarding) named `echo_digest_nonce` and `echo_digest_realm`.\nThese variables are re-used in subsequent request for seamless integration of the two requests.",
					"descriptionFormat": null,
					"folder": "60415aa5-b36e-d46b-3850-ff6a842db725",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "02b30aef-e394-1d43-1ce7-695b386fa784",
					"lastRevision": 2243698167,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "DigestAuth Request",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": "tests[\"response code is 401\"] = responseCode.code === 401;\ntests[\"response has WWW-Authenticate header\"] = (postman.getResponseHeader('WWW-Authenticate'));\n\nvar authenticateHeader = postman.getResponseHeader('WWW-Authenticate'),\n    realmStart = authenticateHeader.indexOf('\"',authenticateHeader.indexOf(\"realm\")) + 1 ,\n    realmEnd = authenticateHeader.indexOf('\"',realmStart),\n    realm = authenticateHeader.slice(realmStart,realmEnd),\n    nonceStart = authenticateHeader.indexOf('\"',authenticateHeader.indexOf(\"nonce\")) + 1,\n    nonceEnd = authenticateHeader.indexOf('\"',nonceStart),\n    nonce = authenticateHeader.slice(nonceStart,nonceEnd);\n    \npostman.setGlobalVariable('echo_digest_realm', realm);\npostman.setGlobalVariable('echo_digest_nonce', nonce);",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/digest-auth"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": [],
					"dataMode": "params",
					"description": "The HTTP `GET` request method is meant to retrieve data from a server. The data\nis identified by a unique URI (Uniform Resource Identifier). \n\nA `GET` request can pass parameters to the server using \"Query String \nParameters\". For example, in the following request,\n\n> http://example.com/hi/there?hand=wave\n\nThe parameter \"hand\" has the value \"wave\".\n\nThis endpoint echoes the HTTP headers, request parameters and the complete\nURI requested.",
					"descriptionFormat": null,
					"folder": "a8328e94-341e-c0e5-66a5-09fd5bd50e6e",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "0358cc7f-26c8-51fd-44d1-b7d8d0f2187b",
					"lastRevision": 2243698188,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "GET Request",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": "var responseJSON;\n\ntry { \n    responseJSON = JSON.parse(responseBody); \n    tests['response is valid JSON'] = true;\n}\ncatch (e) { \n    responseJSON = {}; \n    tests['response is valid JSON'] = false;\n}\n\ntests['response json contains headers'] = _.has(responseJSON, 'headers');\ntests['response json contains args'] = _.has(responseJSON, 'args');\ntests['response json contains url'] = _.has(responseJSON, 'url');\n\ntests['args key contains argument passed as url parameter'] = ('test' in responseJSON.args);\ntests['args passed via request url params has value \"123\"'] = (_.get(responseJSON, 'args.test') === \"123\");",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/get?test=123"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": "Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium. Praesent neque quam, tincidunt nec leo eget, rutrum vehicula magna.\nMaecenas consequat elementum elit, id semper sem tristique et. Integer pulvinar enim quis consectetur interdum volutpat.",
					"dataMode": "raw",
					"description": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested.",
					"descriptionFormat": null,
					"folder": "a8328e94-341e-c0e5-66a5-09fd5bd50e6e",
					"headerData": [],
					"headers": "Content-Type: text/plain\n",
					"helperAttributes": "{}",
					"id": "0aa4f1d1-5558-5e6b-210c-af2bf442729b",
					"lastRevision": 2243698193,
					"lastUpdatedBy": "2799045",
					"method": "POST",
					"name": "POST Raw Text",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": "Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium. Praesent neque quam, tincidunt nec leo eget, rutrum vehicula magna.\nMaecenas consequat elementum elit, id semper sem tristique et. Integer pulvinar enim quis consectetur interdum volutpat.",
					"responses": [],
					"tests": "var responseJSON;\n\ntry { \n    responseJSON = JSON.parse(responseBody); \n    tests['response is valid JSON'] = true;\n}\ncatch (e) { \n    responseJSON = {}; \n    tests['response is valid JSON'] = false;\n}\n\n\ntests['response has post data'] = _.has(responseJSON, 'data');\ntests['response matches the data posted'] = (responseJSON.data && responseJSON.data.length === 256);\n\ntests[\"content-type equals text/plain\"] = responseJSON && responseJSON.headers && (responseJSON.headers[\"content-type\"] === 'text/plain');",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/post"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": [],
					"dataMode": "params",
					"description": "This endpoint causes the server to send custom set of response headers. Providing header values as part of the URL parameters of a `GET` request to this endpoint returns the same as part of response header.\n\nTo send your own set of headers, simply add or replace the the URL parameters with your own set.",
					"descriptionFormat": null,
					"folder": "f7beea4c-f8ef-6ee7-1ed1-201a3f07fc77",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "1949b945-c12e-5908-a67c-d9a162df14e1",
					"lastRevision": 2243698186,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Response Headers",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": null,
					"responses": [
						{
							"cookies": [
								{
									"domain": "echo.getpostman.com",
									"hostOnly": true,
									"httpOnly": true,
									"name": "sails.sid",
									"path": "/",
									"secure": false,
									"session": true,
									"storeId": "0",
									"value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
								}
							],
							"createdAt": "2017-09-20T14:12:45.000Z",
							"headers": [
								{
									"description": "",
									"key": "Access-Control-Allow-Credentials",
									"name": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Headers",
									"name": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Methods",
									"name": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Origin",
									"name": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Encoding",
									"name": "Content-Encoding",
									"value": "gzip"
								},
								{
									"description": "",
									"key": "Content-Length",
									"name": "Content-Length",
									"value": "71"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "text/html; charset=utf-8"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 31 Mar 2016 11:14:18 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.6.2"
								},
								{
									"description": "",
									"key": "Vary",
									"name": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "Sails <sailsjs.org>"
								},
								{
									"description": "",
									"key": "test",
									"name": "test",
									"value": "response_headers"
								}
							],
							"id": "9ee27bcf-39d3-73b2-4739-ede5638574a4",
							"language": "html",
							"lastRevision": 2243698765,
							"lastUpdatedBy": "2799045",
							"mime": "",
							"name": "Response headers",
							"owner": "2799045",
							"previewType": "html",
							"rawDataType": "text",
							"request": "e50f9111-3a52-a325-47f1-fc702bea1fff",
							"requestObject": "{\"url\":\"https://echo.getpostman.com/response-headers?Content-Type=text/html&test=response_headers\",\"headers\":[],\"data\":[],\"method\":\"GET\",\"dataMode\":\"params\"}",
							"responseCode": {
								"code": 200,
								"name": "OK"
							},
							"searchResultScrolledTo": "-1",
							"state": {
								"size": "normal"
							},
							"status": "",
							"text": "{\"Content-Type\":\"text/html\",\"test\":\"response_headers\"}",
							"time": "568",
							"updatedAt": "2017-09-20T14:12:46.000Z",
							"version": null
						}
					],
					"tests": "tests[\"Body contains Content-Type\"] = responseBody.has(\"Content-Type\");\ntests[\"response headers have key sent as part of request\"] = (postman.getResponseHeader('test') == 'response_headers')",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/response-headers?Content-Type=text/html&test=response_headers"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": "Etiam mi lacus, cursus vitae felis et, blandit pellentesque neque. Vestibulum eget nisi a tortor commodo dignissim.\nQuisque ipsum ligula, faucibus a felis a, commodo elementum nisl. Mauris vulputate sapien et tincidunt viverra. Donec vitae velit nec metus.",
					"dataMode": "raw",
					"description": "The HTTP `PUT` request method is similar to HTTP `POST`. It too is meant to \ntransfer data to a server (and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `PUT` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following \nraw HTTP request,\n\n> PUT /hi/there?hand=wave\n>\n> <request-body>\n\n\n",
					"descriptionFormat": null,
					"folder": "a8328e94-341e-c0e5-66a5-09fd5bd50e6e",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "1db1309a-396d-0ab0-be83-f24176ce30de",
					"lastRevision": 2243698192,
					"lastUpdatedBy": "2799045",
					"method": "PUT",
					"name": "PUT Request",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": "Etiam mi lacus, cursus vitae felis et, blandit pellentesque neque. Vestibulum eget nisi a tortor commodo dignissim.\nQuisque ipsum ligula, faucibus a felis a, commodo elementum nisl. Mauris vulputate sapien et tincidunt viverra. Donec vitae velit nec metus.",
					"responses": [],
					"tests": "var responseJSON;\n\ntry { \n    responseJSON = JSON.parse(responseBody); \n    tests['response is valid JSON'] = true;\n}\ncatch (e) { \n    responseJSON = {}; \n    tests['response is valid JSON'] = false;\n}\n\n\ntests['response has PUT data'] = _.has(responseJSON, 'data');\ntests['response matches the data sent in request'] = (responseJSON.data && responseJSON.data.length === 256);",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/put"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "A simple `GET` request to `/time/valid` to determine the validity of the timestamp, (current by default).\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a valid key to indicate the result. The response code is `200`.\n\n```\n{\n  valid: true/false\n}\n```",
					"descriptionFormat": "html",
					"folder": "e32afeac-00fb-fc22-5228-4e2cf73f64a4",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "214de795-b7de-d21e-27ec-ec3aaefb12d9",
					"lastRevision": 2243698217,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Timestamp validity",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"responses": [
						{
							"cookies": [
								{
									"domain": "postman-echo.com",
									"expirationDate": 2147463847,
									"httpOnly": true,
									"name": "sails.sid",
									"path": "/",
									"secure": false,
									"url": "https://postman-echo.com/time/valid?timestamp=2016-10-1a",
									"value": "s%3ATNJaNxi2QCv4RPBb64sIZxQGN1h6IP3g.9sQVAijlsLsh0r7LgffxXa9k2we6UumPEVv%2Bsk4woLI"
								}
							],
							"createdAt": "2017-09-20T14:12:46.000Z",
							"headers": [
								{
									"description": "",
									"key": "Access-Control-Allow-Credentials",
									"name": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Headers",
									"name": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Methods",
									"name": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Origin",
									"name": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Expose-Headers",
									"name": "Access-Control-Expose-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Length",
									"name": "Content-Length",
									"value": "15"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Wed, 11 Jan 2017 10:27:53 GMT"
								},
								{
									"description": "",
									"key": "ETag",
									"name": "ETag",
									"value": "W/\"f-/i9mO/upK91ZtL0BkKFGtw\""
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Vary",
									"name": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"description": "",
									"key": "set-cookie",
									"name": "set-cookie",
									"value": "sails.sid=s%3ATNJaNxi2QCv4RPBb64sIZxQGN1h6IP3g.9sQVAijlsLsh0r7LgffxXa9k2we6UumPEVv%2Bsk4woLI; Path=/; HttpOnly"
								}
							],
							"id": "dc085f0e-e1fd-c5ee-5224-c875ba7efa02",
							"language": "json",
							"lastRevision": 2243698770,
							"lastUpdatedBy": "2799045",
							"mime": "",
							"name": "Invalid Timestamp",
							"owner": "2799045",
							"previewType": "text",
							"rawDataType": null,
							"request": "54dfe6f2-5887-1078-1f3c-3cf36acc648e",
							"requestObject": "{\"url\":\"https://postman-echo.com/time/valid?timestamp=2016-10-10\",\"headers\":[],\"data\":null,\"method\":\"GET\",\"dataMode\":\"params\"}",
							"responseCode": {
								"code": 200,
								"fromServer": true,
								"name": "OK"
							},
							"searchResultScrolledTo": "-1",
							"state": {
								"size": "normal"
							},
							"status": "",
							"text": "{\"valid\":false}",
							"time": "264",
							"updatedAt": "2017-09-20T14:12:46.000Z",
							"version": null
						},
						{
							"cookies": [
								{
									"domain": "postman-echo.com",
									"expirationDate": 2147463847,
									"httpOnly": true,
									"name": "sails.sid",
									"path": "/",
									"secure": false,
									"url": "https://postman-echo.com/time/valid?timestamp=2016-10-10",
									"value": "s%3AdDGZPe1CZw4mAxGVCHr6RfCADCAwquXa.F5MEm5LJad30JHrSwGGoyWLn2OAAGdvUM7kDtzNfdFI"
								}
							],
							"createdAt": "2017-09-20T14:12:46.000Z",
							"headers": [
								{
									"description": "",
									"key": "Access-Control-Allow-Credentials",
									"name": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Headers",
									"name": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Methods",
									"name": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Origin",
									"name": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Expose-Headers",
									"name": "Access-Control-Expose-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Length",
									"name": "Content-Length",
									"value": "14"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Wed, 11 Jan 2017 10:27:33 GMT"
								},
								{
									"description": "",
									"key": "ETag",
									"name": "ETag",
									"value": "W/\"e-OYN7L87J1Ba9oy5mJE2kcA\""
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Vary",
									"name": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"description": "",
									"key": "set-cookie",
									"name": "set-cookie",
									"value": "sails.sid=s%3AdDGZPe1CZw4mAxGVCHr6RfCADCAwquXa.F5MEm5LJad30JHrSwGGoyWLn2OAAGdvUM7kDtzNfdFI; Path=/; HttpOnly"
								}
							],
							"id": "741991b2-1875-1201-cbed-c34eb5316e7f",
							"language": "json",
							"lastRevision": 2243698771,
							"lastUpdatedBy": "2799045",
							"mime": "",
							"name": "Valid Timestamp",
							"owner": "2799045",
							"previewType": "text",
							"rawDataType": null,
							"request": "54dfe6f2-5887-1078-1f3c-3cf36acc648e",
							"requestObject": "{\"url\":\"https://postman-echo.com/time/valid?timestamp=2016-10-10\",\"headers\":[],\"data\":null,\"method\":\"GET\",\"dataMode\":\"params\"}",
							"responseCode": {
								"code": 200,
								"fromServer": true,
								"name": "OK"
							},
							"searchResultScrolledTo": "-1",
							"state": {
								"size": "normal"
							},
							"status": "",
							"text": "{\"valid\":true}",
							"time": "493",
							"updatedAt": "2017-09-20T14:12:46.000Z",
							"version": null
						}
					],
					"tests": "var validity = JSON.parse(responseBody).valid;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Timestamp is valid\"] = validity === true;\n",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/time/valid?timestamp=2016-10-10"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "oAuth1",
					"data": [
						{
							"enabled": true,
							"key": "code",
							"type": "text",
							"value": "xWnkliVQJURqB2x1"
						},
						{
							"enabled": true,
							"key": "grant_type",
							"type": "text",
							"value": "authorization_code"
						},
						{
							"enabled": true,
							"key": "redirect_uri",
							"type": "text",
							"value": "https://www.getpostman.com/oauth2/callback"
						},
						{
							"enabled": true,
							"key": "client_id",
							"type": "text",
							"value": "abc123"
						},
						{
							"enabled": true,
							"key": "client_secret",
							"type": "text",
							"value": "ssh-secret"
						}
					],
					"dataMode": "params",
					"description": "OAuth1.0a is a specification that defines a protocol that can be used by one\nservice to access \"protected\" resources (endpoints) on another service. A\nmajor part of OAuth1.0 is HTTP Request Signing. This endpoint allows you to \ncheck whether the request calculation works properly in the client. \n\nThe endpoint supports the HTTP ``Authorization`` header. In case the signature\nverification fails, the endpoint provides the four debug values,\n\n* ``base_uri``\n* ``normalized_param_string``\n* ``base_string``\n* ``signing_key``\n\nFor more details about these parameters, check the [OAuth1.0a Specification](http://oauth.net/core/1.0a/)\n\nIn order to use this endpoint, you can set the following values:\n\n> Consumer Key: ``RKCGzna7bv9YD57c``\n>\n> Consumer Secret: ``D+EdQ-gs$-%@2Nu7``\n\nIf you are using Postman, also check the \"Add params to header\" and \n\"Auto add parameters\" boxes.",
					"descriptionFormat": null,
					"folder": "c1a0544f-18e9-be2a-0268-d2e100c8e6bb",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{\"id\":\"oAuth1\",\"consumerKey\":\"RKCGzna7bv9YD57c\",\"consumerSecret\":\"D+EdQ-gs$-%@2Nu7\",\"token\":\"\",\"tokenSecret\":\"\",\"signatureMethod\":\"HMAC-SHA1\",\"timestamp\":1472121255,\"nonce\":\"e5VR16\",\"version\":\"1.0\",\"realm\":\"\",\"encodeSignature\":false,\"header\":true,\"includeEmpty\":false,\"saveToRequest\":true}",
					"id": "28b9228c-50d9-c666-856d-c373b5979b44",
					"lastRevision": 2243698171,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "OAuth1.0 Verify Signature",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": null,
					"responses": [
						{
							"cookies": [],
							"createdAt": "2017-09-20T14:12:45.000Z",
							"headers": [
								{
									"description": "",
									"key": "Access-Control-Allow-Credentials",
									"name": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Headers",
									"name": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Methods",
									"name": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Origin",
									"name": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Expose-Headers",
									"name": "Access-Control-Expose-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Encoding",
									"name": "Content-Encoding",
									"value": "gzip"
								},
								{
									"description": "",
									"key": "Content-Length",
									"name": "Content-Length",
									"value": "95"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 25 Aug 2016 10:34:23 GMT"
								},
								{
									"description": "",
									"key": "ETag",
									"name": "ETag",
									"value": "W/\"4e-Cq3UhvpVSyl6R6204lPVIA\""
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.8.1"
								},
								{
									"description": "",
									"key": "Vary",
									"name": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"id": "650deebc-9159-c186-b59f-99e99d85bac0",
							"language": "javascript",
							"lastRevision": 2243698754,
							"lastUpdatedBy": "2799045",
							"mime": "",
							"name": "200",
							"owner": "2799045",
							"previewType": "html",
							"rawDataType": "text",
							"request": "2f79ab5b-9029-56c2-7b05-52047790d670",
							"requestObject": "{\"url\":\"https://echo.getpostman.com/oauth1\",\"headers\":[{\"key\":\"Authorization\",\"name\":\"Authorization\",\"value\":\"OAuth oauth_consumer_key=\\\"RKCGzna7bv9YD57c\\\",oauth_signature_method=\\\"HMAC-SHA1\\\",oauth_timestamp=\\\"1472121261\\\",oauth_nonce=\\\"ki0RQW\\\",oauth_version=\\\"1.0\\\",oauth_signature=\\\"s0rK92Myxx7ceUBVzlMaxiiXU00%3D\\\"\"}],\"data\":[{\"key\":\"code\",\"value\":\"xWnkliVQJURqB2x1\",\"type\":\"text\",\"enabled\":true},{\"key\":\"grant_type\",\"value\":\"authorization_code\",\"type\":\"text\",\"enabled\":true},{\"key\":\"redirect_uri\",\"value\":\"https://www.getpostman.com/oauth2/callback\",\"type\":\"text\",\"enabled\":true},{\"key\":\"client_id\",\"value\":\"abc123\",\"type\":\"text\",\"enabled\":true},{\"key\":\"client_secret\",\"value\":\"ssh-secret\",\"type\":\"text\",\"enabled\":true}],\"method\":\"GET\",\"dataMode\":\"params\"}",
							"responseCode": {
								"code": 200,
								"name": "OK"
							},
							"searchResultScrolledTo": "-1",
							"state": {
								"size": "normal"
							},
							"status": "",
							"text": "{\"status\":\"pass\",\"message\":\"OAuth-1.0a signature verification was successful\"}",
							"time": "2057",
							"updatedAt": "2017-09-20T14:12:46.000Z",
							"version": null
						},
						{
							"cookies": [],
							"createdAt": "2017-09-20T14:12:45.000Z",
							"headers": [
								{
									"description": "",
									"key": "Access-Control-Allow-Credentials",
									"name": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Headers",
									"name": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Methods",
									"name": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Origin",
									"name": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Expose-Headers",
									"name": "Access-Control-Expose-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Length",
									"name": "Content-Length",
									"value": "536"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 25 Aug 2016 10:34:55 GMT"
								},
								{
									"description": "",
									"key": "ETag",
									"name": "ETag",
									"value": "W/\"218-SGnurnTsu5qV5cCYWxsJlg\""
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.8.1"
								},
								{
									"description": "",
									"key": "Vary",
									"name": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"id": "234f46de-f922-c377-8ce0-c46c8f24ccc4",
							"language": "javascript",
							"lastRevision": 2243698755,
							"lastUpdatedBy": "2799045",
							"mime": "",
							"name": "401",
							"owner": "2799045",
							"previewType": "html",
							"rawDataType": "text",
							"request": "2f79ab5b-9029-56c2-7b05-52047790d670",
							"requestObject": "{\"url\":\"https://echo.getpostman.com/oauth1\",\"headers\":[{\"key\":\"Authorization\",\"type\":\"text\",\"name\":\"Authorization\",\"value\":\"OAuth oauth_consumer_key=\\\"RKCGzna7bv9YD57c_wrong\\\",oauth_signature_method=\\\"HMAC-SHA1\\\",oauth_timestamp=\\\"1472121295\\\",oauth_nonce=\\\"8LTsU2\\\",oauth_version=\\\"1.0\\\",oauth_signature=\\\"tSUexpY%2B7EhSY7cFXiFN5EMx2zw%3D\\\"\"}],\"data\":[{\"key\":\"code\",\"value\":\"xWnkliVQJURqB2x1\",\"type\":\"text\",\"enabled\":true},{\"key\":\"grant_type\",\"value\":\"authorization_code\",\"type\":\"text\",\"enabled\":true},{\"key\":\"redirect_uri\",\"value\":\"https://www.getpostman.com/oauth2/callback\",\"type\":\"text\",\"enabled\":true},{\"key\":\"client_id\",\"value\":\"abc123\",\"type\":\"text\",\"enabled\":true},{\"key\":\"client_secret\",\"value\":\"ssh-secret\",\"type\":\"text\",\"enabled\":true}],\"method\":\"GET\",\"dataMode\":\"params\"}",
							"responseCode": {
								"code": 401,
								"name": "Unauthorized"
							},
							"searchResultScrolledTo": "-1",
							"state": {
								"size": "normal"
							},
							"status": "",
							"text": "{\"status\":\"fail\",\"message\":\"HMAC-SHA1 verification failed\",\"base_uri\":\"https://echo.getpostman.com/oauth1\",\"normalized_param_string\":\"oauth_consumer_key=RKCGzna7bv9YD57c_wrong&oauth_nonce=8LTsU2&oauth_signature_method=HMAC-SHA1&oauth_timestamp=1472121295&oauth_version=1.0\",\"base_string\":\"GET&https%3A%2F%2Fecho.getpostman.com%2Foauth1&oauth_consumer_key%3DRKCGzna7bv9YD57c_wrong%26oauth_nonce%3D8LTsU2%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1472121295%26oauth_version%3D1.0\",\"signing_key\":\"D%2BEdQ-gs%24-%25%402Nu7&\"}",
							"time": "322",
							"updatedAt": "2017-09-20T14:12:46.000Z",
							"version": null
						}
					],
					"tests": "tests[\"response code is 200\"] = responseCode.code === 200;\nvar body = JSON.parse(responseBody);\ntests[\"Body contains status pass\"] = body[\"status\"] == \"pass\"",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/oauth1"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": [],
					"dataMode": "params",
					"description": "One or more cookies that has been set for this domain can be deleted by providing the cookie names as part of the URL parameter. The response of this request is a JSON containing the list of currently set cookies.",
					"descriptionFormat": null,
					"folder": "1947770b-0773-7e44-4f57-492261de395d",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "2e2a3cf0-0e9a-88b8-0a9c-9a36b52747c8",
					"lastRevision": 2243698182,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Delete Cookies",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": null,
					"responses": [
						{
							"cookies": [],
							"createdAt": "2017-09-20T14:12:45.000Z",
							"headers": [
								{
									"description": "",
									"key": "Access-Control-Allow-Credentials",
									"name": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Headers",
									"name": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Methods",
									"name": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Origin",
									"name": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Encoding",
									"name": "Content-Encoding",
									"value": "gzip"
								},
								{
									"description": "",
									"key": "Content-Length",
									"name": "Content-Length",
									"value": "46"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 29 Oct 2015 06:16:00 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.6.2"
								},
								{
									"description": "",
									"key": "Vary",
									"name": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "Sails <sailsjs.org>"
								}
							],
							"id": "ac96e324-f64f-f11b-ea27-8040132640e7",
							"language": "javascript",
							"lastRevision": 2243698763,
							"lastUpdatedBy": "2799045",
							"mime": "",
							"name": "Cookies Response",
							"owner": "2799045",
							"previewType": "html",
							"rawDataType": "text",
							"request": "a4f24593-448b-88de-963f-eeb952d38a57",
							"requestObject": "\"4ac1e980-6990-fc1d-5f80-4e5cedce9812\"",
							"responseCode": {
								"code": 200,
								"name": "OK"
							},
							"searchResultScrolledTo": "-1",
							"state": {
								"size": "normal"
							},
							"status": "",
							"text": "{\"cookies\":{\"foo2\":\"bar\"}}",
							"time": "1417",
							"updatedAt": "2017-09-20T14:12:46.000Z",
							"version": null
						}
					],
					"tests": "// handle case where it is 304\n\nif (responseCode.code === 200) {\n    tests[\"Status code is 302 or 200\"] = true;\n    tests[\"Body contains cookies\"] = responseBody.has(\"cookies\");\n    \n    var body = JSON.parse(responseBody);\n    tests[\"Body contains cookie foo1\"] = 'foo1' in body.cookies;\n    tests[\"Body contains cookie foo2\"] = 'foo2' in body.cookies;\n\n}\nelse if (responseCode.code === 302) {\n    tests[\"Status code is 302 or 200\"] = true;\n    tests[\"Body has redirection message\"] = responseBody.has(\"Found. Redirecting to /cookies\")\n}\nelse {\n    tests[\"Status code is 302 or 200\"] = false;\n}\n\ntests[\"foo1 cookie is set\"] = _.get(postman.getResponseCookie('foo1'), 'value') === undefined;\n\ntests[\"foo2 cookie is set\"] = _.get(postman.getResponseCookie('foo2'), 'value') === undefined;",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/cookies/delete?foo1&foo2"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "A simple `GET` request to `/time/leap` to check if the provided/current timestamp belongs to a leap year.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `leap` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  leap: true/false\n}\n```",
					"descriptionFormat": null,
					"folder": "e32afeac-00fb-fc22-5228-4e2cf73f64a4",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "2f89ec23-e921-59eb-1b88-e2285cc65173",
					"lastRevision": 2243698208,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Leap year check",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Comparsion was correct\"] = JSON.parse(responseBody).leap === true;",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/time/leap?timestamp=2016-10-10"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "A simple `GET` request to `/time/add` to add units of time to the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `sum` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  sum: \"sum of (provided / current) and provided timestamps\"\n}\n```",
					"descriptionFormat": null,
					"folder": "e32afeac-00fb-fc22-5228-4e2cf73f64a4",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "413eeadb-6762-f4f9-1ca4-609e809a1629",
					"lastRevision": 2243698213,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Time addition",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": "var sum = JSON.parse(responseBody).sum;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/time/add?timestamp=2016-10-10&years=100"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": [],
					"dataMode": "params",
					"description": "Use this endpoint to get a list of all cookies that are stored with respect to this domain. Whatever key-value pairs that has been previously set by calling the \"Set Cookies\" endpoint, will be returned as response JSON.",
					"descriptionFormat": null,
					"folder": "1947770b-0773-7e44-4f57-492261de395d",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "575c09ef-963d-ad13-c552-08325bb557b1",
					"lastRevision": 2243698179,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Get Cookies",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": null,
					"responses": [
						{
							"cookies": [],
							"createdAt": "2017-09-20T14:12:45.000Z",
							"headers": [
								{
									"description": "",
									"key": "Access-Control-Allow-Credentials",
									"name": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Headers",
									"name": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Methods",
									"name": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Origin",
									"name": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Encoding",
									"name": "Content-Encoding",
									"value": "gzip"
								},
								{
									"description": "",
									"key": "Content-Length",
									"name": "Content-Length",
									"value": "46"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 29 Oct 2015 06:16:29 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.6.2"
								},
								{
									"description": "",
									"key": "Vary",
									"name": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "Sails <sailsjs.org>"
								}
							],
							"id": "cacd553a-66ed-2785-6f3f-65ac12b5b8e3",
							"language": "javascript",
							"lastRevision": 2243698760,
							"lastUpdatedBy": "2799045",
							"mime": "",
							"name": "Cookies",
							"owner": "2799045",
							"previewType": "html",
							"rawDataType": "text",
							"request": "8dc08eee-a543-7c1c-297f-b0b7040c35c6",
							"requestObject": "\"4118ca21-f216-410f-510c-2d0e465022c5\"",
							"responseCode": {
								"code": 200,
								"name": "OK"
							},
							"searchResultScrolledTo": "-1",
							"state": {
								"size": "normal"
							},
							"status": "",
							"text": "{\"cookies\":{\"foo2\":\"bar\"}}",
							"time": "462",
							"updatedAt": "2017-09-20T14:12:46.000Z",
							"version": null
						}
					],
					"tests": "var responseJSON;\ntry {\n    tests[\"Body contains cookies\"] = responseBody.has(\"cookies\");\n    responseJSON = JSON.parse(responseBody);\n    tests[\"Cookies object is empty\"] = (Object.keys(responseJSON.cookies).length > 0)\n}\ncatch (e) { }\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/cookies"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "A simple `GET` request to return the IP address of the source request in the following `JSON` format:\n\n```json\n{\n  ip: \"request-ip-address\"\n}\n```",
					"descriptionFormat": "html",
					"folder": "acfa1751-98cb-846f-3eb1-0e292ba8fb19",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "59f0f68c-ff6b-21ed-be05-c41bfa4ffbd2",
					"lastRevision": 2243698201,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "IP address in JSON format",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": "var body = JSON.parse(responseBody);\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Valid response structure\"] = /^[a-fA-F:\\.0-9]+$/.test(body.ip);",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/ip"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "A simple `GET` request to `/time/start` to return a relative timstamp in the past from the specified / current timestamp (as provided in the `unit` query parameter).\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `start` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  start: \"A timestamp from the past, depending on the `unit` specified\"\n}\n```",
					"descriptionFormat": null,
					"folder": "e32afeac-00fb-fc22-5228-4e2cf73f64a4",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "5b2f6d96-0034-9fc3-43d9-93d277ffde23",
					"lastRevision": 2243698215,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Start of time",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": "var start = JSON.parse(responseBody).start;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/time/start?timestamp=2016-10-10&unit=month"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": "Curabitur auctor, elit nec pulvinar porttitor, ex augue condimentum enim, eget suscipit urna felis quis neque.\nSuspendisse sit amet luctus massa, nec venenatis mi. Suspendisse tincidunt massa at nibh efficitur fringilla. Nam quis congue mi. Etiam volutpat.",
					"dataMode": "raw",
					"description": "The HTTP `PATCH` method is used to update resources on a server. The exact\nuse of `PATCH` requests depends on the server in question. There are a number\nof server implementations which handle `PATCH` differently. Technically, \n`PATCH` supports both Query String parameters and a Request Body.\n\nThis endpoint accepts an HTTP `PATCH` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
					"descriptionFormat": null,
					"folder": "a8328e94-341e-c0e5-66a5-09fd5bd50e6e",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "66db641c-4d7f-6edf-687a-3a4dc88b6933",
					"lastRevision": 2243698196,
					"lastUpdatedBy": "2799045",
					"method": "PATCH",
					"name": "PATCH Request",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": "Curabitur auctor, elit nec pulvinar porttitor, ex augue condimentum enim, eget suscipit urna felis quis neque.\nSuspendisse sit amet luctus massa, nec venenatis mi. Suspendisse tincidunt massa at nibh efficitur fringilla. Nam quis congue mi. Etiam volutpat.",
					"responses": [],
					"tests": "var responseJSON;\n\ntry { \n    responseJSON = JSON.parse(responseBody); \n    tests['response is valid JSON'] = true;\n}\ncatch (e) { \n    responseJSON = {}; \n    tests['response is valid JSON'] = false;\n}\n\n\ntests['response has PUT data'] = _.has(responseJSON, 'data');\ntests['response matches the data sent in request'] = (responseJSON.data && responseJSON.data.length === 256);",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/patch"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": "Donec fermentum, nisi sed cursus eleifend, nulla tortor ultricies tellus, ut vehicula orci arcu ut velit. In volutpat egestas dapibus.\nMorbi condimentum vestibulum sapien. Etiam dignissim diam quis eros lobortis gravida vel lobortis est. Etiam gravida sed.",
					"dataMode": "raw",
					"description": "The HTTP `DELETE` method is used to delete resources on a server. The exact\nuse of `DELETE` requests depends on the server implementation. In general, \n`DELETE` requests support both, Query String parameters as well as a Request \nBody.\n\nThis endpoint accepts an HTTP `DELETE` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
					"descriptionFormat": null,
					"folder": "a8328e94-341e-c0e5-66a5-09fd5bd50e6e",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "6707516e-9f1a-5aad-c916-dfa85edf7bf1",
					"lastRevision": 2243698195,
					"lastUpdatedBy": "2799045",
					"method": "DELETE",
					"name": "DELETE Request",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": "Donec fermentum, nisi sed cursus eleifend, nulla tortor ultricies tellus, ut vehicula orci arcu ut velit. In volutpat egestas dapibus.\nMorbi condimentum vestibulum sapien. Etiam dignissim diam quis eros lobortis gravida vel lobortis est. Etiam gravida sed.",
					"responses": [],
					"tests": "var responseJSON;\n\ntry { \n    responseJSON = JSON.parse(responseBody); \n    tests['response is valid JSON'] = true;\n}\ncatch (e) { \n    responseJSON = {}; \n    tests['response is valid JSON'] = false;\n}\n\n\ntests['response has PUT data'] = _.has(responseJSON, 'data');\ntests['response matches the data sent in request'] = (responseJSON.data && responseJSON.data.length === 256);",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/delete"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": [],
					"dataMode": "params",
					"description": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response.",
					"descriptionFormat": null,
					"folder": "f7beea4c-f8ef-6ee7-1ed1-201a3f07fc77",
					"headerData": [],
					"headers": "my-sample-header: Lorem ipsum dolor sit amet\n",
					"helperAttributes": "{}",
					"id": "68a81715-ec53-b033-f503-06abd7b1506c",
					"lastRevision": 2243698184,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Request Headers",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": null,
					"responses": [
						{
							"cookies": [
								{
									"domain": "echo.getpostman.com",
									"hostOnly": true,
									"httpOnly": true,
									"name": "sails.sid",
									"path": "/",
									"secure": false,
									"session": true,
									"storeId": "0",
									"value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
								}
							],
							"createdAt": "2017-09-20T14:12:45.000Z",
							"headers": [
								{
									"description": "",
									"key": "Access-Control-Allow-Credentials",
									"name": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Headers",
									"name": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Methods",
									"name": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Origin",
									"name": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Encoding",
									"name": "Content-Encoding",
									"value": "gzip"
								},
								{
									"description": "",
									"key": "Content-Length",
									"name": "Content-Length",
									"value": "342"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 31 Mar 2016 11:14:00 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.6.2"
								},
								{
									"description": "",
									"key": "Vary",
									"name": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "Sails <sailsjs.org>"
								}
							],
							"id": "d41a9db6-3d8d-1a54-498c-96d914317672",
							"language": "javascript",
							"lastRevision": 2243698764,
							"lastUpdatedBy": "2799045",
							"mime": "",
							"name": "my-sample-header",
							"owner": "2799045",
							"previewType": "html",
							"rawDataType": "text",
							"request": "da16c006-6293-c1fe-ea42-e9ba8a5e68b1",
							"requestObject": "{\"url\":\"https://echo.getpostman.com/headers\",\"headers\":[{\"key\":\"my-sample-header\",\"value\":\"Lorem ipsum dolor sit amet\",\"enabled\":true}],\"data\":[],\"method\":\"GET\",\"dataMode\":\"params\"}",
							"responseCode": {
								"code": 200,
								"name": "OK"
							},
							"searchResultScrolledTo": "-1",
							"state": {
								"size": "normal"
							},
							"status": "",
							"text": "{\"headers\":{\"host\":\"echo.getpostman.com\",\"accept\":\"*/*\",\"accept-encoding\":\"gzip, deflate, sdch\",\"accept-language\":\"en-US,en;q=0.8\",\"cache-control\":\"no-cache\",\"my-sample-header\":\"Lorem ipsum dolor sit amet\",\"postman-token\":\"3c8ea80b-f599-fba6-e0b4-a0910440e7b6\",\"user-agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36\",\"x-forwarded-port\":\"443\",\"x-forwarded-proto\":\"https\"}}",
							"time": "460",
							"updatedAt": "2017-09-20T14:12:46.000Z",
							"version": null
						}
					],
					"tests": "var responseJSON;\ntry {\n    tests[\"Body contains headers\"] = responseBody.has(\"headers\");\n    responseJSON = JSON.parse(responseBody);\n    tests[\"Header contains host\"] = \"host\" in responseJSON.headers;\n    tests[\"Header contains test parameter sent as part of request header\"] = \"my-sample-header\" in responseJSON.headers;\n}\ncatch (e) { }\n\n\n\n",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/headers"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "A simple `GET` request to `/time/between` to check if the provided timestamp is between a range specified by the `start` and `end` query parameters. A resolution limit can also be specified by the `unit` query parameter.\n\nFor instance, for a resolution `unit` of `month`,\n`2016-10-05` does lie between `2016-11-02` and `2016-09-01`.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `between` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  between: true/false\n}\n```",
					"descriptionFormat": null,
					"folder": "e32afeac-00fb-fc22-5228-4e2cf73f64a4",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "7c24ce07-d82c-b8fd-d2ca-e8317557a741",
					"lastRevision": 2243698218,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Between timestamps",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": "var after = JSON.parse(responseBody).after;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Comparsion was correct\"] = after === false;",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/time/between?timestamp=2016-10-10&start=2017-10-10&end=2019-10-10"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "A simple `GET` request to `/time/now` to return the current timestamp as a UTC string.\n\n```\nFri, 04 Nov 2016 09:00:46 GMT\n```",
					"descriptionFormat": "html",
					"folder": "e32afeac-00fb-fc22-5228-4e2cf73f64a4",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "874fedb4-b89f-df63-d2b0-86fd19de91cb",
					"isLastRequest": true,
					"lastRevision": 2243698209,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Current UTC time",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"responses": [
						{
							"cookies": [
								{
									"domain": "postman-echo.com",
									"expirationDate": 2147463847,
									"httpOnly": true,
									"name": "sails.sid",
									"path": "/",
									"secure": false,
									"url": "https://postman-echo.com/time/now",
									"value": "s%3A2lT3TO7qS1tadeSAp4axl-NcXG9CV6Rf.HGqLY%2FlKEKY4fgCLePaAZs3tCHp%2Bglf7ZOJYlonGeig"
								}
							],
							"createdAt": "2017-09-20T14:12:46.000Z",
							"headers": [
								{
									"description": "",
									"key": "Access-Control-Allow-Credentials",
									"name": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Headers",
									"name": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Methods",
									"name": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Origin",
									"name": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Expose-Headers",
									"name": "Access-Control-Expose-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Encoding",
									"name": "Content-Encoding",
									"value": "gzip"
								},
								{
									"description": "",
									"key": "Content-Length",
									"name": "Content-Length",
									"value": "49"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "text/html; charset=utf-8"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Wed, 11 Jan 2017 10:27:12 GMT"
								},
								{
									"description": "",
									"key": "ETag",
									"name": "ETag",
									"value": "W/\"1d-2jJhkzratfVX9VZ0+raHbw\""
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Vary",
									"name": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"description": "",
									"key": "set-cookie",
									"name": "set-cookie",
									"value": "sails.sid=s%3A2lT3TO7qS1tadeSAp4axl-NcXG9CV6Rf.HGqLY%2FlKEKY4fgCLePaAZs3tCHp%2Bglf7ZOJYlonGeig; Path=/; HttpOnly"
								}
							],
							"id": "660a0d11-9a83-5dbf-d0c3-dff00292d0a5",
							"language": "html",
							"lastRevision": 2243698769,
							"lastUpdatedBy": "2799045",
							"mime": "",
							"name": "time as text",
							"owner": "2799045",
							"previewType": "text",
							"rawDataType": null,
							"request": "2881587c-bd9f-0ed1-7c31-525e4ed5306c",
							"requestObject": "{\"url\":\"https://postman-echo.com/time/now\",\"headers\":[],\"data\":null,\"method\":\"GET\",\"dataMode\":\"params\"}",
							"responseCode": {
								"code": 200,
								"fromServer": true,
								"name": "OK"
							},
							"searchResultScrolledTo": "-1",
							"state": {
								"size": "normal"
							},
							"status": "",
							"text": "Wed, 11 Jan 2017 10:27:12 GMT",
							"time": "749",
							"updatedAt": "2017-09-20T14:12:46.000Z",
							"version": null
						}
					],
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Time is in a valid format\"] = responseBody === postman.getResponseHeader(\"date\");\n",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/time/now"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "A simple `GET` request to `/time/unit` to extract the specified timestamp unit (as provided in the `unit` query parameter). The default unit returned is the `year`.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `unit` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  unit: \"extracted-timestamp-unit\"\n}\n```",
					"descriptionFormat": null,
					"folder": "e32afeac-00fb-fc22-5228-4e2cf73f64a4",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "8986a9c6-a6fb-0722-6459-5503dc64567a",
					"lastRevision": 2243698225,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Extract timestamp unit",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": "var unit = JSON.parse(responseBody).unit;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Returned unit is valid\"] = unit === 1;\n",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/time/unit?timestamp=2016-10-10&unit=day"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": [],
					"dataMode": "params",
					"description": "This endpoint returns the response using [gzip compression algoritm](https://en.wikipedia.org/wiki/Gzip).\nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `gzip` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
					"descriptionFormat": null,
					"folder": "acfa1751-98cb-846f-3eb1-0e292ba8fb19",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "91313750-a1cb-f997-0665-f6f365ac63ef",
					"lastRevision": 2243698207,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "GZip Compressed Response",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": "try {\n    var data = JSON.parse(responseBody);\n    tests[\"Body contains gzipped\"] = responseBody.has(\"gzipped\");\n    tests[\"Body contains headers\"] = responseBody.has(\"headers\");\n    tests[\"Body contains method\"] = responseBody.has(\"method\");\n}\ncatch(e) {\n    console.log('Cannot parse response,probably not a JSON');\n}\ntests[\"response code is 200\"] = responseCode.code === 200;",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/gzip"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": [],
					"dataMode": "params",
					"description": "This endpoint allows one to instruct the server which status code to respond with.\n\nEvery response is accompanied by a status code. The status code provides a summary of the nature of response sent by the server. For example, a status code of `200` means everything is okay with the response and a code of `404` implies that the requested URL does not exist on server. \nA list of all valid HTTP status code can be found at the [List of Status Codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) wikipedia article. When using Postman, the response status code is described for easy reference.\n\nNote that if an invalid status code is requested to be sent, the server returns a status code of `400 Bad Request`.",
					"descriptionFormat": null,
					"folder": "acfa1751-98cb-846f-3eb1-0e292ba8fb19",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "949d5edc-ca01-326d-8a8a-69be4471a74c",
					"lastRevision": 2243698205,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Response Status Code",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": null,
					"responses": [
						{
							"cookies": [
								{
									"domain": ".getpostman.com",
									"expirationDate": 1460718898.0598,
									"hostOnly": false,
									"httpOnly": false,
									"name": "getpostmanlogin",
									"path": "/",
									"secure": false,
									"session": false,
									"storeId": "0",
									"value": "yes"
								},
								{
									"domain": ".getpostman.com",
									"expirationDate": 1460718898.06,
									"hostOnly": false,
									"httpOnly": false,
									"name": "postman.sid",
									"path": "/",
									"secure": false,
									"session": false,
									"storeId": "0",
									"value": "df0c0256028d7ec4d641f766104a9571a8e249685bbc667d7cee030bbf44d3209495c70c03248e31e678a93812591d5e12187a8e99bf6bc5e80c40903f6ff6226938f24e413c0ffa613a7372064ec44a8594e8d3ede6945e34394f369573feeebc4a73a3e24b8c9ac18a53704addb5fd3f71f1ede488ff551feb059e9c1fb208164814e45e0312c4df8ea6e83c26702f42ae634c6afbe82d57c857bbf5598b5527961c1c28688dc2580070a4389f0cf4ec0a179b5b9c11b2ecbaa5460d374065bf5c7a3add9505df0fa89acb9f227f05ed2d4c6b58c39d6d728bd49f6f323ae67d4a75882aa7682f5d6fc5b981ba411d94aa93970bfaefa1953a73e440d50d012b5f288975c888e2345ee7777e746fb5aed3a7b2dbc087c6456621aa78c24a3c17c5f96cf59844933249a352f631e2008cffac6faf06d0e253dcc01cf0067bf56c1fbc5ed61fec1861b60c5accf35ffc2e56154a113004fa1db9d7171c3af8fc063918554092f5"
								},
								{
									"domain": ".echo.getpostman.com",
									"expirationDate": 1522494981,
									"hostOnly": false,
									"httpOnly": false,
									"name": "_ga",
									"path": "/",
									"secure": false,
									"session": false,
									"storeId": "0",
									"value": "GA1.3.1703443399.1459422978"
								},
								{
									"domain": "echo.getpostman.com",
									"hostOnly": true,
									"httpOnly": true,
									"name": "sails.sid",
									"path": "/",
									"secure": false,
									"session": true,
									"storeId": "0",
									"value": "s%3AvuHU0EKeDbyNjVrEc7U30dMPzVu8CRaD.GOV1H9olcVzXqrwqP%2BC%2B6MVj2UczXivcN00jgPoDYfs"
								}
							],
							"createdAt": "2017-09-20T14:12:46.000Z",
							"headers": [
								{
									"description": "",
									"key": "Access-Control-Allow-Credentials",
									"name": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Headers",
									"name": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Methods",
									"name": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Origin",
									"name": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Length",
									"name": "Content-Length",
									"value": "14"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 31 Mar 2016 11:58:47 GMT"
								},
								{
									"description": "",
									"key": "ETag",
									"name": "ETag",
									"value": "W/\"e-1056260003\""
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.6.2"
								},
								{
									"description": "",
									"key": "Vary",
									"name": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "Sails <sailsjs.org>"
								}
							],
							"id": "bb80c98f-4953-a433-b87f-ff21b483c985",
							"language": "javascript",
							"lastRevision": 2243698768,
							"lastUpdatedBy": "2799045",
							"mime": "",
							"name": "200",
							"owner": "2799045",
							"previewType": "html",
							"rawDataType": "text",
							"request": "6cfd22d8-26cc-7d3e-cf50-16d400211a76",
							"requestObject": "{\"url\":\"https://echo.getpostman.com/status/200\",\"headers\":[],\"data\":[],\"method\":\"GET\",\"dataMode\":\"params\"}",
							"responseCode": {
								"code": 200,
								"name": "OK"
							},
							"searchResultScrolledTo": "-1",
							"state": {
								"size": "normal"
							},
							"status": "",
							"text": "{\"status\":200}",
							"time": "251",
							"updatedAt": "2017-09-20T14:12:46.000Z",
							"version": null
						}
					],
					"tests": "var responseJSON;\ntry {\n    responseJSON = JSON.parse(responseBody); \n    tests[\"Status equals 200\"] = responseJSON.status === 200;\n}\ncatch (e) { }\ntests[\"Body contains status\"] = responseBody.has(\"status\");\n\n",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/status/200"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": "{\n  \"info\": {\n    \"name\": \"Sample Postman Collection\",\n    \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\",\n    \"description\": \"A sample collection to demonstrate collections as a set of related requests\"\n  },\n\n  \"item\": [{\n    \"name\": \"A simple GET request\",\n    \"event\": [{\n      \"listen\": \"test\",\n      \"script\": {\n        \"type\": \"text/javascript\",\n        \"exec\": [\"tests['response code is 200'] = (responseCode.code === 200);\"]\n      }\n    }],\n    \"request\": {\n      \"url\": \"https://postman-echo.com/get?source=newman-sample-github-collection\",\n      \"method\": \"GET\"\n    }\n  }, {\n    \"name\": \"A simple POST request\",\n    \"request\": {\n      \"url\": \"https://postman-echo.com/post\",\n      \"method\": \"POST\",\n      \"header\": [{\n        \"key\": \"Content-Type\",\n        \"value\": \"text/plain\"\n      }],\n      \"body\": {\n        \"mode\": \"raw\",\n        \"raw\": \"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\"\n      }\n    }\n  }, {\n    \"name\": \"A simple POST request with JSON body\",\n    \"request\": {\n      \"url\": \"https://postman-echo.com/post\",\n      \"method\": \"POST\",\n      \"header\": [{\n        \"key\": \"Content-Type\",\n        \"value\": \"application/json\"\n      }],\n      \"body\": {\n        \"mode\": \"raw\",\n        \"raw\": \"{\\\"text\\\":\\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\"}\"\n      }\n    }\n  }]\n}",
					"dataMode": "raw",
					"description": "",
					"descriptionFormat": null,
					"folder": "995120cd-e87d-600b-ed9f-ac6cec6d3103",
					"headerData": [],
					"headers": "Content-Type: application/json\n",
					"helperAttributes": "{}",
					"id": "95e5e10d-c88d-4f1c-7714-974770b37b2d",
					"lastRevision": 2243698227,
					"lastUpdatedBy": "2799045",
					"method": "POST",
					"name": "Transform collection from format v2 to v1",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": "{\n  \"info\": {\n    \"name\": \"Sample Postman Collection\",\n    \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\",\n    \"description\": \"A sample collection to demonstrate collections as a set of related requests\"\n  },\n\n  \"item\": [{\n    \"name\": \"A simple GET request\",\n    \"event\": [{\n      \"listen\": \"test\",\n      \"script\": {\n        \"type\": \"text/javascript\",\n        \"exec\": [\"tests['response code is 200'] = (responseCode.code === 200);\"]\n      }\n    }],\n    \"request\": {\n      \"url\": \"https://postman-echo.com/get?source=newman-sample-github-collection\",\n      \"method\": \"GET\"\n    }\n  }, {\n    \"name\": \"A simple POST request\",\n    \"request\": {\n      \"url\": \"https://postman-echo.com/post\",\n      \"method\": \"POST\",\n      \"header\": [{\n        \"key\": \"Content-Type\",\n        \"value\": \"text/plain\"\n      }],\n      \"body\": {\n        \"mode\": \"raw\",\n        \"raw\": \"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\"\n      }\n    }\n  }, {\n    \"name\": \"A simple POST request with JSON body\",\n    \"request\": {\n      \"url\": \"https://postman-echo.com/post\",\n      \"method\": \"POST\",\n      \"header\": [{\n        \"key\": \"Content-Type\",\n        \"value\": \"application/json\"\n      }],\n      \"body\": {\n        \"mode\": \"raw\",\n        \"raw\": \"{\\\"text\\\":\\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\"}\"\n      }\n    }\n  }]\n}",
					"responses": [
						{
							"cookies": [
								{
									"domain": "postman-echo.com",
									"expirationDate": 2147463847,
									"httpOnly": true,
									"name": "sails.sid",
									"path": "/",
									"secure": false,
									"url": "https://postman-echo.com/transform/collection?from=2&to=1",
									"value": "s%3A55y5Ll7HpTzt_hKuw6N54k4N04ilmMdn.uCPCHttP5DmI%2BdBw2I9NZL55lFFOzz4XxS4qAHv47gI"
								}
							],
							"createdAt": "2017-09-20T14:12:46.000Z",
							"headers": [
								{
									"description": "",
									"key": "Access-Control-Allow-Credentials",
									"name": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Headers",
									"name": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Methods",
									"name": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Origin",
									"name": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Expose-Headers",
									"name": "Access-Control-Expose-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Encoding",
									"name": "Content-Encoding",
									"value": "gzip"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Wed, 11 Jan 2017 10:38:42 GMT"
								},
								{
									"description": "",
									"key": "ETag",
									"name": "ETag",
									"value": "W/\"569-P9uLZEIyoPfMmQ+U0mTO1A\""
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Vary",
									"name": "Vary",
									"value": "X-HTTP-Method-Override, Accept-Encoding"
								},
								{
									"description": "",
									"key": "set-cookie",
									"name": "set-cookie",
									"value": "sails.sid=s%3A55y5Ll7HpTzt_hKuw6N54k4N04ilmMdn.uCPCHttP5DmI%2BdBw2I9NZL55lFFOzz4XxS4qAHv47gI; Path=/; HttpOnly"
								},
								{
									"description": "",
									"key": "transfer-encoding",
									"name": "transfer-encoding",
									"value": "chunked"
								}
							],
							"id": "42adb23c-1cd2-f879-333a-e18836217017",
							"language": "json",
							"lastRevision": 2243698772,
							"lastUpdatedBy": "2799045",
							"mime": "",
							"name": "Sample v1 Response",
							"owner": "2799045",
							"previewType": "text",
							"rawDataType": null,
							"request": "dc8d6e30-c1cf-9d98-4b95-fc1ca6196511",
							"requestObject": "{\"url\":\"https://postman-echo.com/transform/collection?from=2&to=1\",\"headers\":[{\"key\":\"Content-Type\",\"value\":\"application/json\",\"enabled\":true,\"description\":\"The mime type of this content\",\"disabled\":false}],\"data\":\"{\\n  \\\"info\\\": {\\n    \\\"name\\\": \\\"Sample Postman Collection\\\",\\n    \\\"schema\\\": \\\"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\\\",\\n    \\\"description\\\": \\\"A sample collection to demonstrate collections as a set of related requests\\\"\\n  },\\n\\n  \\\"item\\\": [{\\n    \\\"name\\\": \\\"A simple GET request\\\",\\n    \\\"event\\\": [{\\n      \\\"listen\\\": \\\"test\\\",\\n      \\\"script\\\": {\\n        \\\"type\\\": \\\"text/javascript\\\",\\n        \\\"exec\\\": [\\\"tests['response code is 200'] = (responseCode.code === 200);\\\"]\\n      }\\n    }],\\n    \\\"request\\\": {\\n      \\\"url\\\": \\\"https://postman-echo.com/get?source=newman-sample-github-collection\\\",\\n      \\\"method\\\": \\\"GET\\\"\\n    }\\n  }, {\\n    \\\"name\\\": \\\"A simple POST request\\\",\\n    \\\"request\\\": {\\n      \\\"url\\\": \\\"https://postman-echo.com/post\\\",\\n      \\\"method\\\": \\\"POST\\\",\\n      \\\"header\\\": [{\\n        \\\"key\\\": \\\"Content-Type\\\",\\n        \\\"value\\\": \\\"text/plain\\\"\\n      }],\\n      \\\"body\\\": {\\n        \\\"mode\\\": \\\"raw\\\",\\n        \\\"raw\\\": \\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\"\\n      }\\n    }\\n  }, {\\n    \\\"name\\\": \\\"A simple POST request with JSON body\\\",\\n    \\\"request\\\": {\\n      \\\"url\\\": \\\"https://postman-echo.com/post\\\",\\n      \\\"method\\\": \\\"POST\\\",\\n      \\\"header\\\": [{\\n        \\\"key\\\": \\\"Content-Type\\\",\\n        \\\"value\\\": \\\"application/json\\\"\\n      }],\\n      \\\"body\\\": {\\n        \\\"mode\\\": \\\"raw\\\",\\n        \\\"raw\\\": \\\"{\\\\\\\"text\\\\\\\":\\\\\\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\\\\\"}\\\"\\n      }\\n    }\\n  }]\\n}\",\"method\":\"POST\",\"dataMode\":\"raw\"}",
							"responseCode": {
								"code": 200,
								"fromServer": true,
								"name": "OK"
							},
							"searchResultScrolledTo": "-1",
							"state": {
								"size": "normal"
							},
							"status": "",
							"text": "{\"id\":\"0c42230c-c8e4-4ca0-a4aa-d393971de8b8\",\"name\":\"Sample Postman Collection\",\"description\":\"A sample collection to demonstrate collections as a set of related requests\",\"order\":[\"3d04ed83-dc1e-40ec-923c-16aa92509e50\",\"e02f8160-fb41-4633-be80-cc7d701e85b4\",\"77bd6d4d-1060-4927-aa5c-dcdba7f750cf\"],\"folders\":[],\"requests\":[{\"id\":\"3d04ed83-dc1e-40ec-923c-16aa92509e50\",\"name\":\"A simple GET request\",\"collectionId\":\"1dd68aff-a3fa-4f52-904f-5b75053bc9d9\",\"method\":\"GET\",\"headers\":\"\",\"data\":[],\"rawModeData\":\"\",\"tests\":\"tests['response code is 200'] = (responseCode.code === 200);\",\"preRequestScript\":\"\",\"url\":\"https://postman-echo.com/get?source=newman-sample-github-collection\"},{\"id\":\"e02f8160-fb41-4633-be80-cc7d701e85b4\",\"name\":\"A simple POST request\",\"collectionId\":\"1dd68aff-a3fa-4f52-904f-5b75053bc9d9\",\"method\":\"POST\",\"headers\":\"Content-Type: text/plain\",\"dataMode\":\"raw\",\"data\":[],\"rawModeData\":\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\",\"url\":\"https://postman-echo.com/post\"},{\"id\":\"77bd6d4d-1060-4927-aa5c-dcdba7f750cf\",\"name\":\"A simple POST request with JSON body\",\"collectionId\":\"1dd68aff-a3fa-4f52-904f-5b75053bc9d9\",\"method\":\"POST\",\"headers\":\"Content-Type: application/json\",\"dataMode\":\"raw\",\"data\":[],\"rawModeData\":\"{\\\"text\\\":\\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\"}\",\"url\":\"https://postman-echo.com/post\"}]}",
							"time": "276",
							"updatedAt": "2017-09-20T14:12:46.000Z",
							"version": null
						}
					],
					"tests": "",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/transform/collection?from=2&to=1"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "A simple `GET` request to `/time/before` to check if the provided timestamps is before a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `before` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  before: true/false\n}\n```",
					"descriptionFormat": null,
					"folder": "e32afeac-00fb-fc22-5228-4e2cf73f64a4",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "961cb6eb-fc52-48f3-9f06-51da5877edfc",
					"lastRevision": 2243698220,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Before comparisons",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": "var before = JSON.parse(responseBody).before;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Comparsion was correct\"] = before === true;",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/time/before?timestamp=2016-10-10&target=2017-10-10"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "A simple `GET` request to `/time/object` to return the current / provided timestamp as a JSON object.\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  years: 2016,\n  months: 10,\n  days: 10,\n  hours: 23,\n  minutes: 34,\n  seconds: 20,\n  milliseconds: 980\n}\n```",
					"descriptionFormat": null,
					"folder": "e32afeac-00fb-fc22-5228-4e2cf73f64a4",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "98d8719b-2cc5-9cc7-8be2-aadb67d53083",
					"lastRevision": 2243698224,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Object representation",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": "var object = JSON.parse(responseBody);\n\ntests[\"Status code is 200\"] = responseCode.code === 200;",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/time/start?timestamp=2016-10-10&unit=month"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "hawkAuth",
					"data": [
						{
							"enabled": true,
							"key": "access_token",
							"type": "text",
							"value": "xyz1"
						},
						{
							"enabled": true,
							"key": "id",
							"type": "text",
							"value": "U1"
						},
						{
							"enabled": true,
							"key": "server_secret",
							"type": "text",
							"value": "zeppelin"
						},
						{
							"enabled": true,
							"key": "admin",
							"type": "text",
							"value": "true"
						}
					],
					"dataMode": "params",
					"description": "This endpoint is a Hawk Authentication protected endpoint. [Hawk authentication](https://github.com/hueniverse/hawk) is a widely used protocol for protecting API endpoints. One of Hawk's main goals is to enable HTTP authentication for services that do not use TLS (although it can be used in conjunction with TLS as well).\n\nIn order to use this endpoint, select the \"Hawk Auth\" helper inside Postman, and set the following values:\n\nHawk Auth ID: `dh37fgj492je`\n\nHawk Auth Key: `werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn`\n\nAlgorithm: `sha256`\n\nThe rest of the values are optional, and can be left blank. Hitting send should give you a response with a status code of 200 OK.",
					"descriptionFormat": "html",
					"folder": "c1a0544f-18e9-be2a-0268-d2e100c8e6bb",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{\"id\":\"hawk\",\"hawk_id\":\"dh37fgj492je\",\"hawk_key\":\"werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn\",\"algorithm\":\"sha256\",\"user\":\"\",\"saveToRequest\":true,\"nonce\":\"RZKGNz\",\"timestamp\":\"\"}",
					"id": "b8f049aa-4833-f711-4fa8-8c79c6ed34c6",
					"lastRevision": 2243698174,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Hawk Auth",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": null,
					"responses": [
						{
							"cookies": [
								{
									"domain": ".getpostman.com",
									"expirationDate": 1460717668.0694,
									"hostOnly": false,
									"httpOnly": false,
									"name": "getpostmanlogin",
									"path": "/",
									"secure": false,
									"session": false,
									"storeId": "0",
									"value": "yes"
								},
								{
									"domain": ".getpostman.com",
									"expirationDate": 1460717668.0695,
									"hostOnly": false,
									"httpOnly": false,
									"name": "postman.sid",
									"path": "/",
									"secure": false,
									"session": false,
									"storeId": "0",
									"value": "9f887f3b7f14b8c29ac4dc4109381b0b89a76e785c7b34251d6c8025b41b24013d2aa49f40e2deac19cbf0594dd984169455534d91ff98d4d1868d67ac857017629f137926e3a04a616bb83a2fb5ab9e6cbea9579ed5d5c1155d47545d72aad5be99f4abd0a7130805b3807d70cd507171dbe9d950d8e35a853f9ec075f5a767c95df4d57f7d521b66605b3bda3801700e26e651d1129c798b729ee3b91702d43ae64ab226c3f426893753def772c15442a7552dc84a3c773d6099a50b0a6af940b64c8176fedfcecd5fc31ccfc3bbc0124bfdaa0d62e4252d4aafb46a3c10963d12391e1fa97a1c0f19a636f57a3ac8cc35567d1cb6cb53b77f8adde3f6754a765596d7d00bdeb9acb5cc8d115e7c3f50ec3228e34d3e6c7464e9039b01868e03d10e9f87772397602453e9e91205de7b86021fad06eb26e69298e99ff1597a670faeb310f8c092041d544851de84f2bee89a92123da6eea286210524035c85361e2af42166a6"
								},
								{
									"domain": "echo.getpostman.com",
									"hostOnly": true,
									"httpOnly": true,
									"name": "sails.sid",
									"path": "/",
									"secure": false,
									"session": true,
									"storeId": "0",
									"value": "s%3AryJV7v-PE4PuTjBK6nH5XOynQ4atuATV.n17KcaLhVmV8TBHNLwdwXgGR7lmqs3i478WPlTbRgZ4"
								}
							],
							"createdAt": "2017-09-20T14:12:45.000Z",
							"headers": [
								{
									"description": "",
									"key": "Access-Control-Allow-Credentials",
									"name": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Headers",
									"name": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Methods",
									"name": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Origin",
									"name": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Encoding",
									"name": "Content-Encoding",
									"value": "gzip"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 31 Mar 2016 11:12:16 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.6.2"
								},
								{
									"description": "",
									"key": "Server-Authorization",
									"name": "Server-Authorization",
									"value": "Hawk mac=\"vRrUzDdcHu2NaNts/r4zg2xmXMdX8wPiTGTM398BDRg=\", hash=\"qmtflETMybaZiOQ2dLT17yiRunFT5OCIxZRZ0boQaiE=\""
								},
								{
									"description": "",
									"key": "Vary",
									"name": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "Sails <sailsjs.org>"
								},
								{
									"description": "",
									"key": "transfer-encoding",
									"name": "transfer-encoding",
									"value": "chunked"
								}
							],
							"id": "b9450374-64ba-7b22-d143-0735853065d5",
							"language": "javascript",
							"lastRevision": 2243698757,
							"lastUpdatedBy": "2799045",
							"mime": "",
							"name": "Success",
							"owner": "2799045",
							"previewType": "html",
							"rawDataType": "text",
							"request": "843acf02-a33c-c4bb-d742-c07b9212e4b0",
							"requestObject": "{\"url\":\"https://echo.getpostman.com/auth/hawk\",\"headers\":[{\"key\":\"Authorization\",\"type\":\"text\",\"name\":\"Authorization\",\"value\":\"Hawk id=\\\"dh37fgj492je\\\", ts=\\\"1459422734\\\", nonce=\\\"XiwiCU\\\", mac=\\\"KzMHk67BYCC9zZqRy5hRdWFEFLHX5bNlRWGdmOAWKp0=\\\"\"}],\"data\":[{\"key\":\"access_token\",\"value\":\"xyz1\",\"type\":\"text\",\"enabled\":true},{\"key\":\"id\",\"value\":\"U1\",\"type\":\"text\",\"enabled\":true},{\"key\":\"server_secret\",\"value\":\"zeppelin\",\"type\":\"text\",\"enabled\":true},{\"key\":\"admin\",\"value\":\"true\",\"type\":\"text\",\"enabled\":true}],\"method\":\"GET\",\"dataMode\":\"params\"}",
							"responseCode": {
								"code": 200,
								"name": "OK"
							},
							"searchResultScrolledTo": "-1",
							"state": {
								"size": "normal"
							},
							"status": "",
							"text": "{\"status\":\"pass\",\"message\":\"Hawk Authentication successful\"}",
							"time": "1855",
							"updatedAt": "2017-09-20T14:12:46.000Z",
							"version": null
						}
					],
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/auth/hawk"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": [
						{
							"enabled": true,
							"key": "strange",
							"type": "text",
							"value": "boom"
						}
					],
					"dataMode": "urlencoded",
					"description": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested when data is sent as a form parameter.",
					"descriptionFormat": null,
					"folder": "a8328e94-341e-c0e5-66a5-09fd5bd50e6e",
					"headerData": [],
					"headers": "Content-Type: application/x-www-form-urlencoded\n",
					"helperAttributes": "{}",
					"id": "bb9a9c44-7789-6243-9a13-9abeef50315c",
					"lastRevision": 2243698189,
					"lastUpdatedBy": "2799045",
					"method": "POST",
					"name": "POST Form Data",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": "var responseJSON;\n\ntry { \n    responseJSON = JSON.parse(responseBody); \n    tests['response is valid JSON'] = true;\n}\ncatch (e) { \n    responseJSON = {}; \n    tests['response is valid JSON'] = false;\n}\n\n\ntests['response has post data'] = _.has(responseJSON, 'form');\ntests['response matches the data posted'] = (responseJSON.form && responseJSON.form.strange === 'boom');",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/post"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "A simple `GET` request to `/time/format` to convert the timestamp to any desired valid format.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `format` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  format: \"formatted-timestamp\"\n}\n```",
					"descriptionFormat": null,
					"folder": "e32afeac-00fb-fc22-5228-4e2cf73f64a4",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "bc151657-b5d2-504f-72c1-95ff8d5f57f5",
					"lastRevision": 2243698221,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Format timestamp",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": "var format = JSON.parse(responseBody).format;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Formatted result is valid\"] = format === \"20\";\n",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/time/format?timestamp=2016-10-10&format=mm"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": [],
					"dataMode": "params",
					"description": "If a response of an endpoint requires to send data beyond the basic English / ASCII character set, the `charset` parameter in the `Content-Type` response header defines the character encoding policy.\n\nThis endpoint returns an `UTF8` character encoded response body with text in various languages such as Greek, Latin, East Asian, etc. Postman can interpret the character encoding and use appropriate methods to display the character set in responses.",
					"descriptionFormat": null,
					"folder": "acfa1751-98cb-846f-3eb1-0e292ba8fb19",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "c12320b5-990f-b1ed-0503-155d87a732e8",
					"lastRevision": 2243698199,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Get UTF8 Encoded Response",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": "tests[\"response code is 200\"] = responseCode.code === 200;",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/encoding/utf8"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": [],
					"dataMode": "params",
					"description": "The cookie setter endpoint accepts a list of cookies and their values as part of URL parameters of a `GET` request. These cookies are saved and can be subsequently retrieved or deleted. The response of this request returns a JSON with all cookies listed.\n\nTo set your own set of cookies, simply replace the URL parameters \"foo1=bar1&foo2=bar2\" with your own set of key-value pairs.",
					"descriptionFormat": null,
					"folder": "1947770b-0773-7e44-4f57-492261de395d",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "c17236fd-d7b1-2b3a-66b4-53fc95e10e84",
					"lastRevision": 2243698177,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Set Cookies",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": null,
					"responses": [
						{
							"cookies": [],
							"createdAt": "2017-09-20T14:12:45.000Z",
							"headers": [
								{
									"description": "",
									"key": "Access-Control-Allow-Credentials",
									"name": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Headers",
									"name": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Methods",
									"name": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Origin",
									"name": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Encoding",
									"name": "Content-Encoding",
									"value": "gzip"
								},
								{
									"description": "",
									"key": "Content-Length",
									"name": "Content-Length",
									"value": "51"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 29 Oct 2015 06:15:28 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.6.2"
								},
								{
									"description": "",
									"key": "Vary",
									"name": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "Sails <sailsjs.org>"
								}
							],
							"id": "c3c1a478-cff0-77eb-7eba-b0a583edcc11",
							"language": "javascript",
							"lastRevision": 2243698759,
							"lastUpdatedBy": "2799045",
							"mime": "",
							"name": "Cookies",
							"owner": "2799045",
							"previewType": "html",
							"rawDataType": "text",
							"request": "3de3b135-b3cc-3a68-ba27-b6d373e03c8c",
							"requestObject": "\"96a24790-4951-ba7e-aa4f-fb40a45a7fcb\"",
							"responseCode": {
								"code": 200,
								"name": "OK"
							},
							"searchResultScrolledTo": "-1",
							"state": {
								"size": "normal"
							},
							"status": "",
							"text": "{\"cookies\":{\"foo1\":\"bar\",\"foo2\":\"bar\"}}",
							"time": "3063",
							"updatedAt": "2017-09-20T14:12:46.000Z",
							"version": null
						}
					],
					"tests": "// handle case where it is 304\n\nif (responseCode.code === 200) {\n    tests[\"Status code is 302 or 200\"] = true;\n    tests[\"Body contains cookies\"] = responseBody.has(\"cookies\");\n    \n    var body = JSON.parse(responseBody);\n    tests[\"Body contains cookie foo1\"] = 'foo1' in body.cookies;\n    tests[\"Body contains cookie foo2\"] = 'foo2' in body.cookies;\n\n}\nelse if (responseCode.code === 302) {\n    tests[\"Status code is 302 or 200\"] = true;\n    tests[\"Body has redirection message\"] = responseBody.has(\"Found. Redirecting to /cookies\")\n}\nelse {\n    tests[\"Status code is 302 or 200\"] = false;\n}\n\ntests[\"foo1 cookie is set\"] = _.get(postman.getResponseCookie('foo1'), 'value') === 'bar1';\n\ntests[\"foo2 cookie is set\"] = _.get(postman.getResponseCookie('foo2'), 'value') === 'bar2';",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/cookies/set?foo1=bar1&foo2=bar2"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": [],
					"dataMode": "params",
					"description": "This endpoint allows one to recieve streaming http response using [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding) of a configurable length.\n\nA streaming response does not wait for the entire response to be generated on server before flushing it out. This implies that for a fairly large response, parts of it can be streamed to the requestee as and when it is generated on server. The client can then take actions of processing this partially received data.",
					"descriptionFormat": null,
					"folder": "acfa1751-98cb-846f-3eb1-0e292ba8fb19",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "c725e5c2-5031-1512-b817-04ae02aaa7b9",
					"lastRevision": 2243698200,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Streamed Response",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": "tests[\"response code is 200\"] = responseCode.code === 200;\ntests[\"response is sent in chunks\"] = (postman.getResponseHeader('Transfer-Encoding') === 'chunked')\n",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/stream/10"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": [],
					"dataMode": "params",
					"description": "This endpoint returns the response using [deflate compression algoritm](https://en.wikipedia.org/wiki/DEFLATE). \nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `deflate` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
					"descriptionFormat": null,
					"folder": "acfa1751-98cb-846f-3eb1-0e292ba8fb19",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "d458d9cc-ac67-7782-1b79-d3bfbf66db1d",
					"lastRevision": 2243698203,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Deflate Compressed Response",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": "tests[\"response code is 200\"] = responseCode.code === 200;\n\ntry {\n    var data = JSON.parse(responseBody);\n    tests[\"Body contains deflated\"] = responseBody.has(\"deflated\");\n    tests[\"Body contains headers\"] = responseBody.has(\"headers\");\n    tests[\"Body contains method\"] = responseBody.has(\"method\");\n}\ncatch(e) {\n    console.log('Cannot parse response,probably not a JSON');\n}\n",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/deflate"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "A simple `GET` request to `/time/after` to check if the provided timestamps is after a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `after` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  after: true/false\n}\n```",
					"descriptionFormat": null,
					"folder": "e32afeac-00fb-fc22-5228-4e2cf73f64a4",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "d49ee758-2b0d-364c-c76e-51281084d16e",
					"lastRevision": 2243698212,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "After comparisons",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": "var after = JSON.parse(responseBody).after;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Comparsion was correct\"] = after === false;",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/time/after?timestamp=2016-10-10&target=2017-10-10"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "digestAuth",
					"data": [],
					"dataMode": "params",
					"description": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
					"descriptionFormat": null,
					"folder": "60415aa5-b36e-d46b-3850-ff6a842db725",
					"headerData": [],
					"headers": "Authorization: Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\"\n",
					"helperAttributes": "{\"id\":\"digest\",\"algorithm\":\"MD5\",\"username\":\"postman\",\"realm\":\"{{echo_digest_realm}}\",\"password\":\"password\",\"nonce\":\"{{echo_digest_nonce}}\",\"nonceCount\":\"\",\"clientNonce\":\"\",\"opaque\":\"\",\"qop\":\"\",\"saveToRequest\":true}",
					"id": "e247bf59-db98-f965-360c-e0cce9ad1e77",
					"lastRevision": 2243698169,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "DigestAuth Success",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": null,
					"responses": [
						{
							"cookies": [],
							"createdAt": "2017-09-20T14:12:45.000Z",
							"headers": [
								{
									"description": "",
									"key": "Access-Control-Allow-Credentials",
									"name": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Headers",
									"name": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Methods",
									"name": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Origin",
									"name": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Encoding",
									"name": "Content-Encoding",
									"value": "gzip"
								},
								{
									"description": "",
									"key": "Content-Length",
									"name": "Content-Length",
									"value": "42"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 29 Oct 2015 06:17:51 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.6.2"
								},
								{
									"description": "",
									"key": "Vary",
									"name": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "Sails <sailsjs.org>"
								}
							],
							"id": "074212ad-15b5-ad57-6281-18f4399cebcb",
							"language": "javascript",
							"lastRevision": 2243698753,
							"lastUpdatedBy": "2799045",
							"mime": "",
							"name": "200",
							"owner": "2799045",
							"previewType": "html",
							"rawDataType": "text",
							"request": "a4c04e32-72cf-0475-07dc-89c23f85cf0c",
							"requestObject": "\"eecb504e-1736-d34c-990a-b86d36f06ddd\"",
							"responseCode": {
								"code": 200,
								"name": "OK"
							},
							"searchResultScrolledTo": "-1",
							"state": {
								"size": "normal"
							},
							"status": "",
							"text": "{\"authenticated\":true}",
							"time": "9843",
							"updatedAt": "2017-09-20T14:12:46.000Z",
							"version": null
						}
					],
					"tests": "tests[\"response code is 200\"] = responseCode.code === 200;\ntests[\"body contains authenticated\"] = responseBody.has(\"authenticated\");",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/digest-auth"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "A simple `GET` request to `/time/subtract` to subtract units of time from the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `difference` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  difference: \"difference between (provided / current) and provided timestamps\"\n}\n```",
					"descriptionFormat": null,
					"folder": "e32afeac-00fb-fc22-5228-4e2cf73f64a4",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "e6f06c77-caf3-5388-c496-dac7dcf0a015",
					"lastRevision": 2243698219,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Time subtraction",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": "var difference = JSON.parse(responseBody).difference;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/time/subtract?timestamp=2016-10-10&years=100"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": "{\n  \"id\": \"7875be4b-917d-4aff-8cc4-5606c36bf418\",\n  \"name\": \"Sample Postman Collection\",\n  \"description\": \"A sample collection to demonstrate collections as a set of related requests\",\n  \"order\": [\n    \"4d9134be-e8bf-4693-9cd7-1c0fc66ae739\",\n    \"141ba274-cc50-4377-a59c-e080066f375e\",\n    \"4511ca8b-0bc7-430f-b894-a7ec1036f322\"\n  ],\n  \"folders\": [],\n  \"requests\": [\n    {\n      \"id\": \"4d9134be-e8bf-4693-9cd7-1c0fc66ae739\",\n      \"name\": \"A simple GET request\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"GET\",\n      \"headers\": \"\",\n      \"data\": [],\n      \"rawModeData\": \"\",\n      \"tests\": \"tests['response code is 200'] = (responseCode.code === 200);\",\n      \"preRequestScript\": \"\",\n      \"url\": \"https://postman-echo.com/get?source=newman-sample-github-collection\"\n    },\n    {\n      \"id\": \"141ba274-cc50-4377-a59c-e080066f375e\",\n      \"name\": \"A simple POST request\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"POST\",\n      \"headers\": \"Content-Type: text/plain\",\n      \"dataMode\": \"raw\",\n      \"data\": [],\n      \"rawModeData\": \"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\",\n      \"url\": \"https://postman-echo.com/post\"\n    },\n    {\n      \"id\": \"4511ca8b-0bc7-430f-b894-a7ec1036f322\",\n      \"name\": \"A simple POST request with JSON body\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"POST\",\n      \"headers\": \"Content-Type: application/json\",\n      \"dataMode\": \"raw\",\n      \"data\": [],\n      \"rawModeData\": \"{\\\"text\\\":\\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\"}\",\n      \"url\": \"https://postman-echo.com/post\"\n    }\n  ]\n}",
					"dataMode": "raw",
					"description": "",
					"descriptionFormat": "html",
					"folder": "995120cd-e87d-600b-ed9f-ac6cec6d3103",
					"headerData": [],
					"headers": "Content-Type: application/json\n",
					"helperAttributes": "{}",
					"id": "eb67525d-8bef-0863-4a40-7d25f79224e3",
					"lastRevision": 2243698228,
					"lastUpdatedBy": "2799045",
					"method": "POST",
					"name": "Transform collection from format v1 to v2",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": "{\n  \"id\": \"7875be4b-917d-4aff-8cc4-5606c36bf418\",\n  \"name\": \"Sample Postman Collection\",\n  \"description\": \"A sample collection to demonstrate collections as a set of related requests\",\n  \"order\": [\n    \"4d9134be-e8bf-4693-9cd7-1c0fc66ae739\",\n    \"141ba274-cc50-4377-a59c-e080066f375e\",\n    \"4511ca8b-0bc7-430f-b894-a7ec1036f322\"\n  ],\n  \"folders\": [],\n  \"requests\": [\n    {\n      \"id\": \"4d9134be-e8bf-4693-9cd7-1c0fc66ae739\",\n      \"name\": \"A simple GET request\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"GET\",\n      \"headers\": \"\",\n      \"data\": [],\n      \"rawModeData\": \"\",\n      \"tests\": \"tests['response code is 200'] = (responseCode.code === 200);\",\n      \"preRequestScript\": \"\",\n      \"url\": \"https://postman-echo.com/get?source=newman-sample-github-collection\"\n    },\n    {\n      \"id\": \"141ba274-cc50-4377-a59c-e080066f375e\",\n      \"name\": \"A simple POST request\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"POST\",\n      \"headers\": \"Content-Type: text/plain\",\n      \"dataMode\": \"raw\",\n      \"data\": [],\n      \"rawModeData\": \"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\",\n      \"url\": \"https://postman-echo.com/post\"\n    },\n    {\n      \"id\": \"4511ca8b-0bc7-430f-b894-a7ec1036f322\",\n      \"name\": \"A simple POST request with JSON body\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"POST\",\n      \"headers\": \"Content-Type: application/json\",\n      \"dataMode\": \"raw\",\n      \"data\": [],\n      \"rawModeData\": \"{\\\"text\\\":\\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\"}\",\n      \"url\": \"https://postman-echo.com/post\"\n    }\n  ]\n}",
					"responses": [
						{
							"cookies": [
								{
									"domain": "postman-echo.com",
									"expirationDate": 2147463847,
									"httpOnly": true,
									"name": "sails.sid",
									"path": "/",
									"secure": false,
									"url": "https://postman-echo.com/transform/collection?from=1&to=2",
									"value": "s%3AHtnQ1hlPxoj7wZahoNkcjN-aw9nQL0fc.KSyfLbEKhv1Lt3LvH13Ogjv9ENZgsBBSM6V8Y7TqVOU"
								}
							],
							"createdAt": "2017-09-20T14:12:46.000Z",
							"headers": [
								{
									"description": "",
									"key": "Access-Control-Allow-Credentials",
									"name": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Headers",
									"name": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Methods",
									"name": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Origin",
									"name": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Expose-Headers",
									"name": "Access-Control-Expose-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Encoding",
									"name": "Content-Encoding",
									"value": "gzip"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Wed, 11 Jan 2017 10:41:32 GMT"
								},
								{
									"description": "",
									"key": "ETag",
									"name": "ETag",
									"value": "W/\"4cc-7P727Clhlrl9+b1/vneniw\""
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Vary",
									"name": "Vary",
									"value": "X-HTTP-Method-Override, Accept-Encoding"
								},
								{
									"description": "",
									"key": "set-cookie",
									"name": "set-cookie",
									"value": "sails.sid=s%3AHtnQ1hlPxoj7wZahoNkcjN-aw9nQL0fc.KSyfLbEKhv1Lt3LvH13Ogjv9ENZgsBBSM6V8Y7TqVOU; Path=/; HttpOnly"
								},
								{
									"description": "",
									"key": "transfer-encoding",
									"name": "transfer-encoding",
									"value": "chunked"
								}
							],
							"id": "915c88c6-63cd-5e74-cdbd-4947560acabf",
							"language": "json",
							"lastRevision": 2243698774,
							"lastUpdatedBy": "2799045",
							"mime": "",
							"name": "Sample v2 Response",
							"owner": "2799045",
							"previewType": "text",
							"rawDataType": null,
							"request": "fffc59d5-1e2d-ccc8-2101-2f7b9216be40",
							"requestObject": "{\"url\":\"https://postman-echo.com/transform/collection?from=1&to=2\",\"headers\":[{\"key\":\"Content-Type\",\"value\":\"application/json\",\"enabled\":true,\"description\":\"The mime type of this content\",\"disabled\":false}],\"data\":\"{\\n  \\\"id\\\": \\\"7875be4b-917d-4aff-8cc4-5606c36bf418\\\",\\n  \\\"name\\\": \\\"Sample Postman Collection\\\",\\n  \\\"description\\\": \\\"A sample collection to demonstrate collections as a set of related requests\\\",\\n  \\\"order\\\": [\\n    \\\"4d9134be-e8bf-4693-9cd7-1c0fc66ae739\\\",\\n    \\\"141ba274-cc50-4377-a59c-e080066f375e\\\",\\n    \\\"4511ca8b-0bc7-430f-b894-a7ec1036f322\\\"\\n  ],\\n  \\\"folders\\\": [],\\n  \\\"requests\\\": [\\n    {\\n      \\\"id\\\": \\\"4d9134be-e8bf-4693-9cd7-1c0fc66ae739\\\",\\n      \\\"name\\\": \\\"A simple GET request\\\",\\n      \\\"collectionId\\\": \\\"877b9dae-a50e-4152-9b89-870c37216f78\\\",\\n      \\\"method\\\": \\\"GET\\\",\\n      \\\"headers\\\": \\\"\\\",\\n      \\\"data\\\": [],\\n      \\\"rawModeData\\\": \\\"\\\",\\n      \\\"tests\\\": \\\"tests['response code is 200'] = (responseCode.code === 200);\\\",\\n      \\\"preRequestScript\\\": \\\"\\\",\\n      \\\"url\\\": \\\"https://postman-echo.com/get?source=newman-sample-github-collection\\\"\\n    },\\n    {\\n      \\\"id\\\": \\\"141ba274-cc50-4377-a59c-e080066f375e\\\",\\n      \\\"name\\\": \\\"A simple POST request\\\",\\n      \\\"collectionId\\\": \\\"877b9dae-a50e-4152-9b89-870c37216f78\\\",\\n      \\\"method\\\": \\\"POST\\\",\\n      \\\"headers\\\": \\\"Content-Type: text/plain\\\",\\n      \\\"dataMode\\\": \\\"raw\\\",\\n      \\\"data\\\": [],\\n      \\\"rawModeData\\\": \\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\",\\n      \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n    },\\n    {\\n      \\\"id\\\": \\\"4511ca8b-0bc7-430f-b894-a7ec1036f322\\\",\\n      \\\"name\\\": \\\"A simple POST request with JSON body\\\",\\n      \\\"collectionId\\\": \\\"877b9dae-a50e-4152-9b89-870c37216f78\\\",\\n      \\\"method\\\": \\\"POST\\\",\\n      \\\"headers\\\": \\\"Content-Type: application/json\\\",\\n      \\\"dataMode\\\": \\\"raw\\\",\\n      \\\"data\\\": [],\\n      \\\"rawModeData\\\": \\\"{\\\\\\\"text\\\\\\\":\\\\\\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\\\\\"}\\\",\\n      \\\"url\\\": \\\"https://postman-echo.com/post\\\"\\n    }\\n  ]\\n}\",\"method\":\"POST\",\"dataMode\":\"raw\"}",
							"responseCode": {
								"code": 200,
								"fromServer": true,
								"name": "OK"
							},
							"searchResultScrolledTo": "-1",
							"state": {
								"size": "normal"
							},
							"status": "",
							"text": "{\"variables\":[],\"info\":{\"name\":\"Sample Postman Collection\",\"_postman_id\":\"7875be4b-917d-4aff-8cc4-5606c36bf418\",\"description\":\"A sample collection to demonstrate collections as a set of related requests\",\"schema\":\"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"},\"item\":[{\"name\":\"A simple GET request\",\"event\":[{\"listen\":\"test\",\"script\":{\"type\":\"text/javascript\",\"exec\":[\"tests['response code is 200'] = (responseCode.code === 200);\"]}}],\"request\":{\"url\":\"https://postman-echo.com/get?source=newman-sample-github-collection\",\"method\":\"GET\",\"header\":[],\"body\":{\"mode\":\"raw\",\"raw\":\"\"}},\"response\":[]},{\"name\":\"A simple POST request\",\"request\":{\"url\":\"https://postman-echo.com/post\",\"method\":\"POST\",\"header\":[{\"key\":\"Content-Type\",\"value\":\"text/plain\",\"description\":\"\"}],\"body\":{\"mode\":\"raw\",\"raw\":\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\"}},\"response\":[]},{\"name\":\"A simple POST request with JSON body\",\"request\":{\"url\":\"https://postman-echo.com/post\",\"method\":\"POST\",\"header\":[{\"key\":\"Content-Type\",\"value\":\"application/json\",\"description\":\"\"}],\"body\":{\"mode\":\"raw\",\"raw\":\"{\\\"text\\\":\\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\"}\"}},\"response\":[]}]}",
							"time": "920",
							"updatedAt": "2017-09-20T14:12:46.000Z",
							"version": null
						}
					],
					"tests": "",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/transform/collection?from=1&to=2"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "normal",
					"data": [],
					"dataMode": "params",
					"description": "Using this endpoint one can configure how long it takes for the server to come back with a response. Appending a number to the URL defines the time (in seconds) the server will wait before responding.\n\nNote that a maximum delay of 10 seconds is accepted by the server.",
					"descriptionFormat": null,
					"folder": "acfa1751-98cb-846f-3eb1-0e292ba8fb19",
					"headerData": [],
					"headers": "",
					"helperAttributes": "{}",
					"id": "eb9c9742-1ea0-048b-db8c-c55122df815c",
					"lastRevision": 2243698198,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Delay Response",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": null,
					"responses": [
						{
							"cookies": [
								{
									"domain": "echo.getpostman.com",
									"expirationDate": 2147463847,
									"httpOnly": true,
									"name": "sails.sid",
									"path": "/",
									"secure": false,
									"url": "https://echo.getpostman.com/delay/3",
									"value": "s%3AYjUiFBtGiJVL2a-qzZQZ1DFlAMhgXN9O.WaAjRUV0OteZxwmhbNibuB7VKse068JJIh6PwLQUKmQ"
								}
							],
							"createdAt": "2017-09-20T14:12:45.000Z",
							"headers": [
								{
									"description": "",
									"key": "Access-Control-Allow-Credentials",
									"name": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Headers",
									"name": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Methods",
									"name": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Origin",
									"name": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Expose-Headers",
									"name": "Access-Control-Expose-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Length",
									"name": "Content-Length",
									"value": "13"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Mon, 02 Jan 2017 09:19:03 GMT"
								},
								{
									"description": "",
									"key": "ETag",
									"name": "ETag",
									"value": "W/\"d-t/L/D5c0SDl+MoXtKdSVOg\""
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Vary",
									"name": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"id": "f4bc805c-8c82-bfaf-7833-409d2769e4d5",
							"language": "json",
							"lastRevision": 2243698767,
							"lastUpdatedBy": "2799045",
							"mime": "",
							"name": "success-response",
							"owner": "2799045",
							"previewType": "text",
							"rawDataType": null,
							"request": "0189572f-509e-efe0-686d-eed4b3d2f1f0",
							"requestObject": "{\"url\":\"https://echo.getpostman.com/delay/3\",\"headers\":[],\"data\":[],\"method\":\"GET\",\"dataMode\":\"params\"}",
							"responseCode": {
								"code": 200,
								"fromServer": true,
								"name": "OK"
							},
							"searchResultScrolledTo": "-1",
							"state": {
								"size": "normal"
							},
							"status": "",
							"text": "{\"delay\":\"3\"}",
							"time": "4769",
							"updatedAt": "2017-09-20T14:12:46.000Z",
							"version": null
						}
					],
					"tests": "var responseJSON;\ntry { \n    responseJSON = JSON.parse(responseBody); \n    tests[\"response body has key delay\"] = 'delay' in responseJSON;\n}\ncatch (e) { }\ntests[\"response code is 200\"] = responseCode.code === 200;\n",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/delay/3"
				},
				{
					"collection": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collectionId": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"collection_id": "34b3281f-fe3c-238b-559f-f47e6ab37d40",
					"createdAt": "2017-09-20T14:12:40.000Z",
					"currentHelper": "basicAuth",
					"data": [],
					"dataMode": "params",
					"description": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
					"descriptionFormat": null,
					"folder": "c1a0544f-18e9-be2a-0268-d2e100c8e6bb",
					"headerData": [],
					"headers": "Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==\n",
					"helperAttributes": "{\"id\":\"basic\",\"username\":\"postman\",\"password\":\"password\",\"saveToRequest\":true}",
					"id": "f7d095aa-7a60-ef92-1979-af0dcf227e38",
					"lastRevision": 2243698172,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Basic Auth",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": [],
					"preRequestScript": "",
					"queryParams": [],
					"rawModeData": null,
					"responses": [
						{
							"cookies": [],
							"createdAt": "2017-09-20T14:12:45.000Z",
							"headers": [
								{
									"description": "",
									"key": "Access-Control-Allow-Credentials",
									"name": "Access-Control-Allow-Credentials",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Headers",
									"name": "Access-Control-Allow-Headers",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Methods",
									"name": "Access-Control-Allow-Methods",
									"value": ""
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Origin",
									"name": "Access-Control-Allow-Origin",
									"value": ""
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Encoding",
									"name": "Content-Encoding",
									"value": "gzip"
								},
								{
									"description": "",
									"key": "Content-Length",
									"name": "Content-Length",
									"value": "42"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Sat, 31 Oct 2015 06:38:25 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.6.2"
								},
								{
									"description": "",
									"key": "Vary",
									"name": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "Sails <sailsjs.org>"
								}
							],
							"id": "84d1c153-139f-831b-d2ba-cc091ea349fd",
							"language": "javascript",
							"lastRevision": 2243698756,
							"lastUpdatedBy": "2799045",
							"mime": "",
							"name": "200",
							"owner": "2799045",
							"previewType": "html",
							"rawDataType": "text",
							"request": "42c867ca-e72b-3307-169b-26a478b00641",
							"requestObject": "\"ef90671a-ab14-16f5-0a57-41b32fc2a36f\"",
							"responseCode": {
								"code": 200,
								"name": "OK"
							},
							"searchResultScrolledTo": "-1",
							"state": {
								"size": "normal"
							},
							"status": "",
							"text": "{\"authenticated\":true}",
							"time": "377",
							"updatedAt": "2017-09-20T14:12:46.000Z",
							"version": null
						}
					],
					"tests": "tests[\"response code is 200\"] = responseCode.code === 200;\ntests[\"Body contains authenticated\"] = responseBody.has(\"authenticated\");",
					"updatedAt": "2017-09-20T14:12:42.000Z",
					"url": "https://postman-echo.com/basic-auth"
				}
			]
		},
		{
			"id": "badd424a-4d87-7aad-e481-8e3d70696495",
			"name": "API BANK",
			"description": "",
			"order": [],
			"folders": [
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508750806850,
					"description": "",
					"folder": "84d40008-d43c-9186-5b18-d6a7e1780624",
					"folders_order": [
						"b077f8d1-287f-6083-3889-d4b758aad393",
						"fb3d5703-18e8-c80c-6ce1-bea5f9c03358"
					],
					"id": "e418396e-a8ed-b055-f625-79b977628dc2",
					"name": "Activate parking",
					"order": [],
					"owner": "2799045",
					"updatedAt": 1508750806850
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": "2017-10-05T12:07:15.000Z",
					"description": "",
					"folder": null,
					"folders_order": [
						"51e91541-ca89-4d26-063e-1d8ea7d17016",
						"9544fdbe-39bb-c5f9-d51e-b17b61dc01f6",
						"47ebf51e-45a5-f8bc-2d25-e6c0c3af478b",
						"89b37953-9d93-6c29-d199-ce0edab49b03"
					],
					"id": "2112a372-133a-b50d-c3d2-bea819f8ea1d",
					"lastRevision": 2382983379,
					"lastUpdatedBy": "2799045",
					"name": "Auth",
					"order": [],
					"owner": "2799045",
					"updatedAt": "2017-10-13T14:03:57.000Z"
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508769873826,
					"description": "",
					"folder": "77ff9306-2d00-dd4d-6f06-aa97e1ac9e2d",
					"folders_order": [],
					"id": "c31299ec-c92e-acd2-8aa0-27f3bc9e96a2",
					"name": "Cancel completed parking",
					"order": [
						"1ba39de8-1661-8c5f-3ee9-e68b230a1319",
						"dad1060d-327a-75e5-125b-8e11ba98d382"
					],
					"owner": "2799045",
					"updatedAt": 1508769873826
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508766832726,
					"description": "",
					"folder": "84d40008-d43c-9186-5b18-d6a7e1780624",
					"folders_order": [
						"cb444ff7-63a7-dc2c-a414-059f6cda9517",
						"c967bb3a-a551-f9ba-a9ca-4d3388f44dd7",
						"c31299ec-c92e-acd2-8aa0-27f3bc9e96a2"
					],
					"id": "77ff9306-2d00-dd4d-6f06-aa97e1ac9e2d",
					"name": "Cancel parking",
					"order": [],
					"owner": "2799045",
					"updatedAt": 1508766832726
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508769540590,
					"description": "",
					"folder": "77ff9306-2d00-dd4d-6f06-aa97e1ac9e2d",
					"folders_order": [],
					"id": "cb444ff7-63a7-dc2c-a414-059f6cda9517",
					"name": "Cancel parking and check status",
					"order": [
						"d20fbe80-81de-94dc-b248-0dcc8134e3f2",
						"928bda59-d03f-5330-d898-25841a51e8d7",
						"9f2725c7-c163-b569-a750-d3616df38595"
					],
					"owner": "2799045",
					"updatedAt": 1508769540590
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508769820130,
					"description": "",
					"folder": "77ff9306-2d00-dd4d-6f06-aa97e1ac9e2d",
					"folders_order": [],
					"id": "c967bb3a-a551-f9ba-a9ca-4d3388f44dd7",
					"name": "Cancel parking with non existing id",
					"order": [
						"9246ccf7-bad3-54db-146c-a1621a210866"
					],
					"owner": "2799045",
					"updatedAt": 1508769820130
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508748261446,
					"description": "",
					"folder": "cb651d0f-29fa-762e-013a-9190e2423821",
					"folders_order": [],
					"id": "25914d01-75be-f28c-5748-355b3e8f5d35",
					"name": "Change password",
					"order": [
						"792605d2-ed37-5d3b-6516-db606fa871d4"
					],
					"owner": "2799045",
					"updatedAt": 1508748261446
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508773558548,
					"description": "",
					"folder": "3e218b38-36cc-02b2-1462-5a7bc7f17f47",
					"folders_order": [
						"25914d01-75be-f28c-5748-355b3e8f5d35",
						"fea9c03e-0bae-0589-33ae-1863b08932ef"
					],
					"id": "cb651d0f-29fa-762e-013a-9190e2423821",
					"name": "Change password",
					"order": [],
					"owner": "2799045",
					"updatedAt": 1508773558548
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508748261446,
					"description": "",
					"folder": "cb651d0f-29fa-762e-013a-9190e2423821",
					"folders_order": [],
					"id": "fea9c03e-0bae-0589-33ae-1863b08932ef",
					"name": "Change password negative",
					"order": [
						"d223915f-7f71-ee73-80cf-7b406e1adf8c",
						"b321c391-f6aa-d993-4a0e-687b88ae6f1a"
					],
					"owner": "2799045",
					"updatedAt": 1508748261446
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508769583005,
					"description": "",
					"folder": "84d40008-d43c-9186-5b18-d6a7e1780624",
					"folders_order": [
						"6343512c-c4d0-43df-44de-b9d2450d6700",
						"19866ee6-347d-b29c-eb51-43947ed7fd1e"
					],
					"id": "256c6a83-22ef-ee5e-1b02-bfb9608b7a5f",
					"name": "Create",
					"order": [],
					"owner": "2799045",
					"updatedAt": 1508769583005
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508579567751,
					"description": "",
					"folder": "256c6a83-22ef-ee5e-1b02-bfb9608b7a5f",
					"folders_order": [],
					"id": "19866ee6-347d-b29c-eb51-43947ed7fd1e",
					"name": "Create parking with non-zero balance",
					"order": [
						"e8fa80c1-5140-1233-4e0d-a6aaf984c697",
						"0465fcc3-4722-3c31-2d7e-ca3e71bdd2fe",
						"eecc3e38-f18b-8cc7-13ab-a06046f31481",
						"33be0c2d-fb86-dbcd-b403-888af78d48ec"
					],
					"owner": "2799045",
					"updatedAt": 1508579567751
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508579220980,
					"description": "",
					"folder": "256c6a83-22ef-ee5e-1b02-bfb9608b7a5f",
					"folders_order": [],
					"id": "6343512c-c4d0-43df-44de-b9d2450d6700",
					"name": "Create parking zero balance",
					"order": [
						"4858a78a-a16c-e7c3-a280-a2eb8ac5d4f7",
						"e5a920ed-2e2b-be1d-18dc-a7fa3b9a2fbe",
						"bbe0058f-92a6-d5e5-0bb9-d400fa7d5a2d"
					],
					"owner": "2799045",
					"updatedAt": 1508579220980
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": "2017-10-09T07:03:19.000Z",
					"description": "",
					"folder": null,
					"folders_order": [],
					"id": "050e73cc-6f0f-03c7-488b-32678d3833ae",
					"lastRevision": 2382570205,
					"lastUpdatedBy": "2799045",
					"name": "Dashboard",
					"order": [
						"68118733-931b-dd5a-b70e-50e6e7ab32aa",
						"99daf49c-feb8-32e6-37cd-3d8b256f26eb"
					],
					"owner": "2799045",
					"updatedAt": "2017-10-13T13:05:14.000Z"
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508773532820,
					"description": "",
					"folder": "3e218b38-36cc-02b2-1462-5a7bc7f17f47",
					"folders_order": [
						"ec373b33-e457-13cc-5dc9-2d35de1345a1",
						"c454b2fa-f7b4-5060-981c-c88262953343"
					],
					"id": "bb5c209d-5c73-fbaf-01b3-fdd3b6f13250",
					"name": "Email notification",
					"order": [],
					"owner": "2799045",
					"updatedAt": 1508773532820
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1507532655701,
					"description": "",
					"folders_order": [],
					"id": "ef73973c-6934-27bc-10df-2ca0804e848d",
					"name": "Notifications",
					"order": [
						"198d9c49-9966-44f5-4966-681007e740a0"
					],
					"owner": "2799045",
					"updatedAt": 1507532655701
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": "2017-10-09T07:03:40.000Z",
					"description": "",
					"folder": null,
					"folders_order": [
						"256c6a83-22ef-ee5e-1b02-bfb9608b7a5f",
						"77ff9306-2d00-dd4d-6f06-aa97e1ac9e2d",
						"e418396e-a8ed-b055-f625-79b977628dc2",
						"197be35c-ab9b-9777-b1ba-ebd8c6153e46",
						"5250a378-d7b0-07a8-5f91-25d69e5ee657"
					],
					"id": "84d40008-d43c-9186-5b18-d6a7e1780624",
					"lastRevision": 2382705129,
					"lastUpdatedBy": "2799045",
					"name": "Parkings",
					"order": [],
					"owner": "2799045",
					"updatedAt": "2017-10-13T13:24:28.000Z"
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1507532642203,
					"description": "",
					"folders_order": [],
					"id": "6ee346e5-1558-6b87-e870-cb277a23ae29",
					"name": "Payouts",
					"order": [
						"1a359719-4970-497e-8007-6763ff30c34f"
					],
					"owner": "2799045",
					"updatedAt": 1507532642203
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508748106457,
					"description": "",
					"folder": "2112a372-133a-b50d-c3d2-bea819f8ea1d",
					"folders_order": [],
					"id": "89b37953-9d93-6c29-d199-ce0edab49b03",
					"name": "Recovery pass and sign-in",
					"order": [
						"a3838240-af87-aec4-5e2f-5f025a0a1e42",
						"cf9c4145-654b-12d9-ba90-7cbce4c7a4ae",
						"26c77afa-efee-37cc-98b0-e36b60c69f25"
					],
					"owner": "2799045",
					"updatedAt": 1508748106457
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": "2017-10-09T07:04:46.000Z",
					"description": "",
					"folder": null,
					"folders_order": [
						"bb5c209d-5c73-fbaf-01b3-fdd3b6f13250",
						"cb651d0f-29fa-762e-013a-9190e2423821"
					],
					"id": "3e218b38-36cc-02b2-1462-5a7bc7f17f47",
					"lastRevision": 2383651661,
					"lastUpdatedBy": "2799045",
					"name": "Settings",
					"order": [],
					"owner": "2799045",
					"updatedAt": "2017-10-13T15:52:13.000Z"
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508751027440,
					"description": "",
					"folders_order": [],
					"id": "cb502daf-9802-1361-a48f-4379ee2c367c",
					"name": "Sign-out",
					"order": [
						"1fdf593a-7d71-651e-972b-21e2f29b1029",
						"7cf6aab0-51ce-e763-d832-3788acf15f1b"
					],
					"owner": "2799045",
					"updatedAt": 1508751027440
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508743385900,
					"description": "",
					"folder": "2112a372-133a-b50d-c3d2-bea819f8ea1d",
					"folders_order": [],
					"id": "51e91541-ca89-4d26-063e-1d8ea7d17016",
					"name": "Sign-up XD4 (test_user)",
					"order": [
						"c01aafa7-8c56-6cde-053b-d3d7bd4e7d4c"
					],
					"owner": "2799045",
					"updatedAt": 1508743385900
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508743385900,
					"description": "",
					"folder": "2112a372-133a-b50d-c3d2-bea819f8ea1d",
					"folders_order": [],
					"id": "9544fdbe-39bb-c5f9-d51e-b17b61dc01f6",
					"name": "Sign-up XGP (user_zero)",
					"order": [
						"e105e483-6183-0046-6758-625f7f0db571"
					],
					"owner": "2799045",
					"updatedAt": 1508743385900
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508743464608,
					"description": "",
					"folder": "2112a372-133a-b50d-c3d2-bea819f8ea1d",
					"folders_order": [],
					"id": "47ebf51e-45a5-f8bc-2d25-e6c0c3af478b",
					"name": "Sign-up negative",
					"order": [
						"102b3fee-b940-0d5a-9198-7e38ae275763",
						"c1286c76-ebad-74bd-c56f-97cabb57c51d",
						"cffcaf7d-4724-6a89-dbe4-4777ada056bd"
					],
					"owner": "2799045",
					"updatedAt": 1508743464608
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508579304697,
					"description": "",
					"folder": "bb5c209d-5c73-fbaf-01b3-fdd3b6f13250",
					"folders_order": [],
					"id": "ec373b33-e457-13cc-5dc9-2d35de1345a1",
					"name": "Subscribe (positive/negative)",
					"order": [
						"d24fc5f9-aa9a-cfcb-026f-d8d5f4c2d88f",
						"ad451852-1d8b-decb-9093-b5d2acbe7e8b",
						"ab8bbc10-e477-82bc-b962-acdac9708e53"
					],
					"owner": "2799045",
					"updatedAt": 1508579304697
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1507532664474,
					"description": "",
					"folders_order": [
						"c98ae469-1f4f-d05c-67e9-7625dccb7b26"
					],
					"id": "b9bbe160-8b91-2c06-bf83-7b6f6cc4f7f1",
					"name": "Support",
					"order": [],
					"owner": "2799045",
					"updatedAt": 1507532664474
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508854447673,
					"description": "",
					"folder": "e418396e-a8ed-b055-f625-79b977628dc2",
					"folders_order": [],
					"id": "b077f8d1-287f-6083-3889-d4b758aad393",
					"name": "Try to activate canceled parking",
					"order": [
						"c8106f78-0600-5237-f72b-9f89ea84bbbe",
						"6c9f144b-e46f-513e-64dc-b369e888eb2c",
						"0cd792b9-9b4e-9e3d-69dd-ce9feffabdcd"
					],
					"owner": "2799045",
					"updatedAt": 1508854447673
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508854532920,
					"description": "",
					"folder": "e418396e-a8ed-b055-f625-79b977628dc2",
					"folders_order": [],
					"id": "fb3d5703-18e8-c80c-6ce1-bea5f9c03358",
					"name": "Try to activate pending parking",
					"order": [
						"91ee4b72-0e89-c6dd-01e9-2f435d507784"
					],
					"owner": "2799045",
					"updatedAt": 1508854532920
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508579369071,
					"description": "",
					"folder": "bb5c209d-5c73-fbaf-01b3-fdd3b6f13250",
					"folders_order": [],
					"id": "c454b2fa-f7b4-5060-981c-c88262953343",
					"name": "Unsubscribe (positive/negative)",
					"order": [
						"28b60426-19eb-7a56-64a0-cf2cc35c27a0",
						"906f1c81-c05e-cb92-43db-84efdcb67182"
					],
					"owner": "2799045",
					"updatedAt": 1508579369071
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508598852132,
					"description": "",
					"folder": "84d40008-d43c-9186-5b18-d6a7e1780624",
					"folders_order": [],
					"id": "197be35c-ab9b-9777-b1ba-ebd8c6153e46",
					"name": "Verify parking balance",
					"order": [
						"614c2bcb-aea1-d2c3-cbac-2085ff587653",
						"844d10e4-1ee6-8849-3a11-51c35655519b",
						"15530c47-a220-7f0b-27c5-0c4481e1c1ca"
					],
					"owner": "2799045",
					"updatedAt": 1508598852132
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508774189526,
					"description": "",
					"folder": "84d40008-d43c-9186-5b18-d6a7e1780624",
					"folders_order": [],
					"id": "5250a378-d7b0-07a8-5f91-25d69e5ee657",
					"name": "Verify parking count",
					"order": [
						"a216b3df-c0c0-4b9c-b15a-47e2d5a32126",
						"a446b8a5-0951-8ac6-2d39-1f4209748a55"
					],
					"owner": "2799045",
					"updatedAt": 1508774189526
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": 1508929993346,
					"description": "",
					"folder": "b9bbe160-8b91-2c06-bf83-7b6f6cc4f7f1",
					"folders_order": [],
					"id": "c98ae469-1f4f-d05c-67e9-7625dccb7b26",
					"name": "Create, get history, write message",
					"order": [
						"e30dfb16-b71f-91fe-de29-4e0deda32ccd",
						"e955e41e-9348-be56-760e-9466e3f69cd9",
						"d1b41ef5-1e45-f893-5b01-277318a4293b"
					],
					"owner": "2799045",
					"updatedAt": 1508929993346
				}
			],
			"folders_order": [
				"2112a372-133a-b50d-c3d2-bea819f8ea1d",
				"84d40008-d43c-9186-5b18-d6a7e1780624",
				"6ee346e5-1558-6b87-e870-cb277a23ae29",
				"050e73cc-6f0f-03c7-488b-32678d3833ae",
				"ef73973c-6934-27bc-10df-2ca0804e848d",
				"b9bbe160-8b91-2c06-bf83-7b6f6cc4f7f1",
				"3e218b38-36cc-02b2-1462-5a7bc7f17f47",
				"cb502daf-9802-1361-a48f-4379ee2c367c"
			],
			"timestamp": 1507201887373,
			"synced": true,
			"remote_id": "0",
			"owner": "2799045",
			"sharedWithTeam": false,
			"subscribed": false,
			"remoteLink": null,
			"remoteLinkUpdatedAt": null,
			"public": false,
			"createdAt": 1509356294656,
			"updatedAt": 1509356294656,
			"write": true,
			"published": false,
			"favorite": true,
			"permissions": {},
			"syncedPermissions": {},
			"requests": [
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n    \"name\":\"15 min\",\n    \"rate\":\"0,08\",\n    \"period\":\"900\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "19866ee6-347d-b29c-eb51-43947ed7fd1e",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": {},
					"id": "0465fcc3-4722-3c31-2d7e-ca3e71bdd2fe",
					"isFromCollection": true,
					"method": "GET",
					"name": "Get list parking type and add to variable",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": "var park_type_id = JSON.parse(responseBody)[0].id;\n    postman.setEnvironmentVariable(\"park_type_id\", park_type_id);\nvar park_type_rate = JSON.parse(responseBody)[0].rate;\n    postman.setEnvironmentVariable(\"park_type_rate\", park_type_rate);",
					"time": 1508585199512,
					"url": "{{url}}/finance/parking/type"
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "b077f8d1-287f-6083-3889-d4b758aad393",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "0cd792b9-9b4e-9e3d-69dd-ce9feffabdcd",
					"method": "GET",
					"name": "Get list parking and check activated parking status",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": "var data = JSON.parse(responseBody)[0];\n\ntests[\"Response has activated parking id \" +data.id+\" with status 'active'\"] = \n    data.id == pm.environment.get(\"canceled_parking_id\") &&\n    data.status == \"active\";\n\npm.environment.set(\"activated_parking_id\", pm.environment.get(\"canceled_parking_id\"));",
					"time": 1508945862311,
					"url": "{{url}}/finance/parking/status/"
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n  \"address\":\"{{wallet}}\",\n  \"password\":\"{{pass}}\",\n  \"repeatPassword\":\"{{repeat_pass}}\",\n  \"word\":\"{{word}}\",\n  \"sign\":\"{{sign}}\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "47ebf51e-45a5-f8bc-2d25-e6c0c3af478b",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Content-Type: application/json\n//Access-Token: {{h.token}}\n//Token-Type: {{h.tokenType}}\n//Userid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "102b3fee-b940-0d5a-9198-7e38ae275763",
					"method": "POST",
					"name": "Sign-up with existing (registered) address",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": "",
					"queryParams": [],
					"responses": [],
					"tests": "var address =JSON.parse(responseBody)[0].message;\n\n//Try to Sign-up with existing (registered) address and Response Status 422\ntests[\"Sign-up with existing address not possible\"] = responseCode.code === 422 && address === 'Address \"XD4wkmsh6VB2J12zrRZS5SGYjQdWfVMvAz\" has already been taken.';",
					"time": 1508747316530,
					"url": "{{url}}/user/aaa/register"
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "197be35c-ab9b-9777-b1ba-ebd8c6153e46",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "15530c47-a220-7f0b-27c5-0c4481e1c1ca",
					"isLastRequest": true,
					"method": "GET",
					"name": "Parking balance verify with total parking amount ",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": "var data = JSON.parse(responseBody);\n    pm.environment.set(\"parking_balance\", data.balance);\nvar summ_total_parking = \n    parseFloat(pm.environment.get(\"total_parking_amount\")) + \n    parseFloat(pm.environment.get(\"total_parking_amount2\"));\npm.environment.set(\"summ_total_parking_amount\", summ_total_parking.toFixed(8));\n\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Parking balance is equal total parking amount\"] = \n    pm.environment.get(\"parking_balance\") === pm.environment.get(\"total_parking_amount\") ||\n    pm.environment.get(\"parking_balance\") === pm.environment.get(\"summ_total_parking_amount\");",
					"time": 1508608798278,
					"url": "{{url}}/finance/parking/balance"
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "ef73973c-6934-27bc-10df-2ca0804e848d",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "198d9c49-9966-44f5-4966-681007e740a0",
					"method": "GET",
					"name": "User notification",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": "var data = JSON.parse(responseBody);\nvar count = -1;\n    for (var i in data) {\n    count++;\n}\npm.environment.set(\"last_notifications\", count);\n\n\ntests[\"Body not empty and 'status code is 200'\"] = \n    responseCode.code === 200 &&\n    data !== null;\n",
					"time": 1508949039329,
					"url": "{{url}}/notification/user",
					"version": 2
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": "2017-10-09T08:01:59.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"descriptionFormat": "html",
					"folder": "6ee346e5-1558-6b87-e870-cb277a23ae29",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": "{}",
					"id": "1a359719-4970-497e-8007-6763ff30c34f",
					"lastRevision": 2382730230,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Transaction completed",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
					"time": 1507536118436,
					"updatedAt": "2017-10-13T13:27:56.000Z",
					"url": "{{url}}/finance/transaction/status/completed",
					"version": 2
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "c31299ec-c92e-acd2-8aa0-27f3bc9e96a2",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "1ba39de8-1661-8c5f-3ee9-e68b230a1319",
					"method": "GET",
					"name": "Get parking completed",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"tests": "var data = JSON.parse(responseBody)[0];\n\nconsole.log(data);\n\ntests[\"Get parking completed verify status and 'status code is 200'\"] = \n    responseCode.code === 200 &&\n    data.status === \"completed\";\n    pm.environment.set(\"last_comleted\", data.status);\n",
					"time": 1508945542410,
					"url": "{{url}}/finance/parking/status/completed"
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": [],
					"dataMode": "params",
					"description": "Generated from a curl request: \ncurl 'http://192.168.0.111:3031/user/aaa/sign-out' -X POST -H 'Origin: http://192.168.0.111:3040' -H 'Accept-Encoding: gzip, deflate' -H 'Accept-Language: en-US,en;q=0.8,ru;q=0.6' -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36' -H 'Accept: application/json, text/plain, */*' -H 'access-token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1c2VySWQiOjIsImFkZHJlc3MiOiJYRDR3a21zaDZWQjJKMTJ6clJaUzVTR1lqUWRXZlZNdkF6IiwiaXAiOiIxOTIuMTY4LjAuMjYiLCJ1c2VyQWdlbnQiOiJNb3ppbGxhXC81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXRcLzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZVwvNjEuMC4zMTYzLjEwMCBTYWZhcmlcLzUzNy4zNiIsInNlc3Npb25UaW1lIjozNjAwLCJkYXRlQ3JlYXRlZCI6MTUwNzIwNDg2MiwiZGF0ZUNsb3NlZCI6MTUwNzIwODU0Nn0.NAdTBdUJKMJ-j0HUJOoRUn5rty9XsgXgEyAAfBYYMuil8mr0-Tmr7CnXbxX5sxsQUZzjridUykUQsXqhiBvFyakAz_5G890NWK8xnYXo9MgZh1b1GIXnKhq3PRXh37Ho3FXTL1BOCWW9JImZQlq5yONqjuwzrSigs7mT8U3mRGS4BFaMjwGPp67VHA9dzBHN7NtkjjVFc7__hwmLJAXv75EuzOd0fFZ2AH9SZFqRwyXynnX0IBM8Q1Yks48v5y-_RsxPosKw-GD6L5L_6eBB7Oa3GxGDfnkQo8SwXnt9H-XeEvxFnoNr5R-f6te7-ro4RQbaI3VDTf_liqCADDpFQXVF5XZNaxjNWycLsOvm0c6Iu3At6yWg24MU7sWwxsHBsG6o42dgcpKW3mBDZHOkblQ0twc_dg5V8ib55C2I6-613Y4iYNwqz4Nds9A88_iYObdT9TCmvMQCJ-zNnce_aPlrarJW2v5KB4Ui20SWUSWCg3yrrFzSsAvWQuAf07_9VhyBEq5ExaxHuh62On8RrHkJQFxLoaBpkughDxkOGQ_VBy5xl_SYGc0siin6B2OpAx-uSOi4bCqReGuUDYuYSHL6QJ-Tq4EMnW5xDMaZjRnUV7CRSd1x-maeVT4C49bUrx0LxQBVFWpRRE8Q2TZX4xwm9i26lVYErSrWWtnb5w' -H 'Userid: 2' -H 'Referer: http://192.168.0.111:3040/office/parking' -H 'Connection: keep-alive' -H 'token-type: Bearer JWT' -H 'Content-Length: 0' -H 'DNT: 1' --compressed",
					"folder": "cb502daf-9802-1361-a48f-4379ee2c367c",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Access-token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Token-Type: {{h.tokenType}}\nAccess-token: {{h.token}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "1fdf593a-7d71-651e-972b-21e2f29b1029",
					"isFromCollection": true,
					"method": "POST",
					"name": "Sign-out with valid token",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": "",
					"queryParams": [],
					"responses": [],
					"tests": "var data = JSON.parse(responseBody);\n\ntests[\"Sign_out with valid token (status code is 200 and response has \" + data.success] = responseCode.code === 200 && data.success === true;",
					"time": 1508577417767,
					"url": "{{url}}/user/aaa/sign-out",
					"version": 2
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n  \"address\":\"{{wallet}}\",\n  \"password\":\"{{pass}}\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "89b37953-9d93-6c29-d199-ce0edab49b03",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Token",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Content-Type: application/json\n//Access-Token: {{h.token}}\n//Token: {{h.tokenType}}\n//Userid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "26c77afa-efee-37cc-98b0-e36b60c69f25",
					"method": "POST",
					"name": "Sign-in",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": "",
					"queryParams": [],
					"responses": [],
					"tests": "var tokenType = postman.getResponseHeader(\"Token-Type\"); \n    postman.setEnvironmentVariable(\"h.tokenType\", tokenType);\nvar token = postman.getResponseHeader(\"Access-Token\");\n    postman.setEnvironmentVariable(\"h.token\", token); \nvar userid = JSON.parse(responseBody);\n    postman.setEnvironmentVariable(\"h.userid\", userid.data.id);\n\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n",
					"time": 1508839501996,
					"url": "{{url}}/user/aaa/sign-in",
					"version": 2
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\r\n  \"email\": \"testmnx@p33.org\"\r\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "c454b2fa-f7b4-5060-981c-c88262953343",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": "{}",
					"id": "28b60426-19eb-7a56-64a0-cf2cc35c27a0",
					"isFromCollection": true,
					"method": "DELETE",
					"name": "Unsubscribe with existing email",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": "var data = JSON.parse(responseBody);\n\ntests[\"Unsubscribe with existing email (status code is 200 and response has \" + data.success] = responseCode.code === 200 && data.success === true;",
					"time": 1508577214284,
					"timestamp": null,
					"url": "{{url}}/subscriber"
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "19866ee6-347d-b29c-eb51-43947ed7fd1e",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "33be0c2d-fb86-dbcd-b403-888af78d48ec",
					"method": "GET",
					"name": "Find created parking from list",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": "var data = JSON.parse(responseBody)[0];\n\n// Make sure that created parking appear in active parkings list with all valid data\ntests[\"Status code is 200 and last created parking data exist in list and data identical '\"] = \n    responseCode.code === 200 && \n    data.id == pm.environment.get(\"park_last_id\") &&\n    data.typeId == pm.environment.get(\"park_last_type_id\") &&\n    // data.amount == pm.environment.get(\"park_last_amount\") &&\n    data.rate == pm.environment.get(\"park_last_rate\") &&\n    data.status == pm.environment.get(\"park_last_status\") &&\n    data.createdAt == pm.environment.get(\"park_last_create\");\n\n\nconsole.log(data.id, data.typeId, data.rate, data.status, data.createdAt);\n",
					"time": 1508943507015,
					"url": "{{url}}/finance/parking/status/active,pending"
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n  \"address\":\"{{wallet_zero_balance}}\",\n  \"password\":\"{{pass_zero_balance}}\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "6343512c-c4d0-43df-44de-b9d2450d6700",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Token",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Content-Type: application/json\n//Access-Token: {{h.token}}\n//Token: {{h.tokenType}}\n//Userid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "4858a78a-a16c-e7c3-a280-a2eb8ac5d4f7",
					"method": "POST",
					"name": "Sign-in user with zero balance",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": "",
					"queryParams": [],
					"responses": [],
					"tests": "var tokenType = postman.getResponseHeader(\"Token-Type\"); \n    postman.setEnvironmentVariable(\"h.tokenType\", tokenType);\nvar token = postman.getResponseHeader(\"Access-Token\");\n    postman.setEnvironmentVariable(\"h.token\", token); \nvar userid = JSON.parse(responseBody);\n    postman.setEnvironmentVariable(\"h.userid\", userid.data.id);\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\n",
					"time": 1508751497631,
					"url": "{{url}}/user/aaa/sign-in",
					"version": 2
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "197be35c-ab9b-9777-b1ba-ebd8c6153e46",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "614c2bcb-aea1-d2c3-cbac-2085ff587653",
					"method": "GET",
					"name": "Get list parking active/pending & count amount",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": "// Get all amount, sum up their and set to variable\nvar data = JSON.parse(responseBody),\n    total = 0,\n    i;\nfor (i = 0; i < data.length; i++) {  //loop through the array\n    total += parseFloat(data[i].amount);  //Do the math!\n}\npm.environment.set(\"total_parking_amount\", total.toFixed(8));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\n// console.log(total.toFixed(8));  //display the result\n// If count parking more than 20 try next\n\nif (postman.getResponseHeader(\"X-Pagination-Total-Count\")>20){\n    postman.setNextRequest(\"Get list2 parking active/pending & count amount\");\n}\n",
					"time": 1508609455142,
					"url": "{{url}}/finance/parking/status/active,pending"
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "050e73cc-6f0f-03c7-488b-32678d3833ae",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "68118733-931b-dd5a-b70e-50e6e7ab32aa",
					"method": "GET",
					"name": "Verify user balance with API explorer",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": "pm.environment.set(\"minexexplorer_prod_url\", \"https://minexexplorer.com/api/\");\n\nvar getWalletBalanceFromExplorerURL = \n    pm.variables.get(\"minexexplorer_prod_url\") + \"address/\" + pm.variables.get(\"wallet\") + \"/get-balance\";\n\npm.sendRequest(getWalletBalanceFromExplorerURL, function (err, response) {\n    pm.environment.unset(\"wallet_balance_from_explorer\");\n    pm.environment.set(\"wallet_balance_from_explorer\", response.json().balance);\n});\n\n\n",
					"queryParams": [],
					"responses": [],
					"tests": "var data = JSON.parse(responseBody);\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Balance in bank is equal to balance in explorer\"] = data.balance === pm.environment.get(\"wallet_balance_from_explorer\");",
					"time": 1508947012136,
					"url": "{{url}}/finance/balance/user",
					"version": 2
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n\t\"id\":\"{{canceled_parking_id}}\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "b077f8d1-287f-6083-3889-d4b758aad393",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": {},
					"id": "6c9f144b-e46f-513e-64dc-b369e888eb2c",
					"method": "POST",
					"name": "Parking activate",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": "",
					"queryParams": [],
					"responses": [],
					"tests": "tests[\"Try to activate canceled parking - status code is 200\"] = responseCode.code === 200;",
					"time": 1508856727983,
					"url": "{{url}}/finance/parking/activate",
					"version": 2
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n  \"oldPassword\":\"{{pass}}\",\n  \"password\":\"{{new_pass}}\",\n  \"repeatPassword\":\"{{new_pass}}\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "25914d01-75be-f28c-5748-355b3e8f5d35",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Content-Type: application/json\nAccess-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "792605d2-ed37-5d3b-6516-db606fa871d4",
					"method": "POST",
					"name": "Change-password",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": "pm.environment.set(\"new_pass\", \"123456\");\npm.environment.set(\"pass\", pm.environment.get(\"new_pass\"));\n",
					"queryParams": [],
					"responses": [],
					"tests": "tests[\"Change password (status code is 200)\"] = responseCode.code === 200;\n\n\n// // Send POST request Sign-in and check (status-code, body status: ok)\n// pm.test(\"Sign-in with new password (status code is 200)\", function() {   \n//     pm.sendRequest({\n//         url:  pm.environment.get(\"url\")+\"/user/aaa/sign-in\", \n//         method: 'POST',\n//         header: {\n//             'Content-Type': pm.environment.get(\"app/json\"),\n//             'Access-Token': pm.environment.get(\"h.tokenType\"),\n//             'Token': pm.environment.get(\"h.token\")\n//         },\n//         body: {\n//           mode: 'raw',\n//           raw: JSON.stringify({address: pm.environment.get(\"wallet\"), password: pm.environment.get(\"pass\") })\n//         }\n//     }, function (err, res) {\n//     pm.expect(res).to.have.status(200);\n//     });\n// });\n",
					"time": 1508954575574,
					"url": "{{url}}/user/aaa/change-password"
				},
				{
					"id": "7cf6aab0-51ce-e763-d832-3788acf15f1b",
					"headers": "Token-Type: {{h.tokenType}}\nAccess-token: {{h.token}}\nUserid: {{h.userid}}\n",
					"headerData": [
						{
							"key": "Token-Type",
							"value": "{{h.tokenType}}",
							"description": "",
							"enabled": true
						},
						{
							"key": "Access-token",
							"value": "{{h.token}}",
							"description": "",
							"enabled": true
						},
						{
							"key": "Userid",
							"value": "{{h.userid}}",
							"description": "",
							"enabled": true
						}
					],
					"url": "{{url}}/user/aaa/sign-out",
					"folder": "cb502daf-9802-1361-a48f-4379ee2c367c",
					"queryParams": [],
					"preRequestScript": "",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": [],
					"dataMode": "params",
					"version": 2,
					"tests": "var data = JSON.parse(responseBody);\n\ntests[\"Sign_out with expired token (status code is 401 and response has \" + data.name] = responseCode.code === 401 && data.name === \"Unauthorized\";\n\n\n// //clear all variables for next run and set new \"url\", \"http://stage.minexbank.com/api\n// postman.clearEnvironmentVariables();\n// pm.environment.set(\"url\", \"http://stage.minexbank.com/api\");",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1509357305792,
					"name": "Sign-out after Sign-out",
					"description": "",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"responses": []
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "197be35c-ab9b-9777-b1ba-ebd8c6153e46",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "844d10e4-1ee6-8849-3a11-51c35655519b",
					"method": "GET",
					"name": "Get list2 parking active/pending & count amount",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [
						{
							"description": "",
							"enabled": true,
							"equals": true,
							"key": "page",
							"value": "2"
						}
					],
					"responses": [],
					"tests": "// Get all amount, sum up their and set to variable\nvar data = JSON.parse(responseBody),\n    total = 0,\n    i;\nfor (i = 0; i < data.length; i++) {  //loop through the array\n    total += parseFloat(data[i].amount);  //Do the math!\n}\npm.environment.set(\"total_parking_amount2\", total.toFixed(8));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n// console.log(total.toFixed(8));  //display the result\n\n",
					"time": 1508609103440,
					"url": "{{url}}/finance/parking/status/active,pending?page=2"
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\r\n  \"email\": \"testmnx@p33.org\"\r\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "c454b2fa-f7b4-5060-981c-c88262953343",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": {},
					"id": "906f1c81-c05e-cb92-43db-84efdcb67182",
					"isFromCollection": true,
					"method": "DELETE",
					"name": "Unsubscribe from non-existent email",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": "var data = JSON.parse(responseBody);\n\ntests[\"Unsubscribe from non-existent email (status code is 404 and response has \" + data.message] = responseCode.code === 404 && data.message ===\"Subscriber not found\";",
					"time": 1508576785760,
					"url": "{{url}}/subscriber"
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n\t\"id\":\"{{activated_parking_id}}\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "fb3d5703-18e8-c80c-6ce1-bea5f9c03358",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": {},
					"id": "91ee4b72-0e89-c6dd-01e9-2f435d507784",
					"method": "POST",
					"name": "Parking activate with status 'active'",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": "",
					"queryParams": [],
					"responses": [],
					"tests": "var data = JSON.parse(responseBody);\n    \n\ntests[\"Try to activate parking with status 'active' - response body has 'Parking not found'\"] =\n    data.message === \"Parking not found\";\n\ntests[\"Try to activate parking with status 'active' - status code is 404\"] = \n    responseCode.code === 404; \n",
					"time": 1508857978130,
					"url": "{{url}}/finance/parking/activate",
					"version": 2
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n  \"id\":\"10000000\"\n}  ",
					"dataMode": "raw",
					"description": "",
					"folder": "c967bb3a-a551-f9ba-a9ca-4d3388f44dd7",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": {},
					"id": "9246ccf7-bad3-54db-146c-a1621a210866",
					"method": "POST",
					"name": "Cancel parking id 10000",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": "var data = JSON.parse(responseBody);\n\ntests[\"Try to canceled non-existing parking - status code is 404\"] = responseCode.code === 404;\ntests[\"Try to canceled non-existing parking - body has 'Parking not found\"] = data.message ===  \"Parking not found\";",
					"time": 1508944129378,
					"url": "{{url}}/finance/parking/cancel"
				},
				{
					"id": "928bda59-d03f-5330-d898-25841a51e8d7",
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"headerData": [
						{
							"key": "Access-Token",
							"value": "{{h.token}}",
							"description": "",
							"enabled": true
						},
						{
							"key": "Token-Type",
							"value": "{{h.tokenType}}",
							"description": "",
							"enabled": true
						},
						{
							"key": "Userid",
							"value": "{{h.userid}}",
							"description": "",
							"enabled": true
						},
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"enabled": true
						}
					],
					"url": "{{url}}/finance/parking/cancel",
					"folder": "cb444ff7-63a7-dc2c-a414-059f6cda9517",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": "{\n  \"id\":{{park_id}}\n}  ",
					"dataMode": "raw",
					"tests": "var data = JSON.parse(responseBody);\n\ntests[\"Try to canceled last active parking - status code is 200\"] = responseCode.code === 200;\ntests[\"Try to canceled last active parking - body has 'success': true\"] = data.success === true;",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1509364333928,
					"name": "Cancel parking",
					"description": "",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"responses": []
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"createdAt": "2017-10-09T07:14:11.000Z",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"descriptionFormat": "html",
					"folder": "050e73cc-6f0f-03c7-488b-32678d3833ae",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "{{app/json}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: {{app/json}}\n",
					"helperAttributes": "{}",
					"id": "99daf49c-feb8-32e6-37cd-3d8b256f26eb",
					"lastRevision": 2382698360,
					"lastUpdatedBy": "2799045",
					"method": "GET",
					"name": "Parking type",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"rawModeData": null,
					"responses": [],
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
					"time": 1507535473118,
					"updatedAt": "2017-10-13T13:23:32.000Z",
					"url": "{{url}}/finance/parking/type"
				},
				{
					"id": "9f2725c7-c163-b569-a750-d3616df38595",
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"headerData": [
						{
							"key": "Access-Token",
							"value": "{{h.token}}",
							"description": "",
							"enabled": true
						},
						{
							"key": "Token-Type",
							"value": "{{h.tokenType}}",
							"description": "",
							"enabled": true
						},
						{
							"key": "Userid",
							"value": "{{h.userid}}",
							"description": "",
							"enabled": true
						}
					],
					"url": "{{url}}/finance/parking/status/canceled",
					"folder": "cb444ff7-63a7-dc2c-a414-059f6cda9517",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "GET",
					"data": null,
					"dataMode": "params",
					"version": 2,
					"tests": "var check_status = JSON.parse(responseBody)[0];\n// console.log(check_status.id);\n// console.log(check_status.status);\n\ntests[\"Try to verify id last canceled parking (id is equal variable 'park_id')\"] = \n    check_status.id == pm.environment.get(\"park_id\");\n\ntests[\"Try to verify status last canceled parking (status is equal 'canceled')\"] = \n    check_status.status == \"canceled\";\n",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1509358509504,
					"name": "Check status canceled parking",
					"description": "",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"responses": []
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "5250a378-d7b0-07a8-5f91-25d69e5ee657",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "a216b3df-c0c0-4b9c-b15a-47e2d5a32126",
					"method": "GET",
					"name": "Parking status all",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": "var data = JSON.parse(responseBody);\nvar count = 0;\n    for (var i in data) {\n    count++;\n}\n\ntests[\"Get count all parking and 'status code is 200'\"] = \n    responseCode.code === 200;\n    // &&\n    // responseBody.has(\"userId\");\n    // pm.environment.set(\"count_parking\", count);\n        // if(responseCode.code === 401) {\n        // pm.environment.unset(\"count_parking\")}\n",
					"time": 1509111242935,
					"url": "{{url}}/finance/parking/status",
					"version": 2
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n\t\"address\":\"{{wallet}}\",\n\t\"word\":\"{{word}}\",\n\t\"sign\":\"{{sign}}\",\n\t\"scenario\": \"checkAddress\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "89b37953-9d93-6c29-d199-ce0edab49b03",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": {},
					"id": "a3838240-af87-aec4-5e2f-5f025a0a1e42",
					"method": "POST",
					"name": "Get resetToken",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": "var data = JSON.parse(responseBody).resetToken;\n    pm.environment.set(\"resetToken\", data);\n\ntests[\"Try to get token(verify length 'resetToken') and 'status code is 201'\"] = \n    responseCode.code === 200 &&\n    data.length === 32;\n",
					"time": 1508941713972,
					"url": "{{url}}/user/aaa/password-recovery"
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "5250a378-d7b0-07a8-5f91-25d69e5ee657",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "{{app/json}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: {{app/json}}\n",
					"helperAttributes": {},
					"id": "a446b8a5-0951-8ac6-2d39-1f4209748a55",
					"method": "GET",
					"name": "Parking  count",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": "var data = JSON.parse(responseBody);\n\ntests[\"Verify total parking count and 'status code is 200'\"] = \n    responseCode.code === 200;\n    // &&\n    // data.history == pm.environment.get(\"count_parking\");\n",
					"time": 1509111296233,
					"url": "{{url}}/finance/parking/total-count",
					"version": 2
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n  \"email\": \"testmnx@p33.org\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "ec373b33-e457-13cc-5dc9-2d35de1345a1",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": {},
					"id": "ab8bbc10-e477-82bc-b962-acdac9708e53",
					"isFromCollection": true,
					"method": "POST",
					"name": "Subscribe with existing email",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": "var data = JSON.parse(responseBody);\n\ntests[\"Subscribe with existing email (status code is 422 and response has \" + data[0].message] = responseCode.code === 422 && data[0].message === 'Email \"testmnx@p33.org\" has already been taken.';\n",
					"time": 1508523334985,
					"url": "{{url}}/subscriber",
					"version": 2
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n  \"email\": \"testmnx@p33org\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "ec373b33-e457-13cc-5dc9-2d35de1345a1",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": {},
					"id": "ad451852-1d8b-decb-9093-b5d2acbe7e8b",
					"isFromCollection": true,
					"method": "POST",
					"name": "Subscribe with invalid email",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": "var data = JSON.parse(responseBody)[0];\n\ntests[\"Subscribe with invalid email (status code is 422 and response has \" + data.message] = responseCode.code === 422 && data.message===\"Email is not a valid email address.\";",
					"time": 1508522974735,
					"url": "{{url}}/subscriber",
					"version": 2
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n  \"oldPassword\":\"{{pass}}\",\n  \"password\":\"{{new_pass}}\",\n  \"repeatPassword\":\"{{fail_new_pass}}\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "fea9c03e-0bae-0589-33ae-1863b08932ef",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Content-Type: application/json\nAccess-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "b321c391-f6aa-d993-4a0e-687b88ae6f1a",
					"method": "POST",
					"name": "Change-password with different pass and repeat_pass copy",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": "pm.environment.set(\"fail_new_pass\", \"87654321\");\n",
					"queryParams": [],
					"responses": [],
					"tests": "var invalid_repeat_pass = JSON.parse(responseBody);\n\ntests[\"Change password with different password & repeatPassword - status code is 422\"] = responseCode.code === 422 ;\ntests[\"Change password with different password & repeatPassword - Body has succees (false) and message 'Password must be equal to 'Repeat Password.'\"] = \n    invalid_repeat_pass.success === false &&\n    invalid_repeat_pass.inform.password[0] === 'Password must be equal to \"Repeat Password\".';\n",
					"time": 1508750758009,
					"url": "{{url}}/user/aaa/change-password"
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n  \"typeId\":1,\n  \"amount\":100\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "6343512c-c4d0-43df-44de-b9d2450d6700",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": {},
					"id": "bbe0058f-92a6-d5e5-0bb9-d400fa7d5a2d",
					"method": "POST",
					"name": "Create parking with amount  is greater than zero",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": "",
					"queryParams": [],
					"responses": [],
					"tests": "var message = JSON.parse(responseBody)[0].message;\n\ntests[\"Try to create parking with amount is greater than zero and 'status code is 422'\"] = \n    responseCode.code === 422 && \n    message === \"Not enough money to create parking\";",
					"time": 1508942096427,
					"url": "{{url}}/finance/parking"
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n  \"address\":\"{{wallet}}\",\n  \"password\":\"{{pass}}\",\n  \"repeatPassword\":\"{{repeat_pass}}\",\n  \"word\":\"{{word}}\",\n  \"sign\":\"{{sign}}\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "51e91541-ca89-4d26-063e-1d8ea7d17016",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Content-Type: application/json\n//Access-Token: {{h.token}}\n//Token-Type: {{h.tokenType}}\n//Userid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "c01aafa7-8c56-6cde-053b-d3d7bd4e7d4c",
					"method": "POST",
					"name": "Sign-up XD4",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": "pm.environment.set(\"wallet\", \"XD4wkmsh6VB2J12zrRZS5SGYjQdWfVMvAz\");\npm.environment.set(\"pass\", \"123456\");\npm.environment.set(\"repeat_pass\", \"123456\");\npm.environment.set(\"word\", \"minexbank\");\npm.environment.set(\"sign\", \"H+6Ncyg/HPgAzO/Zd9Nh4EOzbTmsTXMzJ33D1NgXTleUbpuAnKr/l3MVjKN+l7/rG9xKbaRUB19gDxlJmLkSryg=\");",
					"queryParams": [],
					"responses": [],
					"tests": "// Try to Sign-up with valid data\nvar data = JSON.parse(responseBody);\n\nif(responseBody.has(\"has already been taken.\")){\n    postman.setNextRequest(\"Sign-up XGP\");\n}\nelse{\ntests[\"Sign-up with all valid data (status code is 200)\"] = responseCode.code === 200;\ntests[\"Sign-up with all valid data (response body has 'status': 'ok')\"] = data.status === \"ok\";\n}",
					"time": 1508950213038,
					"url": "{{url}}/user/aaa/register"
				},
				{
					"id": "c1286c76-ebad-74bd-c56f-97cabb57c51d",
					"headers": "Content-Type: application/json\n//Access-Token: {{h.token}}\n//Token-Type: {{h.tokenType}}\n//Userid: {{h.userid}}\n",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"enabled": true
						},
						{
							"key": "Access-Token",
							"value": "{{h.token}}",
							"description": "",
							"enabled": false
						},
						{
							"key": "Token-Type",
							"value": "{{h.tokenType}}",
							"description": "",
							"enabled": false
						},
						{
							"key": "Userid",
							"value": "{{h.userid}}",
							"description": "",
							"enabled": false
						}
					],
					"url": "{{url}}/user/aaa/register",
					"folder": "47ebf51e-45a5-f8bc-2d25-e6c0c3af478b",
					"queryParams": [],
					"preRequestScript": "pm.environment.set(\"wallet_2\", \"XQS7TkMNybqFHvaVjPkPphzjPf15LAjdFQ\");\npm.environment.set(\"pass_2\", \"qwerty\");\npm.environment.set(\"repeat_pass_2\", \"qwerty1\");\npm.environment.set(\"word_2\", \"minexbank\");\npm.environment.set(\"sign_2\", \"H9hx6pBCJuD9rbfcK8BwzvvTtVP+tdW7BKeLcMioaSf/O/eQn8WP26tKJQ6pJft4mtLxj9ntxQZeIWdAlJgx5UQ=\");",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": "{\n  \"address\":\"{{wallet_2}}\",\n  \"password\":\"{{pass_2}}\",\n  \"repeatPassword\":\"{{repeat_pass_2}}\",\n  \"word\":\"{{word_2}}\",\n  \"sign\":\"{{sign_2}}\"\n}",
					"dataMode": "raw",
					"tests": "var password =JSON.parse(responseBody)[1].message;\n\n// Try to Sign-up with different data in \"password\" and \"repeatPassword\" fields and Response Status 422\ntests[\"Sign-up with different pass & repeat pass not possible\"] = \n    responseCode.code === 422 && \n    password === 'Password must be equal to \"Repeat Password\".';\n\n\n",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1509357052169,
					"name": "Sign-up with different pass & repeat pass",
					"description": "",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"responses": []
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "b077f8d1-287f-6083-3889-d4b758aad393",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "c8106f78-0600-5237-f72b-9f89ea84bbbe",
					"method": "GET",
					"name": "Get last canceled parking",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": "var data = JSON.parse(responseBody)[0];\n    pm.environment.set(\"canceled_parking_id\", data.id);\n\ntests[\"Get last canceled parking - status code is 200\"] = responseCode.code === 200;",
					"time": 1508859542644,
					"url": "{{url}}/finance/parking/status/canceled",
					"version": 2
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n\t\"address\":\"{{wallet}}\",\n\t\"password\":\"{{pass}}\",\n\t\"passwordRepeat\":\"{{repeat_pass}}\",\n\t\"resetToken\":\"{{resetToken}}\",\n\t\"scenario\": \"changePassword\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "89b37953-9d93-6c29-d199-ce0edab49b03",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": {},
					"id": "cf9c4145-654b-12d9-ba90-7cbce4c7a4ae",
					"method": "POST",
					"name": "Recovery password",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": "var data = JSON.parse(responseBody);\n\ntests[\"Status code is 200 and 'success: true'\"] = \n    responseCode.code === 200 &&\n    data.success === true;",
					"time": 1508941736725,
					"url": "{{url}}/user/aaa/password-recovery"
				},
				{
					"id": "cffcaf7d-4724-6a89-dbe4-4777ada056bd",
					"headers": "Content-Type: application/json\n//Access-Token: {{h.token}}\n//Token-Type: {{h.tokenType}}\n//Userid: {{h.userid}}\n",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"enabled": true
						},
						{
							"key": "Access-Token",
							"value": "{{h.token}}",
							"description": "",
							"enabled": false
						},
						{
							"key": "Token-Type",
							"value": "{{h.tokenType}}",
							"description": "",
							"enabled": false
						},
						{
							"key": "Userid",
							"value": "{{h.userid}}",
							"description": "",
							"enabled": false
						}
					],
					"url": "{{url}}/user/aaa/register",
					"folder": "47ebf51e-45a5-f8bc-2d25-e6c0c3af478b",
					"queryParams": [],
					"preRequestScript": "pm.environment.set(\"word_2\", \"minexbank1\");",
					"pathVariables": {},
					"pathVariableData": [],
					"method": "POST",
					"data": "{\n  \"address\":\"{{wallet_2}}\",\n  \"password\":\"{{pass_2}}\",\n  \"repeatPassword\":\"{{pass_2}}\",\n  \"word\":\"{{word_2}}\",\n  \"sign\":\"{{sign_2}}\"\n}",
					"dataMode": "raw",
					"tests": "var data =JSON.parse(responseBody)[1].message;\n\ntests[\"Sign-up with invalid sign not possible and body has  message - Wrong verification signature\"] = \n    responseCode.code === 422 && \n    data === \"Wrong verification signature\";\n\n",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1509357151468,
					"name": "Sign-up with invalid word and sign",
					"description": "",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"responses": []
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n\t\"message\": \"test2222\", \n\t\"chatId\": {{chat_id}}\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "c98ae469-1f4f-d05c-67e9-7625dccb7b26",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": {},
					"id": "d1b41ef5-1e45-f893-5b01-277318a4293b",
					"method": "POST",
					"name": "Create message",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
					"time": 1508939927427,
					"url": "{{url}}/chat/create-message",
					"version": 2
				},
				{
					"id": "d20fbe80-81de-94dc-b248-0dcc8134e3f2",
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"headerData": [
						{
							"key": "Access-Token",
							"value": "{{h.token}}",
							"description": "",
							"enabled": true
						},
						{
							"key": "Token-Type",
							"value": "{{h.tokenType}}",
							"description": "",
							"enabled": true
						},
						{
							"key": "Userid",
							"value": "{{h.userid}}",
							"description": "",
							"enabled": true
						}
					],
					"url": "{{url}}/finance/parking/status/active,pending",
					"folder": "cb444ff7-63a7-dc2c-a414-059f6cda9517",
					"queryParams": [],
					"preRequestScript": null,
					"pathVariables": {},
					"pathVariableData": [],
					"method": "GET",
					"data": null,
					"dataMode": "params",
					"tests": "var active_p = JSON.parse(responseBody);\n    if (active_p[0].status == \"active\") {\n        pm.environment.set(\"park_id\", parseInt(active_p[0].id));\n}\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1509363847203,
					"name": "Get list active parking and set variable",
					"description": "",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"responses": []
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n  \"oldPassword\":\"{{pass_2}}\",\n  \"password\":\"{{new_pass}}\",\n  \"repeatPassword\":\"{{new_pass}}\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "fea9c03e-0bae-0589-33ae-1863b08932ef",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Content-Type: application/json\nAccess-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "d223915f-7f71-ee73-80cf-7b406e1adf8c",
					"method": "POST",
					"name": "Change-password with invalid current pass",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": "",
					"queryParams": [],
					"responses": [],
					"tests": "var oldpass = JSON.parse(responseBody);\n\ntests[\"Try to change password with invalid current password - status code is 422\"] = responseCode.code === 422;\ntests[\"Try to change password with invalid current password - Body has succees (false) and message 'Old password not valid'\"] = \n    oldpass.success === false &&\n    oldpass.inform.oldPassword[0] === \"Old password not valid\";\n",
					"time": 1508750391621,
					"url": "{{url}}/user/aaa/change-password"
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n  \"email\": \"testmnx@p33.org\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "ec373b33-e457-13cc-5dc9-2d35de1345a1",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": "{}",
					"id": "d24fc5f9-aa9a-cfcb-026f-d8d5f4c2d88f",
					"isFromCollection": true,
					"method": "POST",
					"name": "Subscribe with valid email",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": "var data = JSON.parse(responseBody);\n\ntests[\"Subscribe with valid email (status code is 201 and response has \" + data.email] = responseCode.code === 201 && data.email===\"testmnx@p33.org\";",
					"time": 1508522836368,
					"timestamp": null,
					"url": "{{url}}/subscriber",
					"version": 2
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n  \"id\":\"{{last_comleted}}\"\n}  ",
					"dataMode": "raw",
					"description": "",
					"folder": "c31299ec-c92e-acd2-8aa0-27f3bc9e96a2",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": {},
					"id": "dad1060d-327a-75e5-125b-8e11ba98d382",
					"method": "POST",
					"name": "Try to cancel completed parking",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": "var data = JSON.parse(responseBody);\n\ntests[\"Try to canceled completed parking - body has 'Parking not found and 'status code is 404'\"] = \n    responseCode.code === 404 &&\n    data.message ===  \"Parking not found\";\n",
					"time": 1508945720429,
					"url": "{{url}}/finance/parking/cancel"
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n  \"address\":\"{{wallet_zero_balance}}\",\n  \"password\":\"{{pass_zero_balance}}\",\n  \"repeatPassword\":\"{{repeat_pass_zero_balance}}\",\n  \"word\":\"{{word_zero_balance}}\",\n  \"sign\":\"{{sign_zero_balance}}\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "9544fdbe-39bb-c5f9-d51e-b17b61dc01f6",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Content-Type: application/json\n//Access-Token: {{h.token}}\n//Token-Type: {{h.tokenType}}\n//Userid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "e105e483-6183-0046-6758-625f7f0db571",
					"method": "POST",
					"name": "Sign-up XGP",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": "pm.environment.set(\"wallet_zero_balance\", \"XGPU7pYrkvdAPHymcbtkxzZmXSpx8b3MXm\");\npm.environment.set(\"pass_zero_balance\", \"123456\");\npm.environment.set(\"repeat_pass_zero_balance\", \"123456\");\npm.environment.set(\"word_zero_balance\", \"minexbank\");\npm.environment.set(\"sign_zero_balance\", \"IGts54rtethzr1vE3p2dmUrQVgg3t32hVHdVA3yIc0gAUTGVuZ11BSoWpB/hjnuEK26laid/SuwRr3U9LF+rsh0=\");",
					"queryParams": [],
					"responses": [],
					"tests": "// Try to Sign-up with valid data\nvar data = JSON.parse(responseBody);\n\nif(responseBody.has(\"has already been taken.\")){\n    postman.setNextRequest(\"Sign-up with different pass & repeat pass\");\n}\nelse{\ntests[\"Sign-up with all valid data (status code is 200)\"] = responseCode.code === 200;\ntests[\"Sign-up with all valid data (response body has 'status': 'ok')\"] = data.status === \"ok\";\n}",
					"time": 1508950148800,
					"url": "{{url}}/user/aaa/register"
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "c98ae469-1f4f-d05c-67e9-7625dccb7b26",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "{{app/json}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: {{app/json}}\n",
					"helperAttributes": {},
					"id": "e30dfb16-b71f-91fe-de29-4e0deda32ccd",
					"isFromCollection": true,
					"method": "POST",
					"name": "Create chat",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": "var data = JSON.parse(responseBody);\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n    pm.environment.set(\"chat_id\", data.id);",
					"time": 1508928529148,
					"url": "{{url}}/chat/create-chat",
					"version": 2
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n  \"typeId\":1,\n  \"amount\":{{zero_amount}}\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "6343512c-c4d0-43df-44de-b9d2450d6700",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": {},
					"id": "e5a920ed-2e2b-be1d-18dc-a7fa3b9a2fbe",
					"method": "POST",
					"name": "Create parking with zero amount",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": "pm.environment.set(\"zero_amount\", \"0\");",
					"queryParams": [],
					"responses": [],
					"tests": "var data = JSON.parse(responseBody)[0].message;\n\ntests[\"Try to create parking with zero amount - status code is 422\"] = responseCode.code === 422;\ntests[\"Try to create parking with zero amount - message is 'Too small amount'\"] = \n    data = \"To small amount: \"+pm.environment.get(\"zero_amount\");\n\n",
					"time": 1508942009286,
					"url": "{{url}}/finance/parking"
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n  \"address\":\"{{wallet}}\",\n  \"password\":\"{{pass}}\"\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "19866ee6-347d-b29c-eb51-43947ed7fd1e",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Token",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": false,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Content-Type: application/json\n//Access-Token: {{h.token}}\n//Token: {{h.tokenType}}\n//Userid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "e8fa80c1-5140-1233-4e0d-a6aaf984c697",
					"method": "POST",
					"name": "Sign-in (user non-zero balance)",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": "",
					"queryParams": [],
					"responses": [],
					"tests": "var tokenType = postman.getResponseHeader(\"Token-Type\"); \n    postman.setEnvironmentVariable(\"h.tokenType\", tokenType);\nvar token = postman.getResponseHeader(\"Access-Token\");\n    postman.setEnvironmentVariable(\"h.token\", token); \nvar userid = JSON.parse(responseBody);\n    postman.setEnvironmentVariable(\"h.userid\", userid.data.id);\n\n",
					"time": 1508579743212,
					"url": "{{url}}/user/aaa/sign-in",
					"version": 2
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": null,
					"dataMode": "params",
					"description": "",
					"folder": "c98ae469-1f4f-d05c-67e9-7625dccb7b26",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\n",
					"helperAttributes": {},
					"id": "e955e41e-9348-be56-760e-9466e3f69cd9",
					"method": "GET",
					"name": "Get chat-history",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": null,
					"queryParams": [],
					"responses": [],
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
					"time": 1508930084727,
					"url": "{{url}}/chat/chat-history",
					"version": 2
				},
				{
					"collection": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collectionId": "badd424a-4d87-7aad-e481-8e3d70696495",
					"collection_id": "badd424a-4d87-7aad-e481-8e3d70696495",
					"currentHelper": "normal",
					"data": "{\n  \"typeId\":{{park_type_id}},\n  \"rate\":{{park_type_rate}},\n  \"amount\":{{park_amount}}\n}",
					"dataMode": "raw",
					"description": "",
					"folder": "19866ee6-347d-b29c-eb51-43947ed7fd1e",
					"headerData": [
						{
							"description": "",
							"enabled": true,
							"key": "Access-Token",
							"value": "{{h.token}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Token-Type",
							"value": "{{h.tokenType}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Userid",
							"value": "{{h.userid}}"
						},
						{
							"description": "",
							"enabled": true,
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"headers": "Access-Token: {{h.token}}\nToken-Type: {{h.tokenType}}\nUserid: {{h.userid}}\nContent-Type: application/json\n",
					"helperAttributes": {},
					"id": "eecc3e38-f18b-8cc7-13ab-a06046f31481",
					"method": "POST",
					"name": "Create parking, verify sent and recived data",
					"owner": "2799045",
					"pathVariableData": [],
					"pathVariables": {},
					"preRequestScript": "pm.environment.set(\"park_amount\", 0.125);",
					"queryParams": [],
					"responses": [],
					"tests": "var data = JSON.parse(responseBody);\n\ntests[\"Status code is 201 and  parking status is 'active'\"] = \n    responseCode.code === 201 && \n    data.status === \"active\" ;\n\ntests[\"Type id, amount and rate equal to entered in request\"] = \n    pm.environment.get(\"park_type_id\") == data.typeId && \n    pm.environment.get(\"park_type_rate\") == data.rate &&\n    pm.environment.get(\"park_amount\") == data.amount;\n    \n// Save parking id, typeId, amount, rate, status, createdAt and type\npm.environment.set(\"park_last_id\", data.id);\npm.environment.set(\"park_last_type_id\", data.typeId);\npm.environment.set(\"park_last_amount\", data.amount);\npm.environment.set(\"park_last_rate\", data.rate);\npm.environment.set(\"park_last_status\", data.status);\npm.environment.set(\"park_last_create\", data.createdAt);\n",
					"time": 1508954081768,
					"url": "{{url}}/finance/parking"
				}
			]
		}
	],
	"environments": [
		{
			"id": "56553665-04af-263a-84e2-81845b27bac6",
			"name": "LOCAL Explorer",
			"values": [
				{
					"enabled": true,
					"key": "url",
					"value": "192.168.0.113",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "h.tokenType",
					"value": "null",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "h.token",
					"value": "null",
					"type": "text"
				}
			],
			"timestamp": 1509176386047,
			"synced": false
		},
		{
			"id": "a19d97bd-c1f3-fdc4-74d9-6b2992fc509f",
			"name": "LOCAL MinexBank",
			"values": [
				{
					"enabled": true,
					"key": "url",
					"value": "http://192.168.0.111:3031",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "h.tokenType",
					"value": "Bearer JWT",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "h.token",
					"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpZCI6IjVGR2dONkNPSVNMUHNCczI1eThhYy0yN0NjUGVHcTJaIiwidXNlcklkIjo0LCJhZGRyZXNzIjoiWEQ0d2ttc2g2VkIySjEyenJSWlM1U0dZalFkV2ZWTXZBeiIsImlwIjoiMTkyLjE2OC4wLjI2IiwidXNlckFnZW50IjoiTW96aWxsYVwvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0XC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWVcLzYxLjAuMzE2My4xMDAgU2FmYXJpXC81MzcuMzYiLCJzZXNzaW9uVGltZSI6MzYwMCwiZGF0ZUNyZWF0ZWQiOjE1MDgyMjg5NzksImRhdGVDbG9zZWQiOjE1MDgyMzI1Nzl9.G62Tjmw1cN8ElQ3R8qED5yf7f91HufIZUtD-pH5dRBAwtcU7gmL7fhMeLNx_XsRsd-wRuVIuGoUU8M58u82CvEfav8QBV5um64rfn3maCzUuPIorQUpIJJJ0w5QfpQgAOTU788GeCIGdCHilaGxdnTWvXS73s4FIPtFbEef6us4bNPNqy13REBdOKZJ2wfB2yizBthgxeNA97rJChnxvw0-JZklxfZcBD-0a2sGAByEL1R5vRAGgqEIOU45cpQnZxxay6ZTLEjAQU1d07oObdiVqiFhydbFS6sYIBA-7Nwu4wUHw5Z4ILCeG9q9r5ETLemnYa_nTOCwApJL4Q5G2JzukmlXyjuPbasP4wC3nm0ZNAu-sQnOvO9bqWmLOIy9iUTSwXt2wqBWWTU4iJ8qpTzYHLrxHEn-g4WhDmqVZPSH6TVvY1tVhVVHeXn64n9KGmZTym69XAPtuyM0oECpICMs3f8m76kmgjqB-VyCo7y2gXOMXg5Dwwa83DcqEj3FfloQXzaTr9mqoQXmD4F2xIQKqxaU6GsDQ7GDmuX6i-zynhKhZIXQ-E2e_ywlxQTadn0r_nvrYkpjI6tZTI-slcz5-X7-1AvnBHdOcPRvfsQ78BNVBrjzrRGZ3qMa85McGGZt9ic513kAEQ6dFIFybYRLLBEUT2VuiKEFuYYZtzQ",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "h.userid",
					"value": "4",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "balance",
					"value": "1.38581000",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "wallet",
					"value": "\"XD4wkmsh6VB2J12zrRZS5SGYjQdWfVMvAz\"",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "pass",
					"value": "\"123456\"",
					"type": "text"
				}
			],
			"timestamp": 1509176386048,
			"synced": false
		},
		{
			"id": "f336ce03-785b-cbad-2e16-c926eb9cc3a4",
			"name": "PROD MinexBank",
			"values": [
				{
					"enabled": true,
					"key": "url",
					"value": "http://minexbank.com/api",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "app/json",
					"value": "application/json",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "u.email",
					"value": "",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "h.tokenType",
					"value": "Bearer JWT",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "h.token",
					"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpZCI6IjdLcS1qV3Y0eHQ3VEZTQjNnNDdyekpGdFFhclRvRVhnIiwidXNlcklkIjoxMiwiYWRkcmVzcyI6IlhENHdrbXNoNlZCMkoxMnpyUlpTNVNHWWpRZFdmVk12QXoiLCJpcCI6IjE0OC4yNTEuMTU1LjExNiIsInVzZXJBZ2VudCI6IlBvc3RtYW5SdW50aW1lXC82LjQuMCIsInNlc3Npb25UaW1lIjozNjAwLCJkYXRlQ3JlYXRlZCI6MTUwODMzMTg1OSwiZGF0ZUNsb3NlZCI6MTUwODMzNTQ1OX0.Fx6l49-Et6Mk1f9V8jCJpuLp58As4KGVkLwixVgEk7QBzEjX0PWP3NPtELMasEH2d5M3orfGyWU85jUJ35Sq_zu3zvXH9spysxw7ZY-kj-4A6l3ji_zj_lvbYWmn1cot12idJKfRBxnTnh4vmSce3uKNx44FMqcdUhEhCwqDdt7lMl56t2qn3Ey-aGpQez24kQH6QX9Q1aahQtJAVt366A8Ht9x1mD_LGCk7Rrs13OgHQMrpjsKJEOx-BlYsOGoEqPFJhwHExVMJqVKwFQJnh2bw_yBIa8WbUx3rfcyELfoHko7OxEHjTWtTbjfdccza65azsU_ZPhDuPJu0AZVbWjtI5E0MkC81E5Uj_NqL3mg_eTwztuzgcylp8nJxMtkK6WEjZA1ceVzOlP9nmeoUjfu0ujEcQRgQUISto1XB5Ud7Uz45BSP72juFNj9VUCKOlV2NsAAidJZ28fVc-1rc9vICgcKjqHe4rj3sFMkHpxo5RWBOmyzfI8kEYuNLuP2B7AedAz8bKVeQfiwmfPeZlWWKgR92f5grWI6BL7fzKEw_WT8z8FgRHooF6TAflEWk3fl5jdpjkXOPsA9N82chqxJF6vHsBkTZ7ljb6CvUzs4vbAfIJBCJKn9VAdk9dzskr8g-RDaKlxzdMungFbUE2THMtHNw0c-DIumM8Zxh_Q",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "h.userid",
					"value": "12",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "balance",
					"value": "0",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "wallet",
					"value": "XD4wkmsh6VB2J12zrRZS5SGYjQdWfVMvAz",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "pass",
					"value": "123456",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "minexexplorer_prod_url",
					"value": "https://minexexplorer.com/api/",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "wallet_balance_from_explorer",
					"value": "1.39409000",
					"type": "text"
				}
			],
			"team": null,
			"timestamp": 1509176386048
		},
		{
			"id": "f995b09d-e83c-20ec-88d7-2ae4201944d4",
			"name": "PROD Explorer",
			"values": [
				{
					"enabled": true,
					"key": "url",
					"value": "https://minexexplorer.com",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "h.tokenType",
					"value": "null",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "h.token",
					"value": "null",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "minexexplorer_prod_url",
					"value": "https://minexexplorer.com/api/",
					"type": "text"
				}
			],
			"team": null,
			"timestamp": 1509176386048
		},
		{
			"id": "9ccc2aa9-fabd-cf62-5cf5-1bb4dd7a52c3",
			"name": "STAGE MinexBank",
			"values": [
				{
					"enabled": true,
					"key": "url",
					"value": "http://stage.minexbank.com/api",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "wallet",
					"value": "XD4wkmsh6VB2J12zrRZS5SGYjQdWfVMvAz",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "pass",
					"value": "123456",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "repeat_pass",
					"value": "123456",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "word",
					"value": "minexbank",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "sign",
					"value": "H+6Ncyg/HPgAzO/Zd9Nh4EOzbTmsTXMzJ33D1NgXTleUbpuAnKr/l3MVjKN+l7/rG9xKbaRUB19gDxlJmLkSryg=",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "wallet_zero_balance",
					"value": "XGPU7pYrkvdAPHymcbtkxzZmXSpx8b3MXm",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "pass_zero_balance",
					"value": "123456",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "repeat_pass_zero_balance",
					"value": "123456",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "word_zero_balance",
					"value": "minexbank",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "sign_zero_balance",
					"value": "IGts54rtethzr1vE3p2dmUrQVgg3t32hVHdVA3yIc0gAUTGVuZ11BSoWpB/hjnuEK26laid/SuwRr3U9LF+rsh0=",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "wallet_2",
					"value": "XQS7TkMNybqFHvaVjPkPphzjPf15LAjdFQ",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "pass_2",
					"value": "qwerty",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "repeat_pass_2",
					"value": "qwerty1",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "word_2",
					"value": "minexbank1",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "sign_2",
					"value": "H9hx6pBCJuD9rbfcK8BwzvvTtVP+tdW7BKeLcMioaSf/O/eQn8WP26tKJQ6pJft4mtLxj9ntxQZeIWdAlJgx5UQ=",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "resetToken",
					"value": "_0zBJuBuCj23T7CP5j6upxmMlXlmXtHZ",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "h.tokenType",
					"value": "Bearer JWT",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "h.token",
					"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpZCI6IkE2V1FKMURLOVF5amV6Z2ZHZVl1cGJjMFlPanRia0xiIiwidXNlcklkIjoyLCJhZGRyZXNzIjoiWEQ0d2ttc2g2VkIySjEyenJSWlM1U0dZalFkV2ZWTXZBeiIsImlwIjoiOTEuMjMzLjExMS40OCIsInVzZXJBZ2VudCI6IlBvc3RtYW5SdW50aW1lXC82LjQuMSIsInNlc3Npb25UaW1lIjo5MDAsImRhdGVDcmVhdGVkIjoxNTA5MzgzMzIzLCJkYXRlQ2xvc2VkIjoxNTA5Mzg0MjIzfQ.A0Nxd3Gh9ollsNeBB-3dCs3Z1bnHWeHE-ZjWTBzaChu138GoMVFCEfPG_011B0-TwRvgIUiAsJr1dP5fiUXE97MhWB711MqzD0RvctrjVjhruL-2WUU1m7Rn9p6-m5nWbXwjJ9_TXsihkvu3IWRJEIpup3Jdiasn9FtXGDCPxWUorEyvDV3tzqTP6a7bGUIRvTgt0x9fTiD5uImNk-eR1qpPbeWgyNmp_b3aQ0jY3VhBGuFh5GhkBU_8Zj1E7tkIIZvV7VE1atiozE82HPuLp1pxgtcjVVFPI4OJUUn9OLeUGfcNxNws-hzR_nKRC4dq_wljUgw5kJSAbEHX_ux-qBj6MItEuJbYLLcQcpmTjwVxbE0YZMQZLyw48D5jhYLcX5q0zBLyGRRCtb3FKwpDSFnf-cxD9HN-JL6dflWQoW3M7TQ2bPJq61JZLn-8YLUp_J9k2wq4KGGEWVr97oZcgG8xWCX6TeH3Vw3B223fIJIYtj7SUEnOq9bxH-Ptcb4Yh8gagRqmwpemI6pOnE9o5jwr3zk8zJw0h4eLxKlBbZuV5kbtpheaQjDk-etE7cBsrOM-PhlmPQtsD1Fj9SmauVL4tVBc1iT30s70dvurYHkKs0EdeOGtxGUSiMlVW88AwsCGrIlda-ogGS3khum6QNov-QuUgLOzlhG70JDMig",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "h.userid",
					"value": "2",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "zero_amount",
					"value": "0",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "park_type_id",
					"value": "1",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "park_type_rate",
					"value": "0.1",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "park_amount",
					"value": "0.125",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "park_id",
					"value": "1",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "last_comleted",
					"value": "completed",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "canceled_parking_id",
					"value": "99",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "activated_parking_id",
					"value": "99",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "total_parking_amount",
					"value": "0.22500000",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "total_parking_amount2",
					"value": "0.22500000",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "parking_balance",
					"value": "0.22500000",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "summ_total_parking_amount",
					"value": "0.45000000",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "minexexplorer_prod_url",
					"value": "https://minexexplorer.com/api/",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "wallet_balance_from_explorer",
					"value": "5.00112434",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "last_notifications",
					"value": "0",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "chat_id",
					"value": "93",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "new_pass",
					"value": "123456",
					"type": "text"
				},
				{
					"enabled": true,
					"key": "fail_new_pass",
					"value": "87654321",
					"type": "text"
				}
			],
			"team": null,
			"timestamp": 1509383350891
		}
	],
	"headerPresets": [],
	"globals": []
}